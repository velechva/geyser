"use strict";
n.r(t);
var r = {};
n.r(r), n.d(r, "addTrackers", (function()
{
    return ly
})), n.d(r, "initialize", (function()
{
    return fy
})), n.d(r, "ga", (function()
{
    return hy
})), n.d(r, "set", (function()
{
    return dy
})), n.d(r, "send", (function()
{
    return py
})), n.d(r, "pageview", (function()
{
    return my
})), n.d(r, "modalview", (function()
{
    return vy
})), n.d(r, "timing", (function()
{
    return gy
})), n.d(r, "event", (function()
{
    return yy
})), n.d(r, "exception", (function()
{
    return by
})), n.d(r, "plugin", (function()
{
    return wy
})), n.d(r, "outboundLink", (function()
{
    return _y
})), n.d(r, "testModeAPI", (function()
{
    return xy
})), n.d(r, "default", (function()
{
    return Ey
}));
var i = {};
n.r(i), n.d(i, "FunctionToString", (function()
{
    return O_
})), n.d(i, "InboundFilters", (function()
{
    return J_
}));
var o = n(0),
    a = n.n(o),
    s = n(20),
    c = n.n(s),
    u = n(244),
    l = "object" == typeof self && self && self.Object === Object && self,
    f = (u.a || l || Function("return this")()).Symbol,
    h = Object.prototype,
    d = h.hasOwnProperty,
    p = h.toString,
    m = f ? f.toStringTag : void 0;
var v = function(e)
    {
        var t = d.call(e, m),
            n = e[m];
        try
        {
            e[m] = void 0;
            var r = !0
        }
        catch (e)
        {}
        var i = p.call(e);
        return r && (t ? e[m] = n : delete e[m]), i
    },
    g = Object.prototype.toString;
var y = function(e)
    {
        return g.call(e)
    },
    b = f ? f.toStringTag : void 0;
var w = function(e)
{
    return null == e ? void 0 === e ? "[object Undefined]" : "[object Null]" : b && b in Object(e) ? v(e) : y(e)
};
var _ = function(e, t)
{
    return function(n)
    {
        return e(t(n))
    }
}(Object.getPrototypeOf, Object);
var x = function(e)
    {
        return null != e && "object" == typeof e
    },
    E = Function.prototype,
    S = Object.prototype,
    M = E.toString,
    T = S.hasOwnProperty,
    k = M.call(Object);
var A = function(e)
    {
        if (!x(e) || "[object Object]" != w(e)) return !1;
        var t = _(e);
        if (null === t) return !0;
        var n = T.call(t, "constructor") && t.constructor;
        return "function" == typeof n && n instanceof n && M.call(n) == k
    },
    C = n(143),
    O = "@@redux/INIT";

function P(e, t)
{
    var n = t && t.type;
    return "Given action " + (n && '"' + n.toString() + '"' || "an action") + ', reducer "' + e + '" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'
}

function R(e, t)
{
    return function()
    {
        return t(e.apply(void 0, arguments))
    }
}

function I()
{
    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
    return 0 === t.length ? function(e)
    {
        return e
    } : 1 === t.length ? t[0] : t.reduce((function(e, t)
    {
        return function()
        {
            return e(t.apply(void 0, arguments))
        }
    }))
}
var N = Object.assign || function(e)
{
    for (var t = 1; t < arguments.length; t++)
    {
        var n = arguments[t];
        for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
    }
    return e
};
var L = n(16),
    B = n(2),
    j = n.n(B),
    F = j.a.shape(
    {
        trySubscribe: j.a.func.isRequired,
        tryUnsubscribe: j.a.func.isRequired,
        notifyNestedSubs: j.a.func.isRequired,
        isSubscribed: j.a.func.isRequired
    }),
    U = j.a.shape(
    {
        subscribe: j.a.func.isRequired,
        dispatch: j.a.func.isRequired,
        getState: j.a.func.isRequired
    });
a.a.forwardRef;
var D = function(e)
    {
        var t;
        void 0 === e && (e = "store");
        var n = e + "Subscription",
            r = function(t)
            {
                Object(L.a)(i, t);
                var r = i.prototype;

                function i(n, r)
                {
                    var i;
                    return (i = t.call(this, n, r) || this)[e] = n.store, i
                }
                return r.getChildContext = function()
                {
                    var t;
                    return (t = {})[e] = this[e], t[n] = null, t
                }, r.render = function()
                {
                    return o.Children.only(this.props.children)
                }, i
            }(o.Component);
        return r.propTypes = {
            store: U.isRequired,
            children: j.a.element.isRequired
        }, r.childContextTypes = ((t = {})[e] = U.isRequired, t[n] = F, t), r
    }(),
    z = n(45),
    H = n(1),
    V = n(21),
    W = n(48),
    G = n.n(W),
    q = n(112),
    $ = n.n(q),
    K = n(90),
    Y = {
        notify: function() {}
    };
var X = function()
    {
        function e(e, t, n)
        {
            this.store = e, this.parentSub = t, this.onStateChange = n, this.unsubscribe = null, this.listeners = Y
        }
        var t = e.prototype;
        return t.addNestedSub = function(e)
        {
            return this.trySubscribe(), this.listeners.subscribe(e)
        }, t.notifyNestedSubs = function()
        {
            this.listeners.notify()
        }, t.isSubscribed = function()
        {
            return Boolean(this.unsubscribe)
        }, t.trySubscribe = function()
        {
            var e, t;
            this.unsubscribe || (this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.onStateChange) : this.store.subscribe(this.onStateChange), this.listeners = (e = [], t = [],
            {
                clear: function()
                {
                    t = null, e = null
                },
                notify: function()
                {
                    for (var n = e = t, r = 0; r < n.length; r++) n[r]()
                },
                get: function()
                {
                    return t
                },
                subscribe: function(n)
                {
                    var r = !0;
                    return t === e && (t = e.slice()), t.push(n),
                        function()
                        {
                            r && null !== e && (r = !1, t === e && (t = e.slice()), t.splice(t.indexOf(n), 1))
                        }
                }
            }))
        }, t.tryUnsubscribe = function()
        {
            this.unsubscribe && (this.unsubscribe(), this.unsubscribe = null, this.listeners.clear(), this.listeners = Y)
        }, e
    }(),
    J = void 0 !== a.a.forwardRef,
    Z = 0,
    Q = {};

function ee()
{}

function te(e, t)
{
    var n, r;
    void 0 === t && (t = {});
    var i = t,
        a = i.getDisplayName,
        s = void 0 === a ? function(e)
        {
            return "ConnectAdvanced(" + e + ")"
        } : a,
        c = i.methodName,
        u = void 0 === c ? "connectAdvanced" : c,
        l = i.renderCountProp,
        f = void 0 === l ? void 0 : l,
        h = i.shouldHandleStateChanges,
        d = void 0 === h || h,
        p = i.storeKey,
        m = void 0 === p ? "store" : p,
        v = i.withRef,
        g = void 0 !== v && v,
        y = Object(V.a)(i, ["getDisplayName", "methodName", "renderCountProp", "shouldHandleStateChanges", "storeKey", "withRef"]),
        b = m + "Subscription",
        w = Z++,
        _ = ((n = {})[m] = U, n[b] = F, n),
        x = ((r = {})[b] = F, r);
    return function(t)
    {
        $()(Object(K.isValidElementType)(t), "You must pass a component to the function returned by " + u + ". Instead received " + JSON.stringify(t));
        var n = t.displayName || t.name || "Component",
            r = s(n),
            i = Object(H.a)(
            {}, y,
            {
                getDisplayName: s,
                methodName: u,
                renderCountProp: f,
                shouldHandleStateChanges: d,
                storeKey: m,
                withRef: g,
                displayName: r,
                wrappedComponentName: n,
                WrappedComponent: t
            }),
            a = function(n)
            {
                function a(e, t)
                {
                    var i;
                    return (i = n.call(this, e, t) || this).version = w, i.state = {}, i.renderCount = 0, i.store = e[m] || t[m], i.propsMode = Boolean(e[m]), i.setWrappedInstance = i.setWrappedInstance.bind(Object(z.a)(Object(z.a)(i))), $()(i.store, 'Could not find "' + m + '" in either the context or props of "' + r + '". Either wrap the root component in a <Provider>, or explicitly pass "' + m + '" as a prop to "' + r + '".'), i.initSelector(), i.initSubscription(), i
                }
                Object(L.a)(a, n);
                var s = a.prototype;
                return s.getChildContext = function()
                {
                    var e, t = this.propsMode ? null : this.subscription;
                    return (e = {})[b] = t || this.context[b], e
                }, s.componentDidMount = function()
                {
                    d && (this.subscription.trySubscribe(), this.selector.run(this.props), this.selector.shouldComponentUpdate && this.forceUpdate())
                }, s.componentWillReceiveProps = function(e)
                {
                    this.selector.run(e)
                }, s.shouldComponentUpdate = function()
                {
                    return this.selector.shouldComponentUpdate
                }, s.componentWillUnmount = function()
                {
                    this.subscription && this.subscription.tryUnsubscribe(), this.subscription = null, this.notifyNestedSubs = ee, this.store = null, this.selector.run = ee, this.selector.shouldComponentUpdate = !1
                }, s.getWrappedInstance = function()
                {
                    return $()(g, "To access the wrapped instance, you need to specify { withRef: true } in the options argument of the " + u + "() call."), this.wrappedInstance
                }, s.setWrappedInstance = function(e)
                {
                    this.wrappedInstance = e
                }, s.initSelector = function()
                {
                    var t = e(this.store.dispatch, i);
                    this.selector = function(e, t)
                    {
                        var n = {
                            run: function(r)
                            {
                                try
                                {
                                    var i = e(t.getState(), r);
                                    (i !== n.props || n.error) && (n.shouldComponentUpdate = !0, n.props = i, n.error = null)
                                }
                                catch (e)
                                {
                                    n.shouldComponentUpdate = !0, n.error = e
                                }
                            }
                        };
                        return n
                    }(t, this.store), this.selector.run(this.props)
                }, s.initSubscription = function()
                {
                    if (d)
                    {
                        var e = (this.propsMode ? this.props : this.context)[b];
                        this.subscription = new X(this.store, e, this.onStateChange.bind(this)), this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription)
                    }
                }, s.onStateChange = function()
                {
                    this.selector.run(this.props), this.selector.shouldComponentUpdate ? (this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate, this.setState(Q)) : this.notifyNestedSubs()
                }, s.notifyNestedSubsOnComponentDidUpdate = function()
                {
                    this.componentDidUpdate = void 0, this.notifyNestedSubs()
                }, s.isSubscribed = function()
                {
                    return Boolean(this.subscription) && this.subscription.isSubscribed()
                }, s.addExtraProps = function(e)
                {
                    if (!(g || f || this.propsMode && this.subscription)) return e;
                    var t = Object(H.a)(
                    {}, e);
                    return g && (t.ref = this.setWrappedInstance), f && (t[f] = this.renderCount++), this.propsMode && this.subscription && (t[b] = this.subscription), t
                }, s.render = function()
                {
                    var e = this.selector;
                    if (e.shouldComponentUpdate = !1, e.error) throw e.error;
                    return Object(o.createElement)(t, this.addExtraProps(e.props))
                }, a
            }(o.Component);
        return J && (a.prototype.UNSAFE_componentWillReceiveProps = a.prototype.componentWillReceiveProps, delete a.prototype.componentWillReceiveProps), a.WrappedComponent = t, a.displayName = r, a.childContextTypes = x, a.contextTypes = _, a.propTypes = _, G()(a, t)
    }
}
var ne = Object.prototype.hasOwnProperty;

function re(e, t)
{
    return e === t ? 0 !== e || 0 !== t || 1 / e == 1 / t : e != e && t != t
}

function ie(e, t)
{
    if (re(e, t)) return !0;
    if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
    var n = Object.keys(e),
        r = Object.keys(t);
    if (n.length !== r.length) return !1;
    for (var i = 0; i < n.length; i++)
        if (!ne.call(t, n[i]) || !re(e[n[i]], t[n[i]])) return !1;
    return !0
}

function oe(e)
{
    return function(t, n)
    {
        var r = e(t, n);

        function i()
        {
            return r
        }
        return i.dependsOnOwnProps = !1, i
    }
}

function ae(e)
{
    return null !== e.dependsOnOwnProps && void 0 !== e.dependsOnOwnProps ? Boolean(e.dependsOnOwnProps) : 1 !== e.length
}

function se(e, t)
{
    return function(t, n)
    {
        n.displayName;
        var r = function(e, t)
        {
            return r.dependsOnOwnProps ? r.mapToProps(e, t) : r.mapToProps(e)
        };
        return r.dependsOnOwnProps = !0, r.mapToProps = function(t, n)
        {
            r.mapToProps = e, r.dependsOnOwnProps = ae(e);
            var i = r(t, n);
            return "function" == typeof i && (r.mapToProps = i, r.dependsOnOwnProps = ae(i), i = r(t, n)), i
        }, r
    }
}
var ce = [function(e)
{
    return "function" == typeof e ? se(e) : void 0
}, function(e)
{
    return e ? void 0 : oe((function(e)
    {
        return {
            dispatch: e
        }
    }))
}, function(e)
{
    return e && "object" == typeof e ? oe((function(t)
    {
        return function(e, t)
        {
            if ("function" == typeof e) return R(e, t);
            if ("object" != typeof e || null === e) throw new Error("bindActionCreators expected an object or a function, instead received " + (null === e ? "null" : typeof e) + '. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');
            for (var n = Object.keys(e), r = {}, i = 0; i < n.length; i++)
            {
                var o = n[i],
                    a = e[o];
                "function" == typeof a && (r[o] = R(a, t))
            }
            return r
        }(e, t)
    })) : void 0
}];
var ue = [function(e)
{
    return "function" == typeof e ? se(e) : void 0
}, function(e)
{
    return e ? void 0 : oe((function()
    {
        return {}
    }))
}];

function le(e, t, n)
{
    return Object(H.a)(
    {}, n, e, t)
}
var fe = [function(e)
{
    return "function" == typeof e ? function(e)
    {
        return function(t, n)
        {
            n.displayName;
            var r, i = n.pure,
                o = n.areMergedPropsEqual,
                a = !1;
            return function(t, n, s)
            {
                var c = e(t, n, s);
                return a ? i && o(c, r) || (r = c) : (a = !0, r = c), r
            }
        }
    }(e) : void 0
}, function(e)
{
    return e ? void 0 : function()
    {
        return le
    }
}];

function he(e, t, n, r)
{
    return function(i, o)
    {
        return n(e(i, o), t(r, o), o)
    }
}

function de(e, t, n, r, i)
{
    var o, a, s, c, u, l = i.areStatesEqual,
        f = i.areOwnPropsEqual,
        h = i.areStatePropsEqual,
        d = !1;

    function p(i, d)
    {
        var p, m, v = !f(d, a),
            g = !l(i, o);
        return o = i, a = d, v && g ? (s = e(o, a), t.dependsOnOwnProps && (c = t(r, a)), u = n(s, c, a)) : v ? (e.dependsOnOwnProps && (s = e(o, a)), t.dependsOnOwnProps && (c = t(r, a)), u = n(s, c, a)) : g ? (p = e(o, a), m = !h(p, s), s = p, m && (u = n(s, c, a)), u) : u
    }
    return function(i, l)
    {
        return d ? p(i, l) : (s = e(o = i, a = l), c = t(r, a), u = n(s, c, a), d = !0, u)
    }
}

function pe(e, t)
{
    var n = t.initMapStateToProps,
        r = t.initMapDispatchToProps,
        i = t.initMergeProps,
        o = Object(V.a)(t, ["initMapStateToProps", "initMapDispatchToProps", "initMergeProps"]),
        a = n(e, o),
        s = r(e, o),
        c = i(e, o);
    return (o.pure ? de : he)(a, s, c, e, o)
}

function me(e, t, n)
{
    for (var r = t.length - 1; r >= 0; r--)
    {
        var i = t[r](e);
        if (i) return i
    }
    return function(t, r)
    {
        throw new Error("Invalid value of type " + typeof e + " for " + n + " argument when connecting component " + r.wrappedComponentName + ".")
    }
}

function ve(e, t)
{
    return e === t
}
var ge, ye, be, we, _e, xe, Ee, Se, Me, Te, ke, Ae, Ce = (be = (ye = void 0 === ge ?
{} : ge).connectHOC, we = void 0 === be ? te : be, _e = ye.mapStateToPropsFactories, xe = void 0 === _e ? ue : _e, Ee = ye.mapDispatchToPropsFactories, Se = void 0 === Ee ? ce : Ee, Me = ye.mergePropsFactories, Te = void 0 === Me ? fe : Me, ke = ye.selectorFactory, Ae = void 0 === ke ? pe : ke, function(e, t, n, r)
{
    void 0 === r && (r = {});
    var i = r,
        o = i.pure,
        a = void 0 === o || o,
        s = i.areStatesEqual,
        c = void 0 === s ? ve : s,
        u = i.areOwnPropsEqual,
        l = void 0 === u ? ie : u,
        f = i.areStatePropsEqual,
        h = void 0 === f ? ie : f,
        d = i.areMergedPropsEqual,
        p = void 0 === d ? ie : d,
        m = Object(V.a)(i, ["pure", "areStatesEqual", "areOwnPropsEqual", "areStatePropsEqual", "areMergedPropsEqual"]),
        v = me(e, xe, "mapStateToProps"),
        g = me(t, Se, "mapDispatchToProps"),
        y = me(n, Te, "mergeProps");
    return we(Ae, Object(H.a)(
    {
        methodName: "connect",
        getDisplayName: function(e)
        {
            return "Connect(" + e + ")"
        },
        shouldHandleStateChanges: Boolean(e),
        initMapStateToProps: v,
        initMapDispatchToProps: g,
        initMergeProps: y,
        pure: a,
        areStatesEqual: c,
        areOwnPropsEqual: l,
        areStatePropsEqual: h,
        areMergedPropsEqual: p
    }, m))
});

function Oe(e)
{
    return function(t)
    {
        var n = t.dispatch,
            r = t.getState;
        return function(t)
        {
            return function(i)
            {
                return "function" == typeof i ? i(n, r, e) : t(i)
            }
        }
    }
}
var Pe = Oe();
Pe.withExtraArgument = Oe;
var Re = Pe;

function Ie(e)
{
    return "/" === e.charAt(0)
}

function Ne(e, t)
{
    for (var n = t, r = n + 1, i = e.length; r < i; n += 1, r += 1) e[n] = e[r];
    e.pop()
}
var Le = function(e, t)
{
    void 0 === t && (t = "");
    var n, r = e && e.split("/") || [],
        i = t && t.split("/") || [],
        o = e && Ie(e),
        a = t && Ie(t),
        s = o || a;
    if (e && Ie(e) ? i = r : r.length && (i.pop(), i = i.concat(r)), !i.length) return "/";
    if (i.length)
    {
        var c = i[i.length - 1];
        n = "." === c || ".." === c || "" === c
    }
    else n = !1;
    for (var u = 0, l = i.length; l >= 0; l--)
    {
        var f = i[l];
        "." === f ? Ne(i, l) : ".." === f ? (Ne(i, l), u++) : u && (Ne(i, l), u--)
    }
    if (!s)
        for (; u--; u) i.unshift("..");
    !s || "" === i[0] || i[0] && Ie(i[0]) || i.unshift("");
    var h = i.join("/");
    return n && "/" !== h.substr(-1) && (h += "/"), h
};

function Be(e)
{
    return e.valueOf ? e.valueOf() : Object.prototype.valueOf.call(e)
}
var je = function e(t, n)
{
    if (t === n) return !0;
    if (null == t || null == n) return !1;
    if (Array.isArray(t)) return Array.isArray(n) && t.length === n.length && t.every((function(t, r)
    {
        return e(t, n[r])
    }));
    if ("object" == typeof t || "object" == typeof n)
    {
        var r = Be(t),
            i = Be(n);
        return r !== t || i !== n ? e(r, i) : Object.keys(Object.assign(
        {}, t, n)).every((function(r)
        {
            return e(t[r], n[r])
        }))
    }
    return !1
};
var Fe = function(e, t)
{
    if (!e) throw new Error("Invariant failed")
};

function Ue(e)
{
    return "/" === e.charAt(0) ? e : "/" + e
}

function De(e)
{
    return "/" === e.charAt(0) ? e.substr(1) : e
}

function ze(e, t)
{
    return function(e, t)
    {
        return 0 === e.toLowerCase().indexOf(t.toLowerCase()) && -1 !== "/?#".indexOf(e.charAt(t.length))
    }(e, t) ? e.substr(t.length) : e
}

function He(e)
{
    return "/" === e.charAt(e.length - 1) ? e.slice(0, -1) : e
}

function Ve(e)
{
    var t = e.pathname,
        n = e.search,
        r = e.hash,
        i = t || "/";
    return n && "?" !== n && (i += "?" === n.charAt(0) ? n : "?" + n), r && "#" !== r && (i += "#" === r.charAt(0) ? r : "#" + r), i
}

function We(e, t, n, r)
{
    var i;
    "string" == typeof e ? (i = function(e)
    {
        var t = e || "/",
            n = "",
            r = "",
            i = t.indexOf("#"); - 1 !== i && (r = t.substr(i), t = t.substr(0, i));
        var o = t.indexOf("?");
        return -1 !== o && (n = t.substr(o), t = t.substr(0, o)),
        {
            pathname: t,
            search: "?" === n ? "" : n,
            hash: "#" === r ? "" : r
        }
    }(e)).state = t : (void 0 === (i = Object(H.a)(
    {}, e)).pathname && (i.pathname = ""), i.search ? "?" !== i.search.charAt(0) && (i.search = "?" + i.search) : i.search = "", i.hash ? "#" !== i.hash.charAt(0) && (i.hash = "#" + i.hash) : i.hash = "", void 0 !== t && void 0 === i.state && (i.state = t));
    try
    {
        i.pathname = decodeURI(i.pathname)
    }
    catch (e)
    {
        throw e instanceof URIError ? new URIError('Pathname "' + i.pathname + '" could not be decoded. This is likely caused by an invalid percent-encoding.') : e
    }
    return n && (i.key = n), r ? i.pathname ? "/" !== i.pathname.charAt(0) && (i.pathname = Le(i.pathname, r.pathname)) : i.pathname = r.pathname : i.pathname || (i.pathname = "/"), i
}

function Ge()
{
    var e = null;
    var t = [];
    return {
        setPrompt: function(t)
        {
            return e = t,
                function()
                {
                    e === t && (e = null)
                }
        },
        confirmTransitionTo: function(t, n, r, i)
        {
            if (null != e)
            {
                var o = "function" == typeof e ? e(t, n) : e;
                "string" == typeof o ? "function" == typeof r ? r(o, i) : i(!0) : i(!1 !== o)
            }
            else i(!0)
        },
        appendListener: function(e)
        {
            var n = !0;

            function r()
            {
                n && e.apply(void 0, arguments)
            }
            return t.push(r),
                function()
                {
                    n = !1, t = t.filter((function(e)
                    {
                        return e !== r
                    }))
                }
        },
        notifyListeners: function()
        {
            for (var e = arguments.length, n = new Array(e), r = 0; r < e; r++) n[r] = arguments[r];
            t.forEach((function(e)
            {
                return e.apply(void 0, n)
            }))
        }
    }
}
var qe = !("undefined" == typeof window || !window.document || !window.document.createElement);

function $e(e, t)
{
    t(window.confirm(e))
}

function Ke()
{
    try
    {
        return window.history.state ||
        {}
    }
    catch (e)
    {
        return {}
    }
}

function Ye(e)
{
    void 0 === e && (e = {}), qe || Fe(!1);
    var t, n = window.history,
        r = (-1 === (t = window.navigator.userAgent).indexOf("Android 2.") && -1 === t.indexOf("Android 4.0") || -1 === t.indexOf("Mobile Safari") || -1 !== t.indexOf("Chrome") || -1 !== t.indexOf("Windows Phone")) && window.history && "pushState" in window.history,
        i = !(-1 === window.navigator.userAgent.indexOf("Trident")),
        o = e,
        a = o.forceRefresh,
        s = void 0 !== a && a,
        c = o.getUserConfirmation,
        u = void 0 === c ? $e : c,
        l = o.keyLength,
        f = void 0 === l ? 6 : l,
        h = e.basename ? He(Ue(e.basename)) : "";

    function d(e)
    {
        var t = e ||
            {},
            n = t.key,
            r = t.state,
            i = window.location,
            o = i.pathname + i.search + i.hash;
        return h && (o = ze(o, h)), We(o, r, n)
    }

    function p()
    {
        return Math.random().toString(36).substr(2, f)
    }
    var m = Ge();

    function v(e)
    {
        Object(H.a)(A, e), A.length = n.length, m.notifyListeners(A.location, A.action)
    }

    function g(e)
    {
        (function(e)
        {
            return void 0 === e.state && -1 === navigator.userAgent.indexOf("CriOS")
        })(e) || w(d(e.state))
    }

    function y()
    {
        w(d(Ke()))
    }
    var b = !1;

    function w(e)
    {
        if (b) b = !1, v();
        else
        {
            m.confirmTransitionTo(e, "POP", u, (function(t)
            {
                t ? v(
                {
                    action: "POP",
                    location: e
                }) : function(e)
                {
                    var t = A.location,
                        n = x.indexOf(t.key); - 1 === n && (n = 0);
                    var r = x.indexOf(e.key); - 1 === r && (r = 0);
                    var i = n - r;
                    i && (b = !0, S(i))
                }(e)
            }))
        }
    }
    var _ = d(Ke()),
        x = [_.key];

    function E(e)
    {
        return h + Ve(e)
    }

    function S(e)
    {
        n.go(e)
    }
    var M = 0;

    function T(e)
    {
        1 === (M += e) && 1 === e ? (window.addEventListener("popstate", g), i && window.addEventListener("hashchange", y)) : 0 === M && (window.removeEventListener("popstate", g), i && window.removeEventListener("hashchange", y))
    }
    var k = !1;
    var A = {
        length: n.length,
        action: "POP",
        location: _,
        createHref: E,
        push: function(e, t)
        {
            var i = We(e, t, p(), A.location);
            m.confirmTransitionTo(i, "PUSH", u, (function(e)
            {
                if (e)
                {
                    var t = E(i),
                        o = i.key,
                        a = i.state;
                    if (r)
                        if (n.pushState(
                            {
                                key: o,
                                state: a
                            }, null, t), s) window.location.href = t;
                        else
                        {
                            var c = x.indexOf(A.location.key),
                                u = x.slice(0, c + 1);
                            u.push(i.key), x = u, v(
                            {
                                action: "PUSH",
                                location: i
                            })
                        }
                    else window.location.href = t
                }
            }))
        },
        replace: function(e, t)
        {
            var i = We(e, t, p(), A.location);
            m.confirmTransitionTo(i, "REPLACE", u, (function(e)
            {
                if (e)
                {
                    var t = E(i),
                        o = i.key,
                        a = i.state;
                    if (r)
                        if (n.replaceState(
                            {
                                key: o,
                                state: a
                            }, null, t), s) window.location.replace(t);
                        else
                        {
                            var c = x.indexOf(A.location.key); - 1 !== c && (x[c] = i.key), v(
                            {
                                action: "REPLACE",
                                location: i
                            })
                        }
                    else window.location.replace(t)
                }
            }))
        },
        go: S,
        goBack: function()
        {
            S(-1)
        },
        goForward: function()
        {
            S(1)
        },
        block: function(e)
        {
            void 0 === e && (e = !1);
            var t = m.setPrompt(e);
            return k || (T(1), k = !0),
                function()
                {
                    return k && (k = !1, T(-1)), t()
                }
        },
        listen: function(e)
        {
            var t = m.appendListener(e);
            return T(1),
                function()
                {
                    T(-1), t()
                }
        }
    };
    return A
}
var Xe = {
    hashbang:
    {
        encodePath: function(e)
        {
            return "!" === e.charAt(0) ? e : "!/" + De(e)
        },
        decodePath: function(e)
        {
            return "!" === e.charAt(0) ? e.substr(1) : e
        }
    },
    noslash:
    {
        encodePath: De,
        decodePath: Ue
    },
    slash:
    {
        encodePath: Ue,
        decodePath: Ue
    }
};

function Je(e)
{
    var t = e.indexOf("#");
    return -1 === t ? e : e.slice(0, t)
}

function Ze()
{
    var e = window.location.href,
        t = e.indexOf("#");
    return -1 === t ? "" : e.substring(t + 1)
}

function Qe(e)
{
    window.location.replace(Je(window.location.href) + "#" + e)
}

function et(e)
{
    void 0 === e && (e = {}), qe || Fe(!1);
    var t = window.history,
        n = (window.navigator.userAgent.indexOf("Firefox"), e),
        r = n.getUserConfirmation,
        i = void 0 === r ? $e : r,
        o = n.hashType,
        a = void 0 === o ? "slash" : o,
        s = e.basename ? He(Ue(e.basename)) : "",
        c = Xe[a],
        u = c.encodePath,
        l = c.decodePath;

    function f()
    {
        var e = l(Ze());
        return s && (e = ze(e, s)), We(e)
    }
    var h = Ge();

    function d(e)
    {
        Object(H.a)(M, e), M.length = t.length, h.notifyListeners(M.location, M.action)
    }
    var p = !1,
        m = null;

    function v()
    {
        var e, t, n = Ze(),
            r = u(n);
        if (n !== r) Qe(r);
        else
        {
            var o = f(),
                a = M.location;
            if (!p && (t = o, (e = a).pathname === t.pathname && e.search === t.search && e.hash === t.hash)) return;
            if (m === Ve(o)) return;
            m = null,
                function(e)
                {
                    if (p) p = !1, d();
                    else
                    {
                        h.confirmTransitionTo(e, "POP", i, (function(t)
                        {
                            t ? d(
                            {
                                action: "POP",
                                location: e
                            }) : function(e)
                            {
                                var t = M.location,
                                    n = w.lastIndexOf(Ve(t)); - 1 === n && (n = 0);
                                var r = w.lastIndexOf(Ve(e)); - 1 === r && (r = 0);
                                var i = n - r;
                                i && (p = !0, _(i))
                            }(e)
                        }))
                    }
                }(o)
        }
    }
    var g = Ze(),
        y = u(g);
    g !== y && Qe(y);
    var b = f(),
        w = [Ve(b)];

    function _(e)
    {
        t.go(e)
    }
    var x = 0;

    function E(e)
    {
        1 === (x += e) && 1 === e ? window.addEventListener("hashchange", v) : 0 === x && window.removeEventListener("hashchange", v)
    }
    var S = !1;
    var M = {
        length: t.length,
        action: "POP",
        location: b,
        createHref: function(e)
        {
            var t = document.querySelector("base"),
                n = "";
            return t && t.getAttribute("href") && (n = Je(window.location.href)), n + "#" + u(s + Ve(e))
        },
        push: function(e, t)
        {
            var n = We(e, void 0, void 0, M.location);
            h.confirmTransitionTo(n, "PUSH", i, (function(e)
            {
                if (e)
                {
                    var t = Ve(n),
                        r = u(s + t);
                    if (Ze() !== r)
                    {
                        m = t,
                            function(e)
                            {
                                window.location.hash = e
                            }(r);
                        var i = w.lastIndexOf(Ve(M.location)),
                            o = w.slice(0, i + 1);
                        o.push(t), w = o, d(
                        {
                            action: "PUSH",
                            location: n
                        })
                    }
                    else d()
                }
            }))
        },
        replace: function(e, t)
        {
            var n = We(e, void 0, void 0, M.location);
            h.confirmTransitionTo(n, "REPLACE", i, (function(e)
            {
                if (e)
                {
                    var t = Ve(n),
                        r = u(s + t);
                    Ze() !== r && (m = t, Qe(r));
                    var i = w.indexOf(Ve(M.location)); - 1 !== i && (w[i] = t), d(
                    {
                        action: "REPLACE",
                        location: n
                    })
                }
            }))
        },
        go: _,
        goBack: function()
        {
            _(-1)
        },
        goForward: function()
        {
            _(1)
        },
        block: function(e)
        {
            void 0 === e && (e = !1);
            var t = h.setPrompt(e);
            return S || (E(1), S = !0),
                function()
                {
                    return S && (S = !1, E(-1)), t()
                }
        },
        listen: function(e)
        {
            var t = h.appendListener(e);
            return E(1),
                function()
                {
                    E(-1), t()
                }
        }
    };
    return M
}

function tt(e, t, n)
{
    return Math.min(Math.max(e, t), n)
}

function nt(e)
{
    void 0 === e && (e = {});
    var t = e,
        n = t.getUserConfirmation,
        r = t.initialEntries,
        i = void 0 === r ? ["/"] : r,
        o = t.initialIndex,
        a = void 0 === o ? 0 : o,
        s = t.keyLength,
        c = void 0 === s ? 6 : s,
        u = Ge();

    function l(e)
    {
        Object(H.a)(v, e), v.length = v.entries.length, u.notifyListeners(v.location, v.action)
    }

    function f()
    {
        return Math.random().toString(36).substr(2, c)
    }
    var h = tt(a, 0, i.length - 1),
        d = i.map((function(e)
        {
            return We(e, void 0, "string" == typeof e ? f() : e.key || f())
        })),
        p = Ve;

    function m(e)
    {
        var t = tt(v.index + e, 0, v.entries.length - 1),
            r = v.entries[t];
        u.confirmTransitionTo(r, "POP", n, (function(e)
        {
            e ? l(
            {
                action: "POP",
                location: r,
                index: t
            }) : l()
        }))
    }
    var v = {
        length: d.length,
        action: "POP",
        location: d[h],
        index: h,
        entries: d,
        createHref: p,
        push: function(e, t)
        {
            var r = We(e, t, f(), v.location);
            u.confirmTransitionTo(r, "PUSH", n, (function(e)
            {
                if (e)
                {
                    var t = v.index + 1,
                        n = v.entries.slice(0);
                    n.length > t ? n.splice(t, n.length - t, r) : n.push(r), l(
                    {
                        action: "PUSH",
                        location: r,
                        index: t,
                        entries: n
                    })
                }
            }))
        },
        replace: function(e, t)
        {
            var r = We(e, t, f(), v.location);
            u.confirmTransitionTo(r, "REPLACE", n, (function(e)
            {
                e && (v.entries[v.index] = r, l(
                {
                    action: "REPLACE",
                    location: r
                }))
            }))
        },
        go: m,
        goBack: function()
        {
            m(-1)
        },
        goForward: function()
        {
            m(1)
        },
        canGo: function(e)
        {
            var t = v.index + e;
            return t >= 0 && t < v.entries.length
        },
        block: function(e)
        {
            return void 0 === e && (e = !1), u.setPrompt(e)
        },
        listen: function(e)
        {
            return u.appendListener(e)
        }
    };
    return v
}
var rt = n(148),
    it = n(149),
    ot = n.n(it),
    at = function(e)
    {
        var t = Object(rt.a)();
        return t.displayName = e, t
    }("Router-History"),
    st = function(e)
    {
        var t = Object(rt.a)();
        return t.displayName = e, t
    }("Router"),
    ct = function(e)
    {
        function t(t)
        {
            var n;
            return (n = e.call(this, t) || this).state = {
                location: t.history.location
            }, n._isMounted = !1, n._pendingLocation = null, t.staticContext || (n.unlisten = t.history.listen((function(e)
            {
                n._isMounted ? n.setState(
                {
                    location: e
                }) : n._pendingLocation = e
            }))), n
        }
        Object(L.a)(t, e), t.computeRootMatch = function(e)
        {
            return {
                path: "/",
                url: "/",
                params:
                {},
                isExact: "/" === e
            }
        };
        var n = t.prototype;
        return n.componentDidMount = function()
        {
            this._isMounted = !0, this._pendingLocation && this.setState(
            {
                location: this._pendingLocation
            })
        }, n.componentWillUnmount = function()
        {
            this.unlisten && this.unlisten()
        }, n.render = function()
        {
            return a.a.createElement(st.Provider,
            {
                value:
                {
                    history: this.props.history,
                    location: this.state.location,
                    match: t.computeRootMatch(this.state.location.pathname),
                    staticContext: this.props.staticContext
                }
            }, a.a.createElement(at.Provider,
            {
                children: this.props.children || null,
                value: this.props.history
            }))
        }, t
    }(a.a.Component);
a.a.Component;
var ut = function(e)
{
    function t()
    {
        return e.apply(this, arguments) || this
    }
    Object(L.a)(t, e);
    var n = t.prototype;
    return n.componentDidMount = function()
    {
        this.props.onMount && this.props.onMount.call(this, this)
    }, n.componentDidUpdate = function(e)
    {
        this.props.onUpdate && this.props.onUpdate.call(this, this, e)
    }, n.componentWillUnmount = function()
    {
        this.props.onUnmount && this.props.onUnmount.call(this, this)
    }, n.render = function()
    {
        return null
    }, t
}(a.a.Component);
var lt = {},
    ft = 0;

function ht(e, t)
{
    return void 0 === e && (e = "/"), void 0 === t && (t = {}), "/" === e ? e : function(e)
    {
        if (lt[e]) return lt[e];
        var t = ot.a.compile(e);
        return ft < 1e4 && (lt[e] = t, ft++), t
    }(e)(t,
    {
        pretty: !0
    })
}

function dt(e)
{
    var t = e.computedMatch,
        n = e.to,
        r = e.push,
        i = void 0 !== r && r;
    return a.a.createElement(st.Consumer, null, (function(e)
    {
        e || Fe(!1);
        var r = e.history,
            o = e.staticContext,
            s = i ? r.push : r.replace,
            c = We(t ? "string" == typeof n ? ht(n, t.params) : Object(H.a)(
            {}, n,
            {
                pathname: ht(n.pathname, t.params)
            }) : n);
        return o ? (s(c), null) : a.a.createElement(ut,
        {
            onMount: function()
            {
                s(c)
            },
            onUpdate: function(e, t)
            {
                var n, r, i = We(t.to);
                n = i, r = Object(H.a)(
                {}, c,
                {
                    key: i.key
                }), n.pathname === r.pathname && n.search === r.search && n.hash === r.hash && n.key === r.key && je(n.state, r.state) || s(c)
            },
            to: n
        })
    }))
}
var pt = {},
    mt = 0;

function vt(e, t)
{
    void 0 === t && (t = {}), ("string" == typeof t || Array.isArray(t)) && (t = {
        path: t
    });
    var n = t,
        r = n.path,
        i = n.exact,
        o = void 0 !== i && i,
        a = n.strict,
        s = void 0 !== a && a,
        c = n.sensitive,
        u = void 0 !== c && c;
    return [].concat(r).reduce((function(t, n)
    {
        if (!n && "" !== n) return null;
        if (t) return t;
        var r = function(e, t)
            {
                var n = "" + t.end + t.strict + t.sensitive,
                    r = pt[n] || (pt[n] = {});
                if (r[e]) return r[e];
                var i = [],
                    o = {
                        regexp: ot()(e, i, t),
                        keys: i
                    };
                return mt < 1e4 && (r[e] = o, mt++), o
            }(n,
            {
                end: o,
                strict: s,
                sensitive: u
            }),
            i = r.regexp,
            a = r.keys,
            c = i.exec(e);
        if (!c) return null;
        var l = c[0],
            f = c.slice(1),
            h = e === l;
        return o && !h ? null :
        {
            path: n,
            url: "/" === n && "" === l ? "/" : l,
            isExact: h,
            params: a.reduce((function(e, t, n)
            {
                return e[t.name] = f[n], e
            }),
            {})
        }
    }), null)
}
var gt = function(e)
{
    function t()
    {
        return e.apply(this, arguments) || this
    }
    return Object(L.a)(t, e), t.prototype.render = function()
    {
        var e = this;
        return a.a.createElement(st.Consumer, null, (function(t)
        {
            t || Fe(!1);
            var n = e.props.location || t.location,
                r = e.props.computedMatch ? e.props.computedMatch : e.props.path ? vt(n.pathname, e.props) : t.match,
                i = Object(H.a)(
                {}, t,
                {
                    location: n,
                    match: r
                }),
                o = e.props,
                s = o.children,
                c = o.component,
                u = o.render;
            return Array.isArray(s) && 0 === s.length && (s = null), a.a.createElement(st.Provider,
            {
                value: i
            }, i.match ? s ? "function" == typeof s ? s(i) : s : c ? a.a.createElement(c, i) : u ? u(i) : null : "function" == typeof s ? s(i) : null)
        }))
    }, t
}(a.a.Component);

function yt(e)
{
    return "/" === e.charAt(0) ? e : "/" + e
}

function bt(e, t)
{
    if (!e) return t;
    var n = yt(e);
    return 0 !== t.pathname.indexOf(n) ? t : Object(H.a)(
    {}, t,
    {
        pathname: t.pathname.substr(n.length)
    })
}

function wt(e)
{
    return "string" == typeof e ? e : Ve(e)
}

function _t(e)
{
    return function()
    {
        Fe(!1)
    }
}

function xt()
{}
a.a.Component;
var Et = function(e)
{
    function t()
    {
        return e.apply(this, arguments) || this
    }
    return Object(L.a)(t, e), t.prototype.render = function()
    {
        var e = this;
        return a.a.createElement(st.Consumer, null, (function(t)
        {
            t || Fe(!1);
            var n, r, i = e.props.location || t.location;
            return a.a.Children.forEach(e.props.children, (function(e)
            {
                if (null == r && a.a.isValidElement(e))
                {
                    n = e;
                    var o = e.props.path || e.props.from;
                    r = o ? vt(i.pathname, Object(H.a)(
                    {}, e.props,
                    {
                        path: o
                    })) : t.match
                }
            })), r ? a.a.cloneElement(n,
            {
                location: i,
                computedMatch: r
            }) : null
        }))
    }, t
}(a.a.Component);
a.a.useContext;
var St = function(e)
{
    function t()
    {
        for (var t, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
        return (t = e.call.apply(e, [this].concat(r)) || this).history = Ye(t.props), t
    }
    return Object(L.a)(t, e), t.prototype.render = function()
    {
        return a.a.createElement(ct,
        {
            history: this.history,
            children: this.props.children
        })
    }, t
}(a.a.Component);
a.a.Component;
var Mt = function(e, t)
    {
        return "function" == typeof e ? e(t) : e
    },
    Tt = function(e, t)
    {
        return "string" == typeof e ? We(e, null, null, t) : e
    },
    kt = function(e)
    {
        return e
    },
    At = a.a.forwardRef;
void 0 === At && (At = kt);
var Ct = At((function(e, t)
{
    var n = e.innerRef,
        r = e.navigate,
        i = e.onClick,
        o = Object(V.a)(e, ["innerRef", "navigate", "onClick"]),
        s = o.target,
        c = Object(H.a)(
        {}, o,
        {
            onClick: function(e)
            {
                try
                {
                    i && i(e)
                }
                catch (t)
                {
                    throw e.preventDefault(), t
                }
                e.defaultPrevented || 0 !== e.button || s && "_self" !== s || function(e)
                {
                    return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)
                }(e) || (e.preventDefault(), r())
            }
        });
    return c.ref = kt !== At && t || n, a.a.createElement("a", c)
}));
var Ot = At((function(e, t)
    {
        var n = e.component,
            r = void 0 === n ? Ct : n,
            i = e.replace,
            o = e.to,
            s = e.innerRef,
            c = Object(V.a)(e, ["component", "replace", "to", "innerRef"]);
        return a.a.createElement(st.Consumer, null, (function(e)
        {
            e || Fe(!1);
            var n = e.history,
                u = Tt(Mt(o, e.location), e.location),
                l = u ? n.createHref(u) : "",
                f = Object(H.a)(
                {}, c,
                {
                    href: l,
                    navigate: function()
                    {
                        var t = Mt(o, e.location);
                        (i ? n.replace : n.push)(t)
                    }
                });
            return kt !== At ? f.ref = t || s : f.innerRef = s, a.a.createElement(r, f)
        }))
    })),
    Pt = function(e)
    {
        return e
    },
    Rt = a.a.forwardRef;
void 0 === Rt && (Rt = Pt);
Rt((function(e, t)
{
    var n = e["aria-current"],
        r = void 0 === n ? "page" : n,
        i = e.activeClassName,
        o = void 0 === i ? "active" : i,
        s = e.activeStyle,
        c = e.className,
        u = e.exact,
        l = e.isActive,
        f = e.location,
        h = e.sensitive,
        d = e.strict,
        p = e.style,
        m = e.to,
        v = e.innerRef,
        g = Object(V.a)(e, ["aria-current", "activeClassName", "activeStyle", "className", "exact", "isActive", "location", "sensitive", "strict", "style", "to", "innerRef"]);
    return a.a.createElement(st.Consumer, null, (function(e)
    {
        e || Fe(!1);
        var n = f || e.location,
            i = Tt(Mt(m, n), n),
            y = i.pathname,
            b = y && y.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1"),
            w = b ? vt(n.pathname,
            {
                path: b,
                exact: u,
                sensitive: h,
                strict: d
            }) : null,
            _ = !!(l ? l(w, n) : w),
            x = _ ? function()
            {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                return t.filter((function(e)
                {
                    return e
                })).join(" ")
            }(c, o) : c,
            E = _ ? Object(H.a)(
            {}, p,
            {}, s) : p,
            S = Object(H.a)(
            {
                "aria-current": _ && r || null,
                className: x,
                style: E,
                to: i
            }, g);
        return Pt !== Rt ? S.ref = t || v : S.innerRef = v, a.a.createElement(Ot, S)
    }))
}));
var It = n(107),
    Nt = n(704),
    Lt = n(108);
var Bt = function(e)
    {
        var t = e.children,
            n = e.theme,
            r = Object(Nt.a)(),
            i = a.a.useMemo((function()
            {
                var e = null === r ? n : function(e, t)
                {
                    return "function" == typeof t ? t(e) : Object(H.a)(
                    {}, e,
                    {}, t)
                }(r, n);
                return null != e && (e[Lt.a] = null !== r), e
            }), [n, r]);
        return a.a.createElement(It.a.Provider,
        {
            value: i
        }, t)
    },
    jt = n(245),
    Ft = n.n(jt),
    Ut = n(25);

function Dt(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function zt(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                Dt(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                Dt(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
var Ht = {
    AMPL: 1,
    WETH: 220,
    WETH: 320,
    LINK: 5,
    BAL: 10,
    LEND: .33,
    COMP: 100,
    MKR: 350,
    CRV: .5,
    BZRX: .1,
    YFI: 17e3,
    NMR: 25,
    "yDAI+yUSDC+yUSDT+yTUSD": 1.1
};

function Vt(e)
{
    return Wt.apply(this, arguments)
}

function Wt()
{
    return (Wt = zt((function*(e)
    {
        var t = "geyser|".concat(e, "|spot");
        try
        {
            var n = {
                AMPL: "ampleforth",
                WETH: "ethereum",
                LINK: "chainlink",
                BAL: "balancer",
                LEND: "ethlend",
                COMP: "compound-governance-token",
                MKR: "maker",
                CRV: "curve-dao-token",
                BZRX: "bzx-protocol",
                YFI: "yearn-finance",
                NMR: "numeraire",
                "yDAI+yUSDC+yUSDT+yTUSD": "curve-fi-ydai-yusdc-yusdt-ytusd"
            } [e];
            if (!n) throw "Cant fetch price for ".concat(e);
            var r = Ut.get(t);
            if (r) return r;
            var i = new Ft.a,
                o = (yield Promise.race([i.simple.price(
                {
                    ids: [n],
                    vs_currencies: ["usd"]
                }), new Promise((e, t) => setTimeout(() => t(new Error("request timeout")), 1e4))])).data[n].usd;
            return Ut.set(t, o, 36e5), o
        }
        catch (t)
        {
            return console.error(t), Ht[e] || 0
        }
    }))).apply(this, arguments)
}
var Gt = n(246),
    qt = n(247),
    $t = n(93);

function Kt(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function Yt(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                Kt(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                Kt(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
class Xt
{
    toObj()
    {
        return {
            decimals: this.decimals,
            name: this.name,
            symbol: this.symbol,
            price: this.price,
            totalSupply: this.totalSupply,
            marketCap: this.marketCap,
            composition: this.composition
        }
    }
}
class Jt extends Xt
{
    constructor(e, t)
    {
        super(), this._contract = e.getContract(Gt, t), this._ethClient = e
    }
    loadData()
    {
        var e = this;
        return Yt((function*()
        {
            var t = yield e._ethClient.executeBatchWeb3CallsAndCachePerm([e._contract.methods.token0(), e._contract.methods.token1(), e._contract.methods.decimals()]), n = t[0], r = t[1], i = parseInt(t[2]);
            e._token0 = e._ethClient.getContract($t, n), e._token1 = e._ethClient.getContract($t, r);
            var o = yield e._ethClient.executeBatchWeb3CallsAndCachePerm([e._token0.methods.symbol(), e._token0.methods.decimals(), e._token1.methods.symbol(), e._token1.methods.decimals()]), a = o[0], s = parseInt(o[1]), c = o[2], u = parseInt(o[3]), l = yield Vt(a), f = yield Vt(c), h = yield e._ethClient.executeBatchWeb3CallsAndCache([e._token0.methods.balanceOf(e._contract._address), e._token1.methods.balanceOf(e._contract._address), e._contract.methods.totalSupply()], 6e5), d = parseInt(h[0]) / 10 ** s, p = parseInt(h[1]) / 10 ** u, m = parseInt(h[2]) / 10 ** i, v = [
            {
                name: a,
                balance: d,
                value: l * d,
                perc: .5,
                address: n
            },
            {
                name: c,
                balance: p,
                value: f * p,
                perc: .5,
                address: r
            }];
            e.decimals = i, e.name = "UniswapV2-".concat(a, "-").concat(c, " Liquidity Token"), e.symbol = "U".concat(a).concat(c, "-V2"), e.totalSupply = m, e.marketCap = l * d + f * p, e.price = e.marketCap / e.totalSupply, e.composition = v
        }))()
    }
}
class Zt extends Xt
{
    constructor(e, t)
    {
        super(), this._contract = e.getContract(qt, t), this._ethClient = e
    }
    loadData()
    {
        var e = this;
        return Yt((function*()
        {
            var t = yield e._ethClient.executeBatchWeb3CallsAndCachePerm([e._contract.methods.getTokens(), e._contract.methods.decimals(), e._contract.methods.symbol(), e._contract.methods.name()]), n = t[0][0], r = t[0][1], i = parseInt(t[1]), o = t[2], a = t[3];
            e._token0 = e._ethClient.getContract($t, n), e._token1 = e._ethClient.getContract($t, r);
            var s = yield e._ethClient.executeBatchWeb3CallsAndCachePerm([e._token0.methods.decimals(), e._token1.methods.decimals()]), c = o.split("-"), u = c[2], l = c[3], f = parseInt(s[0]), h = parseInt(s[1]), d = yield Vt(u), p = yield Vt(l), m = yield e._ethClient.executeBatchWeb3CallsAndCache([e._token0.methods.balanceOf(e._contract._address), e._token1.methods.balanceOf(e._contract._address), e._contract.methods.totalSupply()], 6e5), v = parseInt(m[0]) / 10 ** f, g = parseInt(m[1]) / 10 ** h, y = parseInt(m[2]) / 10 ** i, b = [
            {
                name: u,
                balance: v,
                value: d * v,
                perc: .5,
                address: n
            },
            {
                name: l,
                balance: g,
                value: p * g,
                perc: .5,
                address: r
            }];
            e.decimals = i, e.name = a, e.symbol = o, e.totalSupply = y, e.marketCap = d * v + p * g, e.price = e.marketCap / e.totalSupply, e.composition = b
        }))()
    }
}
var Qt = n(248),
    en = n(249);

function tn(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function nn(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                tn(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                tn(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
class rn
{
    constructor(e, t)
    {
        this._contract = e.getContract(Qt, t), this._ethClient = e
    }
    toObj()
    {
        return {
            decimals: this.decimals,
            name: this.name,
            symbol: this.symbol,
            price: this.price,
            totalSupply: this.totalSupply,
            marketCap: this.marketCap,
            epoch: this.epoch,
            supplyHistory: this.supplyHistory
        }
    }
    loadData()
    {
        var e = this;
        return nn((function*()
        {
            var t = yield e._ethClient.executeBatchWeb3CallsAndCachePerm([e._contract.methods.decimals(), e._contract.methods.symbol(), e._contract.methods.monetaryPolicy()]), n = e._ethClient.getContract(en, t[2]), r = yield e._ethClient.executeBatchWeb3CallsAndCache([e._contract.methods.totalSupply(), n.methods.epoch()], 6e5), i = parseInt(t[0]), o = t[1], a = yield Vt(o), s = r[0] / 10 ** i, c = parseInt(r[1]);
            e.decimals = i, e.name = "Ampleforth", e.symbol = o, e.totalSupply = s, e.marketCap = s * a, e.price = a, e.policy = n, e.epoch = c, e.supplyHistory = yield e.getSupplyHistory()
        }))()
    }
    getSupplyOn(e)
    {
        var t = this;
        return nn((function*()
        {
            var n = t.supplyHistory;
            if (n && n.length > 0 || (n = yield t.getSupplyHistory()), 0 === n.length || e < n[0][0]) return 0;
            for (var r = 0; r < n.length - 1; r++)
                if (e >= n[r][0] && e < n[r + 1][0]) return n[r][1];
            return n[n.length - 1][1]
        }))()
    }
    getSupplyHistory()
    {
        var e = this;
        return nn((function*()
        {
            var t = "".concat(e.policy._address, "|supplyHistory"),
                n = Ut.get(t);
            if (n && n.length > 0 && e.epoch && n[n.length - 1].epoch === e.epoch) return n;
            var r = yield e._ethClient.loadHistoricalLogsPaginated(e.policy, "LogRebase", e => [parseInt(e.returnValues.timestampSec), parseFloat(e.returnValues.requestedSupplyAdjustment) / 10 ** 9, parseFloat(e.returnValues.exchangeRate) / 10 ** 18, parseInt(e.returnValues.epoch)]), i = [
                [1561687200, 5e7, 1, 1, 0]
            ];
            for (var o in r)
            {
                var a = i[o][1] + r[o][1];
                i.push([r[o][0], a, r[o][2], a * r[o][2] / 5e7, r[o][3]])
            }
            return Ut.set(t, i, [864e5]), i
        }))()
    }
}
var on = n(250),
    an = n(144),
    sn = n.n(an),
    cn = n(145),
    un = n.n(cn);

function ln(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function fn(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                ln(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                ln(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
var hn = "ff8acb091c304d60bd51a51277cc8886",
    dn = ["wss://mainnet.infura.io/ws/v3/".concat(hn)],
    pn = ["https://mainnet.infura.io/v3/".concat(hn)],
    mn = "0x0000000000000000000000000000000000000000",
    vn = function()
    {
        var e = fn((function*(e, t, n, r)
        {
            for (var i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] :
                {}, o = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 7947823, a = [], s = yield e.getLatestBlock(), c = o; c <= s.number; c += 1051200)
            {
                var u = yield t.getPastEvents(n,
                {
                    filter: i,
                    fromBlock: e.numberToHex(c),
                    toBlock: c + 1051200 > s.number ? "latest" : e.numberToHex(c + 1051200)
                });
                a = a.concat(u)
            }
            return a.map(r)
        }));
        return function(t, n, r, i)
        {
            return e.apply(this, arguments)
        }
    }();
class gn
{
    constructor(e)
    {
        this.web3 = new sn.a(e, null,
        {})
    }
    static getWSEndpoint()
    {
        return dn[Math.floor(Math.random() * dn.length)]
    }
    static getHttpEndpoint()
    {
        return pn[Math.floor(Math.random() * pn.length)]
    }
    static newFallbackConnection()
    {
        var e = new gn;
        return e.web3 = new sn.a(gn.getWSEndpoint(), null,
        {}), e
    }
    getTimetsamp(e)
    {
        var t = this;
        return fn((function*()
        {
            return (yield t.web3.eth.getBlock(e || "latest")).timestamp
        }))()
    }
    getLatestBlock()
    {
        return this.web3.eth.getBlock("latest")
    }
    getLatestBlockNumber()
    {
        var e = this;
        return fn((function*()
        {
            return (yield e.getLatestBlock()).number
        }))()
    }
    getContract(e, t)
    {
        return new this.web3.eth.Contract(e, t)
    }
    getBlock(e)
    {
        return this.web3.eth.getBlock(e)
    }
    numberToHex(e)
    {
        return this.web3.utils.numberToHex(e)
    }
    getAccount()
    {
        return this.web3.eth.accounts[0]
    }
    getBalance(e)
    {
        return this.web3.eth.getBalance(e)
    }
    executeBatchWeb3Calls(e)
    {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : mn,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4;
        return un.a.map(e, e => e.call(
        {
            from: t
        }),
        {
            concurrency: n
        })
    }
    executeBatchWeb3CallsAndCache(e)
    {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1314e6,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : mn,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 4,
            i = function()
            {
                var e = fn((function*(e)
                {
                    var r = "".concat(e._parent._address, "|").concat(e.encodeABI()),
                        i = Ut.get(r);
                    return i || (i = yield e.call(
                    {
                        from: n
                    }), Ut.set(r, i, [t]), i)
                }));
                return function(t)
                {
                    return e.apply(this, arguments)
                }
            }();
        return un.a.map(e, e => i(e),
        {
            concurrency: r
        })
    }
    executeBatchWeb3CallsAndCachePerm(e)
    {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : mn,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 4;
        return this.executeBatchWeb3CallsAndCache(e, 1314e6, t, n)
    }
    loadHistoricalLogsPaginated(e, t, n)
    {
        var r = arguments,
            i = this;
        return fn((function*()
        {
            for (var o = r.length > 3 && void 0 !== r[3] ? r[3] :
                {}, a = r.length > 4 && void 0 !== r[4] ? r[4] : 7947823, s = [], c = yield i.getLatestBlock(), u = a; u <= c.number; u += 1051200)
            {
                var l = yield e.getPastEvents(t,
                {
                    filter: o,
                    fromBlock: i.numberToHex(u),
                    toBlock: u + 1051200 > c.number ? "latest" : i.numberToHex(u + 1051200)
                });
                s = s.concat(l)
            }
            return s.map(n)
        }))()
    }
}
var yn = gn,
    bn = n(46),
    wn = n.n(bn);

function _n(e, t)
{
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols)
    {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function(t)
        {
            return Object.getOwnPropertyDescriptor(e, t).enumerable
        }))), n.push.apply(n, r)
    }
    return n
}

function xn(e)
{
    for (var t = 1; t < arguments.length; t++)
    {
        var n = null != arguments[t] ? arguments[t] :
        {};
        t % 2 ? _n(Object(n), !0).forEach((function(t)
        {
            En(e, t, n[t])
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : _n(Object(n)).forEach((function(t)
        {
            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
        }))
    }
    return e
}

function En(e, t, n)
{
    return t in e ? Object.defineProperty(e, t,
    {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}

function Sn(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function Mn(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                Sn(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                Sn(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
var Tn = "0x0000000000000000000000000000000000000000",
    kn = {
        "pilot-uniswap-weth-ampl":
        {
            address: "0xD36132E0c1141B26E62733e018f12Eb38A7b7678",
            stakingToken: Jt,
            distToken: rn
        },
        "beehiveV1-uniswap-weth-ampl":
        {
            address: "0x0eEf70ab0638A763acb5178Dd3C62E49767fd940",
            stakingToken: Jt,
            distToken: rn
        },
        "beehiveV2-uniswap-weth-ampl":
        {
            address: "0x23796Bc856ed786dCC505984fd538f91dAD3194A",
            stakingToken: Jt,
            distToken: rn
        },
        "enceladus-mooniswap-bal-ampl":
        {
            address: "0x106175d6cf20780b06944993185f7478ed046d11",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-bzrx-ampl":
        {
            address: "0xbeFfA3eCBcd244C979285BC4466CBe5899F89918",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-comp-ampl":
        {
            address: "0x77f94Eb69B56792bBff41df00a56d35ebe39ce33",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-ampl-crv":
        {
            address: "0x999f88aB581c5D3Fc3806b90E8A97E6D84E23500",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-link-ampl":
        {
            address: "0x4A26862D65cd3a316Ce40d27Fb5778aD923e5d4F",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-mkr-ampl":
        {
            address: "0x946fca8Ab96cF5e3ee2476FA29736987D59F1c76",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-nmr-ampl":
        {
            address: "0xB5FAF2fC869f3AE44F192Cc0d28B471eCD4455cc",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-yfi-ampl":
        {
            address: "0x8b0f1B4Abb263B5329B02e1b8c42b9E8F539f917",
            stakingToken: Zt,
            distToken: rn
        },
        "enceladus-mooniswap-ampl-ycrv":
        {
            address: "0x79Fbe448A81f130410Cc3D66E89aE4a47598526e",
            stakingToken: Zt,
            distToken: rn
        }
    },
    An = "57896044618658097711785492504343953926634992332820282019728792003956564819967",
    Cn = (e, t) => e >= t ? e : t,
    On = (e, t) => e <= t ? e : t;

function Pn(e, t)
{
    return Rn.apply(this, arguments)
}

function Rn()
{
    return (Rn = Mn((function*(e, t)
    {
        var n = e.getContract(on, kn[t].address),
            r = kn[t].stakingToken,
            i = kn[t].distToken,
            o = yield e.executeBatchWeb3CallsAndCachePerm([n.methods.getStakingToken(), n.methods.getDistributionToken()]), a = new r(e, o[0]);
        yield a.loadData();
        var s = new i(e, o[1]);
        return yield s.loadData(),
        {
            cvtd: n,
            stakingToken: a,
            distToken: s
        }
    }))).apply(this, arguments)
}

function In(e, t)
{
    return Nn.apply(this, arguments)
}

function Nn()
{
    return (Nn = Mn((function*(e, t)
    {
        var
        {
            cvtd: n
        } = t, r = yield e.executeBatchWeb3CallsAndCachePerm([n.methods.startBonus(), n.methods.bonusPeriodSec()]), i = parseInt(r[0]) / 100;
        return {
            startBonus: i,
            minMultiplier: 1,
            maxMultiplier: 1 / i,
            bonusPeriodSec: parseInt(r[1])
        }
    }))).apply(this, arguments)
}

function Ln(e, t)
{
    return Bn.apply(this, arguments)
}

function Bn()
{
    return (Bn = Mn((function*(e, t)
    {
        var
        {
            cvtd: n,
            distToken: r,
            stakingToken: i
        } = t, o = yield e.executeBatchWeb3Calls([n.methods.updateAccounting(), n.methods.totalStaked(), n.methods.totalLockedShares(), n.methods.unlockScheduleCount(), n.methods.totalStakingShares()]), a = parseInt(o[0][5]), s = parseInt(o[0][0]) / 10 ** r.decimals, c = parseInt(o[0][1]) / 10 ** r.decimals, u = parseInt(o[1]) / 10 ** i.decimals;
        return {
            queriedTime: a,
            totalLocked: s,
            totalUnlocked: c,
            totalStaked: u,
            totalStakingShareSeconds: parseInt(o[0][3]),
            totalStakingShares: parseInt(o[4]),
            totalLockedShares: parseInt(o[2]),
            numUnlockSchedules: parseInt(o[3]),
            totalLockedVal: r.price * s,
            totalUnlockedVal: r.price * c,
            totalStakedVal: i.price * u,
            distTokenName: r.symbol,
            stakingTokenName: i.symbol,
            stakingTokenTotalSupply: i.totalSupply,
            stakingTokenComposition: i.composition
        }
    }))).apply(this, arguments)
}

function jn(e, t, n, r, i)
{
    return Fn.apply(this, arguments)
}

function Fn()
{
    return (Fn = Mn((function*(e, t, n, r, i)
    {
        for (var
            {
                cvtd: o,
                distToken: a
            } = t,
            {
                totalLockedShares: s,
                totalLocked: c,
                numUnlockSchedules: u,
                totalStakedVal: l
            } = n,
            {
                bonusPeriodSec: f
            } = r, h = [], d = 0; d < u; d++) h.push(o.methods.unlockSchedules(d));
        var p = yield e.executeBatchWeb3CallsAndCachePerm(h), m = parseInt(Date.now() / 1e3), v = p.reduce((e, t) => (e += On(Cn(t.endAtSec - m, 0), i) / t.durationSec * t.initialLockedShares) && e, 0) / s * c;
        return {
            unlockRate: v,
            periodSec: p.reduce((e, t) => Cn(t.endAtSec - m, e), 0),
            bonusPeriodSec: f,
            roi: v * a.price / l
        }
    }))).apply(this, arguments)
}

function Un(e, t, n)
{
    return Dn.apply(this, arguments)
}

function Dn()
{
    return (Dn = Mn((function*(e, t, n)
    {
        var
        {
            cvtd: r,
            distToken: i
        } = t,
        {
            numUnlockSchedules: o
        } = n, a = "geyser|".concat(r._address, "|totalLockedSharesFull"), s = Ut.get(a);
        if (s && s.numUnlockSchedules === o) return s;
        var c = yield vn(e, r, "TokensLocked", e => (
        {
            blockNumber: e.blockNumber,
            amount: parseInt(e.returnValues.amount),
            durationSec: parseInt(e.returnValues.durationSec),
            totalLocked: parseInt(e.returnValues.total)
        })), u = 0;
        for (var l in c)
        {
            var f = c[l];
            f.timestamp = yield e.getTimetsamp(f.blockNumber), f.supplyAtTimestamp = yield i.getSupplyOn(f.timestamp), f.sharesAtTimestamp = f.amount / 10 ** i.decimals / f.supplyAtTimestamp, u += f.sharesAtTimestamp
        }
        return s = {
            numUnlockSchedules: o,
            totalLockedSharesFull: u
        }, Ut.set(a, s, [864e5]), s
    }))).apply(this, arguments)
}

function zn()
{
    return (zn = Mn((function*(e, t)
    {
        var n = yield Pn(e, t), r = yield In(e, n), i = yield Ln(e, n), o = yield jn(e, n, i, r, 86400), a = yield jn(e, n, i, r, 604800), s = yield jn(e, n, i, r, 2592e3), c = yield jn(e, n, i, r, 5184e3), u = yield jn(e, n, i, r, 31536e3), l = u.periodSec,
        {
            totalLockedSharesFull: f
        } = yield Un(e, n, i), h = f * n.distToken.totalSupply;
        return xn(
        {
            poolRef: t
        }, r,
        {}, i,
        {
            totalOfferedRewards: h,
            totalOfferedRewardsVal: h * n.distToken.price,
            poolDailyDrip: o,
            poolWeeklyDrip: a,
            poolBiMonthlyDrip: c,
            poolMonthlyDrip: s,
            poolYearlyDrip: u,
            periodSec: l
        })
    }))).apply(this, arguments)
}

function Hn()
{
    return (Hn = Mn((function*(e, t)
    {
        // User account key
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Tn,
            {
                cvtd: r,
                stakingToken: i,
                distToken: o
            } = yield Pn(e, t.poolRef), a = yield e.getBalance(n), s = t.poolRef, c = yield e.executeBatchWeb3Calls([i._contract.methods.balanceOf(n), o._contract.methods.balanceOf(n), r.methods.totalStakedFor(n), r.methods.updateAccounting(), i._contract.methods.allowance(n, r._address), r.methods.totalStakingShares()], n), u = parseInt(c[0]) / 10 ** i.decimals, l = parseInt(c[1]) / 10 ** o.decimals, f = parseInt(c[2]) / 10 ** i.decimals, h = 0;
        if (f > 0)
        {
            // VIC HERE TODO
            // Rewards that WOULD be given
            var d = yield r.methods.unstakeQuery(c[2]).call(
            {
                from: n
            });
            // Total current rewards for = (d / 10) ^ o.decimals
            h = parseInt(d) / 10 ** o.decimals
        }
        var p = parseInt(c[3][4]) / 10 ** o.decimals,
            m = parseInt(c[3][5]),
            v = parseInt(a) / 10 ** 18,
            g = parseInt(c[4]) / 10 ** i.decimals,
            y = p - h,
            b = t.startBonus;
        p > 0 && (b = Cn(t.startBonus, h / p));
        var w = (b - t.startBonus) / (1 - t.startBonus),
            _ = 1 - w,
            x = _ * t.bonusPeriodSec,
            E = w * (t.maxMultiplier - t.minMultiplier) + t.minMultiplier,
            S = parseInt(c[3][2]),
            M = f * i.price,
            T = p * o.price,
            k = 1,
            A = 1,
            C = f > 0;
        return {
            poolRef: s,
            wallet: n,
            hasStakeHistory: C,
            stakingTokenBalance: u,
            distTokenBalance: l,
            totalStakedFor: f,
            totalStakedForVal: M,
            totalRewardsFor: p,
            totalRewardsForVal: T,
            totalCurrentRewardsFor: h,
            userStakingShareSeconds: S,
            queriedTime: m,
            userETHBalance: v,
            userAllowance: g,
            bonusRewards: y,
            bonusPerc: b,
            bonusMultiplier: E,
            timeToWaitForFullBonus: x,
            totalStakedForT0: k,
            totalStakedForT1: A
        }
    }))).apply(this, arguments)
}

function Vn(e, t)
{
    if (86400 === t) return e.poolDailyDrip.unlockRate;
    if (604800 === t) return e.poolWeeklyDrip.unlockRate;
    if (2592e3 === t) return e.poolMonthlyDrip.unlockRate;
    if (5184e3 === t) return e.poolBiMonthlyDrip.unlockRate;
    if (31536e3 === t) return e.poolYearlyDrip.unlockRate;
    throw "Drip rate NOT precomputed"
}

function Wn(e, t, n, r)
{
    var i = t.totalStakedFor * e.totalStakingShares / e.totalStaked,
        o = n * e.totalStakingShares / e.totalStaked,
        a = (t.userStakingShareSeconds + (i + o) * r) / (e.totalStakingShareSeconds + (e.totalStakingShares + o) * r);
    return Vn(e, r) * a
}

function Gn(e, t, n, r)
{
    if (t.totalStakedFor === n) return 0;
    var i = t.totalStakedFor * e.totalStakingShares / e.totalStaked,
        o = n * e.totalStakingShares / e.totalStaked,
        a = (t.userStakingShareSeconds + (i - o) * r) / (e.totalStakingShareSeconds + (e.totalStakingShares - o) * r);
    return Vn(e, r) * a
}

function qn()
{
    return (qn = Mn((function*(e, t, n, r)
    {
        var
        {
            cvtd: i,
            stakingToken: o,
            distToken: a
        } = yield Pn(e, t.poolRef), s = new wn.a(r.toString()), c = 10 ** o.decimals, u = s.mul(c).toFixed(0);
        console.log("Querying", u);
        var l = yield i.methods.unstakeQuery(u).call(
        {
            from: n
        });
        return {
            rewardAmount: parseInt(l) / 10 ** a.decimals
        }
    }))).apply(this, arguments)
}

function $n(e, t, n)
{
    return Kn.apply(this, arguments)
}

function Kn()
{
    return (Kn = Mn((function*(e, t, n)
    {
        var
        {
            cvtd: r,
            stakingToken: i
        } = yield Pn(e, t.poolRef);
        return console.log("Approving", An), i._contract.methods.approve(r._address, An)
    }))).apply(this, arguments)
}

function Yn(e, t, n, r)
{
    return Xn.apply(this, arguments)
}

function Xn()
{
    return (Xn = Mn((function*(e, t, n, r)
    {
        var
        {
            cvtd: i,
            stakingToken: o
        } = yield Pn(e, t.poolRef), a = yield o._contract.methods.balanceOf(r).call(), s = new wn.a(n.toString()), c = 10 ** o.decimals, u = s.mul(c).toFixed(0), l = wn.a.min(u, a).toFixed(0);
        return console.log("Depositing", l), i.methods.stake(l, [])
    }))).apply(this, arguments)
}

function Jn(e, t, n, r)
{
    return Zn.apply(this, arguments)
}

function Zn()
{
    return (Zn = Mn((function*(e, t, n, r)
    {
        var
        {
            cvtd: i,
            stakingToken: o
        } = yield Pn(e, t.poolRef), a = yield i.methods.totalStakedFor(r).call(), s = new wn.a(n.toString()), c = 10 ** o.decimals, u = s.mul(c).toFixed(0), l = wn.a.min(u, a).toFixed(0);
        return console.log("Withdrawing", l), i.methods.unstake(l, [])
    }))).apply(this, arguments)
}

function Qn()
{
    return (Qn = Mn((function*(e, t)
    {
        var
        {
            cvtd: n
        } = yield Pn(e, "pilot-uniswap-weth-ampl"), r = yield n.methods.totalStakedFor(t).call();
        return parseInt(r) > 0
    }))).apply(this, arguments)
}
var er = n(4),
    tr = n(13),
    nr = n(5),
    rr = n(6),
    ir = n(36);

function or(e)
{
    return e && e.ownerDocument || document
}

function ar(e, t)
{
    "function" == typeof e ? e(t) : e && (e.current = t)
}

function sr(e, t)
{
    return o.useMemo((function()
    {
        return null == e && null == t ? null : function(n)
        {
            ar(e, n), ar(t, n)
        }
    }), [e, t])
}
var cr = "undefined" != typeof window ? o.useLayoutEffect : o.useEffect;

function ur(e)
{
    var t = o.useRef(e);
    return cr((function()
    {
        t.current = e
    })), o.useCallback((function()
    {
        return t.current.apply(void 0, arguments)
    }), [])
}

function lr(e)
{
    return e.substring(2).toLowerCase()
}
var fr = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.mouseEvent,
            i = void 0 === r ? "onClick" : r,
            a = e.touchEvent,
            c = void 0 === a ? "onTouchEnd" : a,
            u = e.onClickAway,
            l = o.useRef(!1),
            f = o.useRef(null),
            h = o.useRef(!1);
        o.useEffect((function()
        {
            return h.current = !0,
                function()
                {
                    h.current = !1
                }
        }), []);
        var d = sr(f, t),
            p = o.useCallback((function(e)
            {
                ar(d, s.findDOMNode(e))
            }), [d]),
            m = sr(n.ref, p),
            v = ur((function(e)
            {
                if (h.current)
                    if (l.current) l.current = !1;
                    else if (f.current)
                {
                    var t = or(f.current);
                    t.documentElement && t.documentElement.contains(e.target) && !f.current.contains(e.target) && u(e)
                }
            })),
            g = o.useCallback((function()
            {
                l.current = !0
            }), []);
        return o.useEffect((function()
        {
            if (!1 !== c)
            {
                var e = lr(c),
                    t = or(f.current);
                return t.addEventListener(e, v), t.addEventListener("touchmove", g),
                    function()
                    {
                        t.removeEventListener(e, v), t.removeEventListener("touchmove", g)
                    }
            }
        }), [v, g, c]), o.useEffect((function()
        {
            if (!1 !== i)
            {
                var e = lr(i),
                    t = or(f.current);
                return t.addEventListener(e, v),
                    function()
                    {
                        t.removeEventListener(e, v)
                    }
            }
        }), [v, i]), o.createElement(o.Fragment, null, o.cloneElement(n,
        {
            ref: m
        }))
    })),
    hr = n(12);

function dr()
{
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
    return t.reduce((function(e, t)
    {
        return null == t ? e : function()
        {
            for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
            e.apply(this, r), t.apply(this, r)
        }
    }), (function() {}))
}
var pr = !1,
    mr = a.a.createContext(null),
    vr = function(e)
    {
        function t(t, n)
        {
            var r;
            r = e.call(this, t, n) || this;
            var i, o = n && !n.isMounting ? t.enter : t.appear;
            return r.appearStatus = null, t.in ? o ? (i = "exited", r.appearStatus = "entering") : i = "entered" : i = t.unmountOnExit || t.mountOnEnter ? "unmounted" : "exited", r.state = {
                status: i
            }, r.nextCallback = null, r
        }
        Object(L.a)(t, e), t.getDerivedStateFromProps = function(e, t)
        {
            return e.in && "unmounted" === t.status ?
            {
                status: "exited"
            } : null
        };
        var n = t.prototype;
        return n.componentDidMount = function()
        {
            this.updateStatus(!0, this.appearStatus)
        }, n.componentDidUpdate = function(e)
        {
            var t = null;
            if (e !== this.props)
            {
                var n = this.state.status;
                this.props.in ? "entering" !== n && "entered" !== n && (t = "entering") : "entering" !== n && "entered" !== n || (t = "exiting")
            }
            this.updateStatus(!1, t)
        }, n.componentWillUnmount = function()
        {
            this.cancelNextCallback()
        }, n.getTimeouts = function()
        {
            var e, t, n, r = this.props.timeout;
            return e = t = n = r, null != r && "number" != typeof r && (e = r.exit, t = r.enter, n = void 0 !== r.appear ? r.appear : t),
            {
                exit: e,
                enter: t,
                appear: n
            }
        }, n.updateStatus = function(e, t)
        {
            if (void 0 === e && (e = !1), null !== t)
            {
                this.cancelNextCallback();
                var n = c.a.findDOMNode(this);
                "entering" === t ? this.performEnter(n, e) : this.performExit(n)
            }
            else this.props.unmountOnExit && "exited" === this.state.status && this.setState(
            {
                status: "unmounted"
            })
        }, n.performEnter = function(e, t)
        {
            var n = this,
                r = this.props.enter,
                i = this.context ? this.context.isMounting : t,
                o = this.getTimeouts(),
                a = i ? o.appear : o.enter;
            !t && !r || pr ? this.safeSetState(
            {
                status: "entered"
            }, (function()
            {
                n.props.onEntered(e)
            })) : (this.props.onEnter(e, i), this.safeSetState(
            {
                status: "entering"
            }, (function()
            {
                n.props.onEntering(e, i), n.onTransitionEnd(e, a, (function()
                {
                    n.safeSetState(
                    {
                        status: "entered"
                    }, (function()
                    {
                        n.props.onEntered(e, i)
                    }))
                }))
            })))
        }, n.performExit = function(e)
        {
            var t = this,
                n = this.props.exit,
                r = this.getTimeouts();
            n && !pr ? (this.props.onExit(e), this.safeSetState(
            {
                status: "exiting"
            }, (function()
            {
                t.props.onExiting(e), t.onTransitionEnd(e, r.exit, (function()
                {
                    t.safeSetState(
                    {
                        status: "exited"
                    }, (function()
                    {
                        t.props.onExited(e)
                    }))
                }))
            }))) : this.safeSetState(
            {
                status: "exited"
            }, (function()
            {
                t.props.onExited(e)
            }))
        }, n.cancelNextCallback = function()
        {
            null !== this.nextCallback && (this.nextCallback.cancel(), this.nextCallback = null)
        }, n.safeSetState = function(e, t)
        {
            t = this.setNextCallback(t), this.setState(e, t)
        }, n.setNextCallback = function(e)
        {
            var t = this,
                n = !0;
            return this.nextCallback = function(r)
            {
                n && (n = !1, t.nextCallback = null, e(r))
            }, this.nextCallback.cancel = function()
            {
                n = !1
            }, this.nextCallback
        }, n.onTransitionEnd = function(e, t, n)
        {
            this.setNextCallback(n);
            var r = null == t && !this.props.addEndListener;
            e && !r ? (this.props.addEndListener && this.props.addEndListener(e, this.nextCallback), null != t && setTimeout(this.nextCallback, t)) : setTimeout(this.nextCallback, 0)
        }, n.render = function()
        {
            var e = this.state.status;
            if ("unmounted" === e) return null;
            var t = this.props,
                n = t.children,
                r = Object(V.a)(t, ["children"]);
            if (delete r.in, delete r.mountOnEnter, delete r.unmountOnExit, delete r.appear, delete r.enter, delete r.exit, delete r.timeout, delete r.addEndListener, delete r.onEnter, delete r.onEntering, delete r.onEntered, delete r.onExit, delete r.onExiting, delete r.onExited, "function" == typeof n) return a.a.createElement(mr.Provider,
            {
                value: null
            }, n(e, r));
            var i = a.a.Children.only(n);
            return a.a.createElement(mr.Provider,
            {
                value: null
            }, a.a.cloneElement(i, r))
        }, t
    }(a.a.Component);

function gr()
{}
vr.contextType = mr, vr.propTypes = {}, vr.defaultProps = {
    in: !1,
    mountOnEnter: !1,
    unmountOnExit: !1,
    appear: !1,
    enter: !0,
    exit: !0,
    onEnter: gr,
    onEntering: gr,
    onEntered: gr,
    onExit: gr,
    onExiting: gr,
    onExited: gr
}, vr.UNMOUNTED = 0, vr.EXITED = 1, vr.ENTERING = 2, vr.ENTERED = 3, vr.EXITING = 4;
var yr = vr,
    br = n(64);

function wr()
{
    return Object(Nt.a)() || br.a
}
var _r = function(e)
{
    return e.scrollTop
};

function xr(e, t)
{
    var n = e.timeout,
        r = e.style,
        i = void 0 === r ?
        {} : r;
    return {
        duration: i.transitionDuration || "number" == typeof n ? n : n[t.mode] || 0,
        delay: i.transitionDelay
    }
}

function Er(e)
{
    return "scale(".concat(e, ", ").concat(Math.pow(e, 2), ")")
}
var Sr = {
        entering:
        {
            opacity: 1,
            transform: Er(1)
        },
        entered:
        {
            opacity: 1,
            transform: "none"
        }
    },
    Mr = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.in,
            i = e.onEnter,
            a = e.onExit,
            s = e.style,
            c = e.timeout,
            u = void 0 === c ? "auto" : c,
            l = Object(er.a)(e, ["children", "in", "onEnter", "onExit", "style", "timeout"]),
            f = o.useRef(),
            h = o.useRef(),
            d = sr(n.ref, t),
            p = wr();
        return o.useEffect((function()
        {
            return function()
            {
                clearTimeout(f.current)
            }
        }), []), o.createElement(yr, Object(H.a)(
        {
            appear: !0,
            in: r,
            onEnter: function(e, t)
            {
                _r(e);
                var n, r = xr(
                    {
                        style: s,
                        timeout: u
                    },
                    {
                        mode: "enter"
                    }),
                    o = r.duration,
                    a = r.delay;
                "auto" === u ? (n = p.transitions.getAutoHeightDuration(e.clientHeight), h.current = n) : n = o, e.style.transition = [p.transitions.create("opacity",
                {
                    duration: n,
                    delay: a
                }), p.transitions.create("transform",
                {
                    duration: .666 * n,
                    delay: a
                })].join(","), i && i(e, t)
            },
            onExit: function(e)
            {
                var t, n = xr(
                    {
                        style: s,
                        timeout: u
                    },
                    {
                        mode: "exit"
                    }),
                    r = n.duration,
                    i = n.delay;
                "auto" === u ? (t = p.transitions.getAutoHeightDuration(e.clientHeight), h.current = t) : t = r, e.style.transition = [p.transitions.create("opacity",
                {
                    duration: t,
                    delay: i
                }), p.transitions.create("transform",
                {
                    duration: .666 * t,
                    delay: i || .333 * t
                })].join(","), e.style.opacity = "0", e.style.transform = Er(.75), a && a(e)
            },
            addEndListener: function(e, t)
            {
                "auto" === u && (f.current = setTimeout(t, h.current || 0))
            },
            timeout: "auto" === u ? null : u
        }, l), (function(e, t)
        {
            return o.cloneElement(n, Object(H.a)(
            {
                style: Object(H.a)(
                {
                    opacity: 0,
                    transform: Er(.75),
                    visibility: "exited" !== e || r ? void 0 : "hidden"
                }, Sr[e],
                {}, s,
                {}, n.props.style),
                ref: d
            }, t))
        }))
    }));
Mr.muiSupportAuto = !0;
var Tr = Mr,
    kr = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.component,
            a = void 0 === i ? "div" : i,
            s = e.square,
            c = void 0 !== s && s,
            u = e.elevation,
            l = void 0 === u ? 1 : u,
            f = e.variant,
            h = void 0 === f ? "elevation" : f,
            d = Object(er.a)(e, ["classes", "className", "component", "square", "elevation", "variant"]);
        return o.createElement(a, Object(H.a)(
        {
            className: Object(nr.default)(n.root, r, "outlined" === h ? n.outlined : n["elevation".concat(l)], !c && n.rounded),
            ref: t
        }, d))
    })),
    Ar = Object(rr.a)((function(e)
    {
        var t = {};
        return e.shadows.forEach((function(e, n)
        {
            t["elevation".concat(n)] = {
                boxShadow: e
            }
        })), Object(H.a)(
        {
            root:
            {
                backgroundColor: e.palette.background.paper,
                color: e.palette.text.primary,
                transition: e.transitions.create("box-shadow")
            },
            rounded:
            {
                borderRadius: e.shape.borderRadius
            },
            outlined:
            {
                border: "1px solid ".concat(e.palette.divider)
            }
        }, t)
    }),
    {
        name: "MuiPaper"
    })(kr),
    Cr = n(14),
    Or = o.forwardRef((function(e, t)
    {
        var n = e.action,
            r = e.classes,
            i = e.className,
            a = e.message,
            s = e.role,
            c = void 0 === s ? "alert" : s,
            u = Object(er.a)(e, ["action", "classes", "className", "message", "role"]);
        return o.createElement(Ar, Object(H.a)(
        {
            role: c,
            square: !0,
            elevation: 6,
            className: Object(nr.default)(r.root, i),
            ref: t
        }, u), o.createElement("div",
        {
            className: r.message
        }, a), n ? o.createElement("div",
        {
            className: r.action
        }, n) : null)
    })),
    Pr = Object(rr.a)((function(e)
    {
        var t = "light" === e.palette.type ? .8 : .98,
            n = Object(Cr.b)(e.palette.background.default, t);
        return {
            root: Object(H.a)(
            {}, e.typography.body2, Object(tr.a)(
            {
                color: e.palette.getContrastText(n),
                backgroundColor: n,
                display: "flex",
                alignItems: "center",
                flexWrap: "wrap",
                padding: "6px 16px",
                borderRadius: e.shape.borderRadius,
                flexGrow: 1
            }, e.breakpoints.up("sm"),
            {
                flexGrow: "initial",
                minWidth: 288
            })),
            message:
            {
                padding: "8px 0"
            },
            action:
            {
                display: "flex",
                alignItems: "center",
                marginLeft: "auto",
                paddingLeft: 16,
                marginRight: -8
            }
        }
    }),
    {
        name: "MuiSnackbarContent"
    })(Or),
    Rr = o.forwardRef((function(e, t)
    {
        var n = e.action,
            r = e.anchorOrigin,
            i = (r = void 0 === r ?
            {
                vertical: "bottom",
                horizontal: "center"
            } : r).vertical,
            a = r.horizontal,
            s = e.autoHideDuration,
            c = void 0 === s ? null : s,
            u = e.children,
            l = e.classes,
            f = e.className,
            h = e.ClickAwayListenerProps,
            d = e.ContentProps,
            p = e.disableWindowBlurListener,
            m = void 0 !== p && p,
            v = e.message,
            g = e.onClose,
            y = e.onEnter,
            b = e.onEntered,
            w = e.onEntering,
            _ = e.onExit,
            x = e.onExited,
            E = e.onExiting,
            S = e.onMouseEnter,
            M = e.onMouseLeave,
            T = e.open,
            k = e.resumeHideDuration,
            A = e.TransitionComponent,
            C = void 0 === A ? Tr : A,
            O = e.transitionDuration,
            P = void 0 === O ?
            {
                enter: ir.b.enteringScreen,
                exit: ir.b.leavingScreen
            } : O,
            R = e.TransitionProps,
            I = Object(er.a)(e, ["action", "anchorOrigin", "autoHideDuration", "children", "classes", "className", "ClickAwayListenerProps", "ContentProps", "disableWindowBlurListener", "message", "onClose", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "onMouseEnter", "onMouseLeave", "open", "resumeHideDuration", "TransitionComponent", "transitionDuration", "TransitionProps"]),
            N = o.useRef(),
            L = o.useState(!0),
            B = L[0],
            j = L[1],
            F = ur((function()
            {
                g && g.apply(void 0, arguments)
            })),
            U = ur((function(e)
            {
                g && null != e && (clearTimeout(N.current), N.current = setTimeout((function()
                {
                    F(null, "timeout")
                }), e))
            }));
        o.useEffect((function()
        {
            return T && U(c),
                function()
                {
                    clearTimeout(N.current)
                }
        }), [T, c, U]);
        var D = function()
            {
                clearTimeout(N.current)
            },
            z = o.useCallback((function()
            {
                null != c && U(null != k ? k : .5 * c)
            }), [c, k, U]);
        return o.useEffect((function()
        {
            if (!m && T) return window.addEventListener("focus", z), window.addEventListener("blur", D),
                function()
                {
                    window.removeEventListener("focus", z), window.removeEventListener("blur", D)
                }
        }), [m, z, T]), !T && B ? null : o.createElement(fr, Object(H.a)(
        {
            onClickAway: function(e)
            {
                g && g(e, "clickaway")
            }
        }, h), o.createElement("div", Object(H.a)(
        {
            className: Object(nr.default)(l.root, l["anchorOrigin".concat(Object(hr.a)(i)).concat(Object(hr.a)(a))], f),
            onMouseEnter: function(e)
            {
                S && S(e), D()
            },
            onMouseLeave: function(e)
            {
                M && M(e), z()
            },
            ref: t
        }, I), o.createElement(C, Object(H.a)(
        {
            appear: !0,
            in: T,
            onEnter: dr((function()
            {
                j(!1)
            }), y),
            onEntered: b,
            onEntering: w,
            onExit: _,
            onExited: dr((function()
            {
                j(!0)
            }), x),
            onExiting: E,
            timeout: P,
            direction: "top" === i ? "down" : "up"
        }, R), u || o.createElement(Pr, Object(H.a)(
        {
            message: v,
            action: n
        }, d)))))
    })),
    Ir = Object(rr.a)((function(e)
    {
        var t = {
                top: 8
            },
            n = {
                bottom: 8
            },
            r = {
                justifyContent: "flex-end"
            },
            i = {
                justifyContent: "flex-start"
            },
            o = {
                top: 24
            },
            a = {
                bottom: 24
            },
            s = {
                right: 24
            },
            c = {
                left: 24
            },
            u = {
                left: "50%",
                right: "auto",
                transform: "translateX(-50%)"
            };
        return {
            root:
            {
                zIndex: e.zIndex.snackbar,
                position: "fixed",
                display: "flex",
                left: 8,
                right: 8,
                justifyContent: "center",
                alignItems: "center"
            },
            anchorOriginTopCenter: Object(H.a)(
            {}, t, Object(tr.a)(
            {}, e.breakpoints.up("sm"), Object(H.a)(
            {}, o,
            {}, u))),
            anchorOriginBottomCenter: Object(H.a)(
            {}, n, Object(tr.a)(
            {}, e.breakpoints.up("sm"), Object(H.a)(
            {}, a,
            {}, u))),
            anchorOriginTopRight: Object(H.a)(
            {}, t,
            {}, r, Object(tr.a)(
            {}, e.breakpoints.up("sm"), Object(H.a)(
            {
                left: "auto"
            }, o,
            {}, s))),
            anchorOriginBottomRight: Object(H.a)(
            {}, n,
            {}, r, Object(tr.a)(
            {}, e.breakpoints.up("sm"), Object(H.a)(
            {
                left: "auto"
            }, a,
            {}, s))),
            anchorOriginTopLeft: Object(H.a)(
            {}, t,
            {}, i, Object(tr.a)(
            {}, e.breakpoints.up("sm"), Object(H.a)(
            {
                right: "auto"
            }, o,
            {}, c))),
            anchorOriginBottomLeft: Object(H.a)(
            {}, n,
            {}, i, Object(tr.a)(
            {}, e.breakpoints.up("sm"), Object(H.a)(
            {
                right: "auto"
            }, a,
            {}, c)))
        }
    }),
    {
        flip: !1,
        name: "MuiSnackbar"
    })(Rr),
    Nr = "undefined" != typeof window ? o.useLayoutEffect : o.useEffect;
var Lr = function(e)
    {
        var t = e.children,
            n = e.defer,
            r = void 0 !== n && n,
            i = e.fallback,
            a = void 0 === i ? null : i,
            s = o.useState(!1),
            c = s[0],
            u = s[1];
        return Nr((function()
        {
            r || u(!0)
        }), [r]), o.useEffect((function()
        {
            r && u(!0)
        }), [r]), o.createElement(o.Fragment, null, c ? t : a)
    },
    Br = !0,
    jr = !1,
    Fr = null,
    Ur = {
        text: !0,
        search: !0,
        url: !0,
        tel: !0,
        email: !0,
        password: !0,
        number: !0,
        date: !0,
        month: !0,
        week: !0,
        time: !0,
        datetime: !0,
        "datetime-local": !0
    };

function Dr(e)
{
    e.metaKey || e.altKey || e.ctrlKey || (Br = !0)
}

function zr()
{
    Br = !1
}

function Hr()
{
    "hidden" === this.visibilityState && jr && (Br = !0)
}

function Vr(e)
{
    var t, n, r, i = e.target;
    try
    {
        return i.matches(":focus-visible")
    }
    catch (e)
    {}
    return Br || (n = (t = i).type, !("INPUT" !== (r = t.tagName) || !Ur[n] || t.readOnly) || "TEXTAREA" === r && !t.readOnly || !!t.isContentEditable)
}

function Wr()
{
    jr = !0, window.clearTimeout(Fr), Fr = window.setTimeout((function()
    {
        jr = !1
    }), 100)
}

function Gr()
{
    return {
        isFocusVisible: Vr,
        onBlurVisible: Wr,
        ref: o.useCallback((function(e)
        {
            var t, n = s.findDOMNode(e);
            null != n && ((t = n.ownerDocument).addEventListener("keydown", Dr, !0), t.addEventListener("mousedown", zr, !0), t.addEventListener("pointerdown", zr, !0), t.addEventListener("touchstart", zr, !0), t.addEventListener("visibilitychange", Hr, !0))
        }), [])
    }
}
var qr = n(41);

function $r(e, t)
{
    var n = Object.create(null);
    return e && o.Children.map(e, (function(e)
    {
        return e
    })).forEach((function(e)
    {
        n[e.key] = function(e)
        {
            return t && Object(o.isValidElement)(e) ? t(e) : e
        }(e)
    })), n
}

function Kr(e, t, n)
{
    return null != n[t] ? n[t] : e.props[t]
}

function Yr(e, t, n)
{
    var r = $r(e.children),
        i = function(e, t)
        {
            function n(n)
            {
                return n in t ? t[n] : e[n]
            }
            e = e ||
            {}, t = t ||
            {};
            var r, i = Object.create(null),
                o = [];
            for (var a in e) a in t ? o.length && (i[a] = o, o = []) : o.push(a);
            var s = {};
            for (var c in t)
            {
                if (i[c])
                    for (r = 0; r < i[c].length; r++)
                    {
                        var u = i[c][r];
                        s[i[c][r]] = n(u)
                    }
                s[c] = n(c)
            }
            for (r = 0; r < o.length; r++) s[o[r]] = n(o[r]);
            return s
        }(t, r);
    return Object.keys(i).forEach((function(a)
    {
        var s = i[a];
        if (Object(o.isValidElement)(s))
        {
            var c = a in t,
                u = a in r,
                l = t[a],
                f = Object(o.isValidElement)(l) && !l.props.in;
            !u || c && !f ? u || !c || f ? u && c && Object(o.isValidElement)(l) && (i[a] = Object(o.cloneElement)(s,
            {
                onExited: n.bind(null, s),
                in: l.props.in,
                exit: Kr(s, "exit", e),
                enter: Kr(s, "enter", e)
            })) : i[a] = Object(o.cloneElement)(s,
            {
                in: !1
            }) : i[a] = Object(o.cloneElement)(s,
            {
                onExited: n.bind(null, s),
                in: !0,
                exit: Kr(s, "exit", e),
                enter: Kr(s, "enter", e)
            })
        }
    })), i
}
var Xr = Object.values || function(e)
    {
        return Object.keys(e).map((function(t)
        {
            return e[t]
        }))
    },
    Jr = function(e)
    {
        function t(t, n)
        {
            var r, i = (r = e.call(this, t, n) || this).handleExited.bind(Object(z.a)(Object(z.a)(r)));
            return r.state = {
                contextValue:
                {
                    isMounting: !0
                },
                handleExited: i,
                firstRender: !0
            }, r
        }
        Object(L.a)(t, e);
        var n = t.prototype;
        return n.componentDidMount = function()
        {
            this.mounted = !0, this.setState(
            {
                contextValue:
                {
                    isMounting: !1
                }
            })
        }, n.componentWillUnmount = function()
        {
            this.mounted = !1
        }, t.getDerivedStateFromProps = function(e, t)
        {
            var n, r, i = t.children,
                a = t.handleExited;
            return {
                children: t.firstRender ? (n = e, r = a, $r(n.children, (function(e)
                {
                    return Object(o.cloneElement)(e,
                    {
                        onExited: r.bind(null, e),
                        in: !0,
                        appear: Kr(e, "appear", n),
                        enter: Kr(e, "enter", n),
                        exit: Kr(e, "exit", n)
                    })
                }))) : Yr(e, i, a),
                firstRender: !1
            }
        }, n.handleExited = function(e, t)
        {
            var n = $r(this.props.children);
            e.key in n || (e.props.onExited && e.props.onExited(t), this.mounted && this.setState((function(t)
            {
                var n = Object(H.a)(
                {}, t.children);
                return delete n[e.key],
                {
                    children: n
                }
            })))
        }, n.render = function()
        {
            var e = this.props,
                t = e.component,
                n = e.childFactory,
                r = Object(V.a)(e, ["component", "childFactory"]),
                i = this.state.contextValue,
                o = Xr(this.state.children).map(n);
            return delete r.appear, delete r.enter, delete r.exit, null === t ? a.a.createElement(mr.Provider,
            {
                value: i
            }, o) : a.a.createElement(mr.Provider,
            {
                value: i
            }, a.a.createElement(t, r, o))
        }, t
    }(a.a.Component);
Jr.propTypes = {}, Jr.defaultProps = {
    component: "div",
    childFactory: function(e)
    {
        return e
    }
};
var Zr = Jr,
    Qr = "undefined" == typeof window ? o.useEffect : o.useLayoutEffect;
var ei = function(e)
    {
        var t = e.classes,
            n = e.pulsate,
            r = void 0 !== n && n,
            i = e.rippleX,
            a = e.rippleY,
            s = e.rippleSize,
            c = e.in,
            u = e.onExited,
            l = void 0 === u ? function() {} : u,
            f = e.timeout,
            h = o.useState(!1),
            d = h[0],
            p = h[1],
            m = Object(nr.default)(t.ripple, t.rippleVisible, r && t.ripplePulsate),
            v = {
                width: s,
                height: s,
                top: -s / 2 + a,
                left: -s / 2 + i
            },
            g = Object(nr.default)(t.child, d && t.childLeaving, r && t.childPulsate),
            y = ur(l);
        return Qr((function()
        {
            if (!c)
            {
                p(!0);
                var e = setTimeout(y, f);
                return function()
                {
                    clearTimeout(e)
                }
            }
        }), [y, c, f]), o.createElement("span",
        {
            className: m,
            style: v
        }, o.createElement("span",
        {
            className: g
        }))
    },
    ti = o.forwardRef((function(e, t)
    {
        var n = e.center,
            r = void 0 !== n && n,
            i = e.classes,
            a = e.className,
            s = Object(er.a)(e, ["center", "classes", "className"]),
            c = o.useState([]),
            u = c[0],
            l = c[1],
            f = o.useRef(0),
            h = o.useRef(null);
        o.useEffect((function()
        {
            h.current && (h.current(), h.current = null)
        }), [u]);
        var d = o.useRef(!1),
            p = o.useRef(null),
            m = o.useRef(null),
            v = o.useRef(null);
        o.useEffect((function()
        {
            return function()
            {
                clearTimeout(p.current)
            }
        }), []);
        var g = o.useCallback((function(e)
            {
                var t = e.pulsate,
                    n = e.rippleX,
                    r = e.rippleY,
                    a = e.rippleSize,
                    s = e.cb;
                l((function(e)
                {
                    return [].concat(Object(qr.a)(e), [o.createElement(ei,
                    {
                        key: f.current,
                        classes: i,
                        timeout: 550,
                        pulsate: t,
                        rippleX: n,
                        rippleY: r,
                        rippleSize: a
                    })])
                })), f.current += 1, h.current = s
            }), [i]),
            y = o.useCallback((function()
            {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
                    {},
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] :
                    {},
                    n = arguments.length > 2 ? arguments[2] : void 0,
                    i = t.pulsate,
                    o = void 0 !== i && i,
                    a = t.center,
                    s = void 0 === a ? r || t.pulsate : a,
                    c = t.fakeElement,
                    u = void 0 !== c && c;
                if ("mousedown" === e.type && d.current) d.current = !1;
                else
                {
                    "touchstart" === e.type && (d.current = !0);
                    var l, f, h, y = u ? null : v.current,
                        b = y ? y.getBoundingClientRect() :
                        {
                            width: 0,
                            height: 0,
                            left: 0,
                            top: 0
                        };
                    if (s || 0 === e.clientX && 0 === e.clientY || !e.clientX && !e.touches) l = Math.round(b.width / 2), f = Math.round(b.height / 2);
                    else
                    {
                        var w = e.clientX ? e.clientX : e.touches[0].clientX,
                            _ = e.clientY ? e.clientY : e.touches[0].clientY;
                        l = Math.round(w - b.left), f = Math.round(_ - b.top)
                    }
                    if (s)(h = Math.sqrt((2 * Math.pow(b.width, 2) + Math.pow(b.height, 2)) / 3)) % 2 == 0 && (h += 1);
                    else
                    {
                        var x = 2 * Math.max(Math.abs((y ? y.clientWidth : 0) - l), l) + 2,
                            E = 2 * Math.max(Math.abs((y ? y.clientHeight : 0) - f), f) + 2;
                        h = Math.sqrt(Math.pow(x, 2) + Math.pow(E, 2))
                    }
                    e.touches ? null === m.current && (m.current = function()
                    {
                        g(
                        {
                            pulsate: o,
                            rippleX: l,
                            rippleY: f,
                            rippleSize: h,
                            cb: n
                        })
                    }, p.current = setTimeout((function()
                    {
                        m.current && (m.current(), m.current = null)
                    }), 80)) : g(
                    {
                        pulsate: o,
                        rippleX: l,
                        rippleY: f,
                        rippleSize: h,
                        cb: n
                    })
                }
            }), [r, g]),
            b = o.useCallback((function()
            {
                y(
                {},
                {
                    pulsate: !0
                })
            }), [y]),
            w = o.useCallback((function(e, t)
            {
                if (clearTimeout(p.current), "touchend" === e.type && m.current) return e.persist(), m.current(), m.current = null, void(p.current = setTimeout((function()
                {
                    w(e, t)
                })));
                m.current = null, l((function(e)
                {
                    return e.length > 0 ? e.slice(1) : e
                })), h.current = t
            }), []);
        return o.useImperativeHandle(t, (function()
        {
            return {
                pulsate: b,
                start: y,
                stop: w
            }
        }), [b, y, w]), o.createElement("span", Object(H.a)(
        {
            className: Object(nr.default)(i.root, a),
            ref: v
        }, s), o.createElement(Zr,
        {
            component: null,
            exit: !0
        }, u))
    })),
    ni = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                overflow: "hidden",
                pointerEvents: "none",
                position: "absolute",
                zIndex: 0,
                top: 0,
                right: 0,
                bottom: 0,
                left: 0,
                borderRadius: "inherit"
            },
            ripple:
            {
                opacity: 0,
                position: "absolute"
            },
            rippleVisible:
            {
                opacity: .3,
                transform: "scale(1)",
                animation: "$enter ".concat(550, "ms ").concat(e.transitions.easing.easeInOut)
            },
            ripplePulsate:
            {
                animationDuration: "".concat(e.transitions.duration.shorter, "ms")
            },
            child:
            {
                opacity: 1,
                display: "block",
                width: "100%",
                height: "100%",
                borderRadius: "50%",
                backgroundColor: "currentColor"
            },
            childLeaving:
            {
                opacity: 0,
                animation: "$exit ".concat(550, "ms ").concat(e.transitions.easing.easeInOut)
            },
            childPulsate:
            {
                position: "absolute",
                left: 0,
                top: 0,
                animation: "$pulsate 2500ms ".concat(e.transitions.easing.easeInOut, " 200ms infinite")
            },
            "@keyframes enter":
            {
                "0%":
                {
                    transform: "scale(0)",
                    opacity: .1
                },
                "100%":
                {
                    transform: "scale(1)",
                    opacity: .3
                }
            },
            "@keyframes exit":
            {
                "0%":
                {
                    opacity: 1
                },
                "100%":
                {
                    opacity: 0
                }
            },
            "@keyframes pulsate":
            {
                "0%":
                {
                    transform: "scale(1)"
                },
                "50%":
                {
                    transform: "scale(0.92)"
                },
                "100%":
                {
                    transform: "scale(1)"
                }
            }
        }
    }),
    {
        flip: !1,
        name: "MuiTouchRipple"
    })(o.memo(ti)),
    ri = o.forwardRef((function(e, t)
    {
        var n = e.action,
            r = e.buttonRef,
            i = e.centerRipple,
            a = void 0 !== i && i,
            c = e.children,
            u = e.classes,
            l = e.className,
            f = e.component,
            h = void 0 === f ? "button" : f,
            d = e.disabled,
            p = void 0 !== d && d,
            m = e.disableRipple,
            v = void 0 !== m && m,
            g = e.disableTouchRipple,
            y = void 0 !== g && g,
            b = e.focusRipple,
            w = void 0 !== b && b,
            _ = e.focusVisibleClassName,
            x = e.onBlur,
            E = e.onClick,
            S = e.onFocus,
            M = e.onFocusVisible,
            T = e.onKeyDown,
            k = e.onKeyUp,
            A = e.onMouseDown,
            C = e.onMouseLeave,
            O = e.onMouseUp,
            P = e.onTouchEnd,
            R = e.onTouchMove,
            I = e.onTouchStart,
            N = e.onDragLeave,
            L = e.tabIndex,
            B = void 0 === L ? 0 : L,
            j = e.TouchRippleProps,
            F = e.type,
            U = void 0 === F ? "button" : F,
            D = Object(er.a)(e, ["action", "buttonRef", "centerRipple", "children", "classes", "className", "component", "disabled", "disableRipple", "disableTouchRipple", "focusRipple", "focusVisibleClassName", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseDown", "onMouseLeave", "onMouseUp", "onTouchEnd", "onTouchMove", "onTouchStart", "onDragLeave", "tabIndex", "TouchRippleProps", "type"]),
            z = o.useRef(null);
        var V = o.useRef(null),
            W = o.useState(!1),
            G = W[0],
            q = W[1];
        p && G && q(!1);
        var $ = Gr(),
            K = $.isFocusVisible,
            Y = $.onBlurVisible,
            X = $.ref;

        function J(e, t)
        {
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : y;
            return ur((function(r)
            {
                return t && t(r), !n && V.current && V.current[e](r), !0
            }))
        }
        o.useImperativeHandle(n, (function()
        {
            return {
                focusVisible: function()
                {
                    q(!0), z.current.focus()
                }
            }
        }), []), o.useEffect((function()
        {
            G && w && !v && V.current.pulsate()
        }), [v, w, G]);
        var Z = J("start", A),
            Q = J("stop", N),
            ee = J("stop", O),
            te = J("stop", (function(e)
            {
                G && e.preventDefault(), C && C(e)
            })),
            ne = J("start", I),
            re = J("stop", P),
            ie = J("stop", R),
            oe = J("stop", (function(e)
            {
                G && (Y(e), q(!1)), x && x(e)
            }), !1),
            ae = ur((function(e)
            {
                p || (z.current || (z.current = e.currentTarget), K(e) && (q(!0), M && M(e)), S && S(e))
            })),
            se = function()
            {
                var e = s.findDOMNode(z.current);
                return h && "button" !== h && !("A" === e.tagName && e.href)
            },
            ce = o.useRef(!1),
            ue = ur((function(e)
            {
                w && !ce.current && G && V.current && " " === e.key && (ce.current = !0, e.persist(), V.current.stop(e, (function()
                {
                    V.current.start(e)
                }))), e.target === e.currentTarget && se() && " " === e.key && e.preventDefault(), T && T(e), e.target === e.currentTarget && se() && "Enter" === e.key && (e.preventDefault(), E && E(e))
            })),
            le = ur((function(e)
            {
                w && " " === e.key && V.current && G && !e.defaultPrevented && (ce.current = !1, e.persist(), V.current.stop(e, (function()
                {
                    V.current.pulsate(e)
                }))), k && k(e), E && e.target === e.currentTarget && se() && " " === e.key && !e.defaultPrevented && E(e)
            })),
            fe = h;
        "button" === fe && D.href && (fe = "a");
        var he = {};
        "button" === fe ? (he.type = U, he.disabled = p) : ("a" === fe && D.href || (he.role = "button"), he["aria-disabled"] = p);
        var de = sr(r, t),
            pe = sr(X, z),
            me = sr(de, pe);
        return o.createElement(fe, Object(H.a)(
        {
            className: Object(nr.default)(u.root, l, G && [u.focusVisible, _], p && u.disabled),
            onBlur: oe,
            onClick: E,
            onFocus: ae,
            onKeyDown: ue,
            onKeyUp: le,
            onMouseDown: Z,
            onMouseLeave: te,
            onMouseUp: ee,
            onDragLeave: Q,
            onTouchEnd: re,
            onTouchMove: ie,
            onTouchStart: ne,
            ref: me,
            tabIndex: p ? -1 : B
        }, he, D), c, o.createElement(Lr, null, v || p ? null : o.createElement(ni, Object(H.a)(
        {
            ref: V,
            center: a
        }, j))))
    })),
    ii = Object(rr.a)(
    {
        root:
        {
            display: "inline-flex",
            alignItems: "center",
            justifyContent: "center",
            position: "relative",
            WebkitTapHighlightColor: "transparent",
            backgroundColor: "transparent",
            outline: 0,
            border: 0,
            margin: 0,
            borderRadius: 0,
            padding: 0,
            cursor: "pointer",
            userSelect: "none",
            verticalAlign: "middle",
            "-moz-appearance": "none",
            "-webkit-appearance": "none",
            textDecoration: "none",
            color: "inherit",
            "&::-moz-focus-inner":
            {
                borderStyle: "none"
            },
            "&$disabled":
            {
                pointerEvents: "none",
                cursor: "default"
            }
        },
        disabled:
        {},
        focusVisible:
        {}
    },
    {
        name: "MuiButtonBase"
    })(ri),
    oi = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.classes,
            i = e.className,
            a = e.color,
            s = void 0 === a ? "default" : a,
            c = e.component,
            u = void 0 === c ? "button" : c,
            l = e.disabled,
            f = void 0 !== l && l,
            h = e.disableElevation,
            d = void 0 !== h && h,
            p = e.disableFocusRipple,
            m = void 0 !== p && p,
            v = e.endIcon,
            g = e.focusVisibleClassName,
            y = e.fullWidth,
            b = void 0 !== y && y,
            w = e.size,
            _ = void 0 === w ? "medium" : w,
            x = e.startIcon,
            E = e.type,
            S = void 0 === E ? "button" : E,
            M = e.variant,
            T = void 0 === M ? "text" : M,
            k = Object(er.a)(e, ["children", "classes", "className", "color", "component", "disabled", "disableElevation", "disableFocusRipple", "endIcon", "focusVisibleClassName", "fullWidth", "size", "startIcon", "type", "variant"]),
            A = x && o.createElement("span",
            {
                className: Object(nr.default)(r.startIcon, r["iconSize".concat(Object(hr.a)(_))])
            }, x),
            C = v && o.createElement("span",
            {
                className: Object(nr.default)(r.endIcon, r["iconSize".concat(Object(hr.a)(_))])
            }, v);
        return o.createElement(ii, Object(H.a)(
        {
            className: Object(nr.default)(r.root, r[T], i, "inherit" === s ? r.colorInherit : "default" !== s && r["".concat(T).concat(Object(hr.a)(s))], "medium" !== _ && [r["".concat(T, "Size").concat(Object(hr.a)(_))], r["size".concat(Object(hr.a)(_))]], d && r.disableElevation, f && r.disabled, b && r.fullWidth),
            component: u,
            disabled: f,
            focusRipple: !m,
            focusVisibleClassName: Object(nr.default)(r.focusVisible, g),
            ref: t,
            type: S
        }, k), o.createElement("span",
        {
            className: r.label
        }, A, n, C))
    })),
    ai = Object(rr.a)((function(e)
    {
        return {
            root: Object(H.a)(
            {}, e.typography.button,
            {
                boxSizing: "border-box",
                minWidth: 64,
                padding: "6px 16px",
                borderRadius: e.shape.borderRadius,
                color: e.palette.text.primary,
                transition: e.transitions.create(["background-color", "box-shadow", "border"],
                {
                    duration: e.transitions.duration.short
                }),
                "&:hover":
                {
                    textDecoration: "none",
                    backgroundColor: Object(Cr.c)(e.palette.text.primary, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    },
                    "&$disabled":
                    {
                        backgroundColor: "transparent"
                    }
                },
                "&$disabled":
                {
                    color: e.palette.action.disabled
                }
            }),
            label:
            {
                width: "100%",
                display: "inherit",
                alignItems: "inherit",
                justifyContent: "inherit"
            },
            text:
            {
                padding: "6px 8px"
            },
            textPrimary:
            {
                color: e.palette.primary.main,
                "&:hover":
                {
                    backgroundColor: Object(Cr.c)(e.palette.primary.main, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                }
            },
            textSecondary:
            {
                color: e.palette.secondary.main,
                "&:hover":
                {
                    backgroundColor: Object(Cr.c)(e.palette.secondary.main, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                }
            },
            outlined:
            {
                padding: "5px 15px",
                border: "1px solid ".concat("light" === e.palette.type ? "rgba(0, 0, 0, 0.23)" : "rgba(255, 255, 255, 0.23)"),
                "&$disabled":
                {
                    border: "1px solid ".concat(e.palette.action.disabledBackground)
                }
            },
            outlinedPrimary:
            {
                color: e.palette.primary.main,
                border: "1px solid ".concat(Object(Cr.c)(e.palette.primary.main, .5)),
                "&:hover":
                {
                    border: "1px solid ".concat(e.palette.primary.main),
                    backgroundColor: Object(Cr.c)(e.palette.primary.main, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                }
            },
            outlinedSecondary:
            {
                color: e.palette.secondary.main,
                border: "1px solid ".concat(Object(Cr.c)(e.palette.secondary.main, .5)),
                "&:hover":
                {
                    border: "1px solid ".concat(e.palette.secondary.main),
                    backgroundColor: Object(Cr.c)(e.palette.secondary.main, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                },
                "&$disabled":
                {
                    border: "1px solid ".concat(e.palette.action.disabled)
                }
            },
            contained:
            {
                color: e.palette.getContrastText(e.palette.grey[300]),
                backgroundColor: e.palette.grey[300],
                boxShadow: e.shadows[2],
                "&:hover":
                {
                    backgroundColor: e.palette.grey.A100,
                    boxShadow: e.shadows[4],
                    "@media (hover: none)":
                    {
                        boxShadow: e.shadows[2],
                        backgroundColor: e.palette.grey[300]
                    },
                    "&$disabled":
                    {
                        backgroundColor: e.palette.action.disabledBackground
                    }
                },
                "&$focusVisible":
                {
                    boxShadow: e.shadows[6]
                },
                "&:active":
                {
                    boxShadow: e.shadows[8]
                },
                "&$disabled":
                {
                    color: e.palette.action.disabled,
                    boxShadow: e.shadows[0],
                    backgroundColor: e.palette.action.disabledBackground
                }
            },
            containedPrimary:
            {
                color: e.palette.primary.contrastText,
                backgroundColor: e.palette.primary.main,
                "&:hover":
                {
                    backgroundColor: e.palette.primary.dark,
                    "@media (hover: none)":
                    {
                        backgroundColor: e.palette.primary.main
                    }
                }
            },
            containedSecondary:
            {
                color: e.palette.secondary.contrastText,
                backgroundColor: e.palette.secondary.main,
                "&:hover":
                {
                    backgroundColor: e.palette.secondary.dark,
                    "@media (hover: none)":
                    {
                        backgroundColor: e.palette.secondary.main
                    }
                }
            },
            disableElevation:
            {
                boxShadow: "none",
                "&:hover":
                {
                    boxShadow: "none"
                },
                "&$focusVisible":
                {
                    boxShadow: "none"
                },
                "&:active":
                {
                    boxShadow: "none"
                },
                "&$disabled":
                {
                    boxShadow: "none"
                }
            },
            focusVisible:
            {},
            disabled:
            {},
            colorInherit:
            {
                color: "inherit",
                borderColor: "currentColor"
            },
            textSizeSmall:
            {
                padding: "4px 5px",
                fontSize: e.typography.pxToRem(13)
            },
            textSizeLarge:
            {
                padding: "8px 11px",
                fontSize: e.typography.pxToRem(15)
            },
            outlinedSizeSmall:
            {
                padding: "3px 9px",
                fontSize: e.typography.pxToRem(13)
            },
            outlinedSizeLarge:
            {
                padding: "7px 21px",
                fontSize: e.typography.pxToRem(15)
            },
            containedSizeSmall:
            {
                padding: "4px 10px",
                fontSize: e.typography.pxToRem(13)
            },
            containedSizeLarge:
            {
                padding: "8px 22px",
                fontSize: e.typography.pxToRem(15)
            },
            sizeSmall:
            {},
            sizeLarge:
            {},
            fullWidth:
            {
                width: "100%"
            },
            startIcon:
            {
                display: "inherit",
                marginRight: 8,
                marginLeft: -4,
                "&$iconSizeSmall":
                {
                    marginLeft: -2
                }
            },
            endIcon:
            {
                display: "inherit",
                marginRight: -4,
                marginLeft: 8,
                "&$iconSizeSmall":
                {
                    marginRight: -2
                }
            },
            iconSizeSmall:
            {
                "& > *:first-child":
                {
                    fontSize: 18
                }
            },
            iconSizeMedium:
            {
                "& > *:first-child":
                {
                    fontSize: 20
                }
            },
            iconSizeLarge:
            {
                "& > *:first-child":
                {
                    fontSize: 22
                }
            }
        }
    }),
    {
        name: "MuiButton"
    })(oi),
    si = o.forwardRef((function(e, t)
    {
        var n = e.edge,
            r = void 0 !== n && n,
            i = e.children,
            a = e.classes,
            s = e.className,
            c = e.color,
            u = void 0 === c ? "default" : c,
            l = e.disabled,
            f = void 0 !== l && l,
            h = e.disableFocusRipple,
            d = void 0 !== h && h,
            p = e.size,
            m = void 0 === p ? "medium" : p,
            v = Object(er.a)(e, ["edge", "children", "classes", "className", "color", "disabled", "disableFocusRipple", "size"]);
        return o.createElement(ii, Object(H.a)(
        {
            className: Object(nr.default)(a.root, s, "default" !== u && a["color".concat(Object(hr.a)(u))], f && a.disabled, "small" === m && a["size".concat(Object(hr.a)(m))],
            {
                start: a.edgeStart,
                end: a.edgeEnd
            } [r]),
            centerRipple: !0,
            focusRipple: !d,
            disabled: f,
            ref: t
        }, v), o.createElement("span",
        {
            className: a.label
        }, i))
    })),
    ci = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                textAlign: "center",
                flex: "0 0 auto",
                fontSize: e.typography.pxToRem(24),
                padding: 12,
                borderRadius: "50%",
                overflow: "visible",
                color: e.palette.action.active,
                transition: e.transitions.create("background-color",
                {
                    duration: e.transitions.duration.shortest
                }),
                "&:hover":
                {
                    backgroundColor: Object(Cr.c)(e.palette.action.active, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                },
                "&$disabled":
                {
                    backgroundColor: "transparent",
                    color: e.palette.action.disabled
                }
            },
            edgeStart:
            {
                marginLeft: -12,
                "$sizeSmall&":
                {
                    marginLeft: -3
                }
            },
            edgeEnd:
            {
                marginRight: -12,
                "$sizeSmall&":
                {
                    marginRight: -3
                }
            },
            colorInherit:
            {
                color: "inherit"
            },
            colorPrimary:
            {
                color: e.palette.primary.main,
                "&:hover":
                {
                    backgroundColor: Object(Cr.c)(e.palette.primary.main, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                }
            },
            colorSecondary:
            {
                color: e.palette.secondary.main,
                "&:hover":
                {
                    backgroundColor: Object(Cr.c)(e.palette.secondary.main, e.palette.action.hoverOpacity),
                    "@media (hover: none)":
                    {
                        backgroundColor: "transparent"
                    }
                }
            },
            disabled:
            {},
            sizeSmall:
            {
                padding: 3,
                fontSize: e.typography.pxToRem(18)
            },
            label:
            {
                width: "100%",
                display: "flex",
                alignItems: "inherit",
                justifyContent: "inherit"
            }
        }
    }),
    {
        name: "MuiIconButton"
    })(si),
    ui = n(251),
    li = n.n(ui);
n(565);
class fi extends a.a.Component
{
    renderRefreshButton(e)
    {
        return a.a.createElement(ai,
        {
            color: "secondary",
            size: "small",
            key: "snackbar-refresh-".concat(e.id),
            onClick: () => window.location.reload()
        }, "Refresh")
    }
    renderRemoveButton(e)
    {
        var
        {
            ackNotification: t
        } = this.props;
        return a.a.createElement(ci,
        {
            key: "snackbar-close-".concat(e.id),
            color: "inherit",
            onClick: () => t(e)
        }, a.a.createElement(li.a, null))
    }
    renderFatalSnackbar(e)
    {
        return a.a.createElement(Ir,
        {
            className: "Notification-Snackbar-Error",
            open: null != e.message,
            key: "snackbar-fatal-".concat(e.id),
            message: a.a.createElement("span", null, e.message),
            action: [this.renderRefreshButton(e), this.renderRemoveButton(e)],
            anchorOrigin:
            {
                vertical: "top",
                horizontal: "center"
            }
        })
    }
    renderErrorSnackbar(e)
    {
        return a.a.createElement(Ir,
        {
            className: "Notification-Snackbar-Error",
            open: null != e.message,
            key: "snackbar-error-".concat(e.id),
            message: a.a.createElement("span", null, e.message),
            action: this.renderRemoveButton(e),
            anchorOrigin:
            {
                vertical: "top",
                horizontal: "center"
            }
        })
    }
    renderSuccessSnackbar(e)
    {
        return a.a.createElement(Ir,
        {
            className: "Notification-Snackbar-Success",
            open: null != e.message,
            key: "snackbar-success-".concat(e.id),
            message: a.a.createElement("span", null, e.message),
            action: this.renderRemoveButton(e),
            anchorOrigin:
            {
                vertical: "top",
                horizontal: "center"
            }
        })
    }
    renderInfoSnackbar(e)
    {
        return a.a.createElement(Ir,
        {
            open: null != e.message,
            key: "snackbar-info-".concat(e.id),
            message: a.a.createElement("span", null, e.message),
            action: this.renderRemoveButton(e),
            anchorOrigin:
            {
                vertical: "top",
                horizontal: "center"
            }
        })
    }
    render()
    {
        var e = this,
            {
                notifications: t
            } = this.props,
            n = t.map(t => t.isError() ? e.renderErrorSnackbar(t) : t.isFatal() ? e.renderFatalSnackbar(t) : t.isSuccess() ? e.renderSuccessSnackbar(t) : t.isInfo() || t.isWarning() ? e.renderInfoSnackbar(t) : a.a.createElement(a.a.Fragment, null));
        return a.a.createElement(a.a.Fragment, null, n)
    }
}
fi.propTypes = {
    notifications: j.a.arrayOf(j.a.shape(
    {
        message: j.a.string.isRequired,
        id: j.a.string.isRequired,
        isError: j.a.func.isRequired,
        isFatal: j.a.func.isRequired
    }).isRequired).isRequired
};
var hi = Ce(e => (
    {
        notifications: e.ui.notifications
    }), e => (
    {
        ackNotification: t => e(t.acknowledged())
    }))(fi),
    di = {
        h1: "h1",
        h2: "h2",
        h3: "h3",
        h4: "h4",
        h5: "h5",
        h6: "h6",
        subtitle1: "h6",
        subtitle2: "h6",
        body1: "p",
        body2: "p"
    },
    pi = o.forwardRef((function(e, t)
    {
        var n = e.align,
            r = void 0 === n ? "inherit" : n,
            i = e.classes,
            a = e.className,
            s = e.color,
            c = void 0 === s ? "initial" : s,
            u = e.component,
            l = e.display,
            f = void 0 === l ? "initial" : l,
            h = e.gutterBottom,
            d = void 0 !== h && h,
            p = e.noWrap,
            m = void 0 !== p && p,
            v = e.paragraph,
            g = void 0 !== v && v,
            y = e.variant,
            b = void 0 === y ? "body1" : y,
            w = e.variantMapping,
            _ = void 0 === w ? di : w,
            x = Object(er.a)(e, ["align", "classes", "className", "color", "component", "display", "gutterBottom", "noWrap", "paragraph", "variant", "variantMapping"]),
            E = u || (g ? "p" : _[b] || di[b]) || "span";
        return o.createElement(E, Object(H.a)(
        {
            className: Object(nr.default)(i.root, a, "inherit" !== b && i[b], "initial" !== c && i["color".concat(Object(hr.a)(c))], m && i.noWrap, d && i.gutterBottom, g && i.paragraph, "inherit" !== r && i["align".concat(Object(hr.a)(r))], "initial" !== f && i["display".concat(Object(hr.a)(f))]),
            ref: t
        }, x))
    })),
    mi = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                margin: 0
            },
            body2: e.typography.body2,
            body1: e.typography.body1,
            caption: e.typography.caption,
            button: e.typography.button,
            h1: e.typography.h1,
            h2: e.typography.h2,
            h3: e.typography.h3,
            h4: e.typography.h4,
            h5: e.typography.h5,
            h6: e.typography.h6,
            subtitle1: e.typography.subtitle1,
            subtitle2: e.typography.subtitle2,
            overline: e.typography.overline,
            srOnly:
            {
                position: "absolute",
                height: 1,
                width: 1,
                overflow: "hidden"
            },
            alignLeft:
            {
                textAlign: "left"
            },
            alignCenter:
            {
                textAlign: "center"
            },
            alignRight:
            {
                textAlign: "right"
            },
            alignJustify:
            {
                textAlign: "justify"
            },
            noWrap:
            {
                overflow: "hidden",
                textOverflow: "ellipsis",
                whiteSpace: "nowrap"
            },
            gutterBottom:
            {
                marginBottom: "0.35em"
            },
            paragraph:
            {
                marginBottom: 16
            },
            colorInherit:
            {
                color: "inherit"
            },
            colorPrimary:
            {
                color: e.palette.primary.main
            },
            colorSecondary:
            {
                color: e.palette.secondary.main
            },
            colorTextPrimary:
            {
                color: e.palette.text.primary
            },
            colorTextSecondary:
            {
                color: e.palette.text.secondary
            },
            colorError:
            {
                color: e.palette.error.main
            },
            displayInline:
            {
                display: "inline"
            },
            displayBlock:
            {
                display: "block"
            }
        }
    }),
    {
        name: "MuiTypography"
    })(pi),
    vi = n(146),
    gi = n.n(vi),
    yi = n(252),
    bi = n.n(yi),
    wi = n(147),
    _i = n.n(wi),
    xi = n(253),
    Ei = n.n(xi),
    Si = n(254),
    Mi = n.n(Si),
    Ti = n(255),
    ki = n.n(Ti),
    Ai = n(256),
    Ci = n.n(Ai),
    Oi = n(257),
    Pi = n.n(Oi);
class Ri extends a.a.Component
{
    readableAddr(e)
    {
        return "".concat(e.substring(0, 6), "..").concat(e.substring(e.length - 4, e.length))
    }
    renderWalletImage(e)
    {
        var t, n = e.getWallet();
        if ("WalletConnect" === n.name && (t = Ei.a), "MetaMask" === n.name && (t = bi.a), "WalletLink" === n.name && (t = _i.a), "Coinbase" === n.name && (t = _i.a), "Trust" === n.name && (t = Mi.a), "imToken" === n.name && (t = ki.a), "Authereum" === n.name && (t = Ci.a), "Status" === n.name && (t = Pi.a), t) return a.a.createElement("img",
        {
            src: t,
            className: "NavbarContainer-WalletIcon"
        })
    }
    renderConnectButton()
    {
        var
        {
            web3State: e
        } = this.props;
        if (!e.isConnected()) return a.a.createElement(ai,
        {
            variant: "contained",
            size: "medium",
            color: "primary",
            onClick: () => e.connect()
        }, "Connect")
    }
    renderAddressButton()
    {
        var
        {
            web3State: e
        } = this.props;
        if (e.isConnected()) return (() => a.a.createElement(ai,
        {
            variant: "contained",
            size: "medium",
            color: "default",
            onClick: () => e.connect(),
            className: "NavbarContainer-Account"
        }, this.renderWalletImage(e), this.readableAddr(e.getAccount()), a.a.createElement("span",
        {
            className: "NavbarContainer-AccountIcon"
        }, a.a.createElement(gi.a,
        {
            diameter: 15,
            seed: Object(vi.jsNumberForAddress)(e.getAccount())
        }))))()
    }
    render()
    {
        return a.a.createElement("div",
        {
            className: "NavbarWeb3AccountContainer"
        }, this.renderConnectButton(), this.renderAddressButton())
    }
}
var Ii = Ri,
    Ni = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    Li = ["auto", !0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];

function Bi(e)
{
    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
        n = parseFloat(e);
    return "".concat(n / t).concat(String(e).replace(String(n), "") || "px")
}
var ji = o.forwardRef((function(e, t)
    {
        var n = e.alignContent,
            r = void 0 === n ? "stretch" : n,
            i = e.alignItems,
            a = void 0 === i ? "stretch" : i,
            s = e.classes,
            c = e.className,
            u = e.component,
            l = void 0 === u ? "div" : u,
            f = e.container,
            h = void 0 !== f && f,
            d = e.direction,
            p = void 0 === d ? "row" : d,
            m = e.item,
            v = void 0 !== m && m,
            g = e.justify,
            y = void 0 === g ? "flex-start" : g,
            b = e.lg,
            w = void 0 !== b && b,
            _ = e.md,
            x = void 0 !== _ && _,
            E = e.sm,
            S = void 0 !== E && E,
            M = e.spacing,
            T = void 0 === M ? 0 : M,
            k = e.wrap,
            A = void 0 === k ? "wrap" : k,
            C = e.xl,
            O = void 0 !== C && C,
            P = e.xs,
            R = void 0 !== P && P,
            I = e.zeroMinWidth,
            N = void 0 !== I && I,
            L = Object(er.a)(e, ["alignContent", "alignItems", "classes", "className", "component", "container", "direction", "item", "justify", "lg", "md", "sm", "spacing", "wrap", "xl", "xs", "zeroMinWidth"]),
            B = Object(nr.default)(s.root, c, h && [s.container, 0 !== T && s["spacing-xs-".concat(String(T))]], v && s.item, N && s.zeroMinWidth, "row" !== p && s["direction-xs-".concat(String(p))], "wrap" !== A && s["wrap-xs-".concat(String(A))], "stretch" !== a && s["align-items-xs-".concat(String(a))], "stretch" !== r && s["align-content-xs-".concat(String(r))], "flex-start" !== y && s["justify-xs-".concat(String(y))], !1 !== R && s["grid-xs-".concat(String(R))], !1 !== S && s["grid-sm-".concat(String(S))], !1 !== x && s["grid-md-".concat(String(x))], !1 !== w && s["grid-lg-".concat(String(w))], !1 !== O && s["grid-xl-".concat(String(O))]);
        return o.createElement(l, Object(H.a)(
        {
            className: B,
            ref: t
        }, L))
    })),
    Fi = Object(rr.a)((function(e)
    {
        return Object(H.a)(
        {
            root:
            {},
            container:
            {
                boxSizing: "border-box",
                display: "flex",
                flexWrap: "wrap",
                width: "100%"
            },
            item:
            {
                boxSizing: "border-box",
                margin: "0"
            },
            zeroMinWidth:
            {
                minWidth: 0
            },
            "direction-xs-column":
            {
                flexDirection: "column"
            },
            "direction-xs-column-reverse":
            {
                flexDirection: "column-reverse"
            },
            "direction-xs-row-reverse":
            {
                flexDirection: "row-reverse"
            },
            "wrap-xs-nowrap":
            {
                flexWrap: "nowrap"
            },
            "wrap-xs-wrap-reverse":
            {
                flexWrap: "wrap-reverse"
            },
            "align-items-xs-center":
            {
                alignItems: "center"
            },
            "align-items-xs-flex-start":
            {
                alignItems: "flex-start"
            },
            "align-items-xs-flex-end":
            {
                alignItems: "flex-end"
            },
            "align-items-xs-baseline":
            {
                alignItems: "baseline"
            },
            "align-content-xs-center":
            {
                alignContent: "center"
            },
            "align-content-xs-flex-start":
            {
                alignContent: "flex-start"
            },
            "align-content-xs-flex-end":
            {
                alignContent: "flex-end"
            },
            "align-content-xs-space-between":
            {
                alignContent: "space-between"
            },
            "align-content-xs-space-around":
            {
                alignContent: "space-around"
            },
            "justify-xs-center":
            {
                justifyContent: "center"
            },
            "justify-xs-flex-end":
            {
                justifyContent: "flex-end"
            },
            "justify-xs-space-between":
            {
                justifyContent: "space-between"
            },
            "justify-xs-space-around":
            {
                justifyContent: "space-around"
            },
            "justify-xs-space-evenly":
            {
                justifyContent: "space-evenly"
            }
        }, function(e, t)
        {
            var n = {};
            return Ni.forEach((function(r)
            {
                var i = e.spacing(r);
                0 !== i && (n["spacing-".concat(t, "-").concat(r)] = {
                    margin: "-".concat(Bi(i, 2)),
                    width: "calc(100% + ".concat(Bi(i), ")"),
                    "& > $item":
                    {
                        padding: Bi(i, 2)
                    }
                })
            })), n
        }(e, "xs"),
        {}, e.breakpoints.keys.reduce((function(t, n)
        {
            return function(e, t, n)
            {
                var r = {};
                Li.forEach((function(e)
                {
                    var t = "grid-".concat(n, "-").concat(e);
                    if (!0 !== e)
                        if ("auto" !== e)
                        {
                            var i = "".concat(Math.round(e / 12 * 1e8) / 1e6, "%");
                            r[t] = {
                                flexBasis: i,
                                flexGrow: 0,
                                maxWidth: i
                            }
                        }
                    else r[t] = {
                        flexBasis: "auto",
                        flexGrow: 0,
                        maxWidth: "none"
                    };
                    else r[t] = {
                        flexBasis: 0,
                        flexGrow: 1,
                        maxWidth: "100%"
                    }
                })), "xs" === n ? Object(H.a)(e, r) : e[t.breakpoints.up(n)] = r
            }(t, e, n), t
        }),
        {}))
    }),
    {
        name: "MuiGrid"
    })(ji),
    Ui = (n(580), n(258)),
    Di = n.n(Ui),
    zi = n(259),
    Hi = n.n(zi),
    Vi = n(260),
    Wi = n.n(Vi),
    Gi = n(261),
    qi = n.n(Gi),
    $i = n(262),
    Ki = n.n($i),
    Yi = n(263),
    Xi = n.n(Yi),
    Ji = n(264),
    Zi = n.n(Ji),
    Qi = n(265),
    eo = n.n(Qi),
    to = n(266),
    no = n.n(to),
    ro = n(267),
    io = n.n(ro),
    oo = n(268),
    ao = n.n(oo),
    so = n(269),
    co = n.n(so),
    uo = n(270),
    lo = n.n(uo);

function fo(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function ho(e)
{
    var t = e.split("-"),
        n = t[0],
        r = t[1],
        i = function(e)
        {
            return "uniswap" === e ? Di.a : "mooniswap" == e ? Hi.a : void 0
        }(r),
        o = [t[2], t[3]],
        a = o.map(e =>
        {
            return "weth" === (t = e) ? Wi.a : "ampl" === t ? qi.a : "bal" === t ? Zi.a : "bzrx" === t ? eo.a : "comp" === t ? Xi.a : "crv" === t ? io.a : "link" === t ? Ki.a : "mkr" === t ? co.a : "nmr" === t ? ao.a : "yfi" === t ? no.a : "yusd" === t ? lo.a : void 0;
            var t
        });
    return {
        geyser: n,
        platform: r,
        platformIcon: i,
        assets: o,
        assetIcons: a
    }
}
class po extends a.a.Component
{
    redirectToPool(e)
    {
        this.props.history.push("/geyser/".concat(e))
    }
    getExchangeLink(e, t)
    {
        var n = e.stakingTokenComposition;
        return 0 === n.length ? "#" : t.includes("uniswap") ? "https://uniswap.exchange/add/".concat(n[0].address, "-").concat(n[1].address) : t.includes("mooniswap") ? "https://mooniswap.exchange/#/add/".concat(n[0].address, "/").concat(n[1].address) : "#"
    }
    renderGeyserSelect()
    {
        var
        {
            activePoolRef: e,
            pilotUserInfo: t,
            hasPilotStake: n
        } = this.props;
        return a.a.createElement("div",
        {
            className: "GeyserSelectContainer"
        }, a.a.createElement("select",
        {
            value: e,
            onChange: e => this.redirectToPool(e.target.value)
        }, a.a.createElement("optgroup",
        {
            label: "Beehive V2 - Uniswap"
        }, a.a.createElement("option",
        {
            value: "beehiveV2-uniswap-weth-ampl"
        }, "ETH-AMPL")), a.a.createElement("optgroup",
        {
            label: "Enceladus - Mooniswap"
        }, a.a.createElement("option",
        {
            value: "enceladus-mooniswap-bal-ampl"
        }, "BAL-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-bzrx-ampl"
        }, "BZRX-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-comp-ampl"
        }, "COMP-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-ampl-crv"
        }, "AMPL-CRV"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-link-ampl"
        }, "LINK-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-mkr-ampl"
        }, "MKR-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-nmr-ampl"
        }, "NMR-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-yfi-ampl"
        }, "YFI-AMPL"), a.a.createElement("option",
        {
            value: "enceladus-mooniswap-ampl-ycrv"
        }, "AMPL-YCRV")), a.a.createElement("optgroup",
        {
            label: "Beehive V1 - Uniswap"
        }, a.a.createElement("option",
        {
            value: "beehiveV1-uniswap-weth-ampl"
        }, "ETH-AMPL")), n ? a.a.createElement("optgroup",
        {
            label: "Pilot - Uniswap"
        }, a.a.createElement("option",
        {
            value: "pilot-uniswap-weth-ampl"
        }, "ETH-AMPL")) : null))
    }
    renderGeyserInfo()
    {
        var
        {
            poolInfo: e,
            activePoolRef: t
        } = this.props, n = ho(t);
        return a.a.createElement("a",
        {
            href: this.getExchangeLink(e, t),
            target: "_blank"
        }, a.a.createElement("div",
        {
            className: "GeyserInfoContainer"
        }, a.a.createElement("div",
        {
            className: "Navbar-PoolPlatformContainer"
        }, a.a.createElement("img",
        {
            className: "Navbar-PoolPlatformLogo",
            src: n.platformIcon
        }), a.a.createElement("span",
        {
            className: "Navbar-PoolPlatform"
        }, n.platform), a.a.createElement("div",
        {
            className: "Navbar-PoolAssetsContainer"
        }, a.a.createElement("div", null, a.a.createElement("img",
        {
            className: "Navbar-PoolAssetsLogo",
            src: n.assetIcons[0]
        }), a.a.createElement("span",
        {
            className: "Navbar-PoolAsset"
        }, n.assets[0]), a.a.createElement("span",
        {
            className: "Navbar-PoolAssetSlash"
        }, "/"), a.a.createElement("img",
        {
            className: "Navbar-PoolAssetsLogo",
            src: n.assetIcons[1]
        }), a.a.createElement("span",
        {
            className: "Navbar-PoolAsset"
        }, n.assets[1]))))))
    }
    render()
    {
        var
        {
            web3State: e
        } = this.props;
        return a.a.createElement("div", null, a.a.createElement("div",
        {
            className: "welcome-msg"
        }, a.a.createElement(mi,
        {
            variant: "body1",
            align: "center"
        }, a.a.createElement("a",
        {
            className: "welcome-msg-a",
            href: "https://uniswap.info/pair/0xc5be99a02c6857f9eac67bbce58df5572498f40c/",
            target: "_blank"
        }, "Uniswap V2 (ETH-AMPL)"), "Â  Geyser Beehive V2 is now Live! ðŸŽ‰")), a.a.createElement("div",
        {
            className: "NavbarContainer"
        }, a.a.createElement(Fi,
        {
            container: !0
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 8,
            sm: 8,
            md: 8,
            lg: 8,
            xl: 8
        }, a.a.createElement("div",
        {
            className: "LogoContainer"
        }, a.a.createElement("a",
        {
            href: "/dapps"
        }, a.a.createElement("i", null, "Geyser"))), this.renderGeyserSelect(), this.renderGeyserInfo()), a.a.createElement(Fi,
        {
            item: !0,
            xs: 4,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
        }, a.a.createElement(Ii,
        {
            web3State: e
        })))))
    }
}
var mo, vo, go, yo = (mo = Ce((e, t) =>
{
    var n = t.activePoolRef,
        r = e.distributionPools.pools[n];
    return {
        web3State: e.distributionPools.web3State,
        uiInteraction: e.ui.uiInteraction,
        poolInfo: r.pool
    }
}, e =>
{
    return {
        openConnectModal: (t = function*(t)
        {
            return e(t.openConnectModal())
        }, n = function()
        {
            var e = this,
                n = arguments;
            return new Promise((function(r, i)
            {
                var o = t.apply(e, n);

                function a(e)
                {
                    fo(o, r, i, a, s, "next", e)
                }

                function s(e)
                {
                    fo(o, r, i, a, s, "throw", e)
                }
                a(void 0)
            }))
        }, function(e)
        {
            return n.apply(this, arguments)
        })
    };
    var t, n
})(po), vo = "withRouter(" + (mo.displayName || mo.name) + ")", (go = function(e)
{
    var t = e.wrappedComponentRef,
        n = Object(V.a)(e, ["wrappedComponentRef"]);
    return a.a.createElement(st.Consumer, null, (function(e)
    {
        return e || Fe(!1), a.a.createElement(mo, Object(H.a)(
        {}, n, e,
        {
            ref: t
        }))
    }))
}).displayName = vo, go.WrappedComponent = mo, G()(go, mo));
n(583);
class bo extends a.a.Component
{
    render()
    {
        return a.a.createElement("div",
        {
            className: "Footer"
        }, a.a.createElement("ul",
        {
            className: "Footer-ListContainer"
        }, a.a.createElement("li",
        {
            className: "Footer-Li carrot"
        }, ">>"), a.a.createElement("li",
        {
            className: "Footer-Li"
        }, a.a.createElement("a",
        {
            href: "https://www.ampleforth.org/about/",
            target: "_blank"
        }, "About")), a.a.createElement("li",
        {
            className: "Footer-Li"
        }, a.a.createElement("a",
        {
            href: "https://www.ampltalk.org/app/forum/ampl-geyser-19/topic/about-the-geyser-21/",
            target: "_blank"
        }, "Docs"))))
    }
}
var wo, _o = bo;

function xo(e)
{
    var t, n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 166;

    function r()
    {
        for (var r = arguments.length, i = new Array(r), o = 0; o < r; o++) i[o] = arguments[o];
        var a = this,
            s = function()
            {
                e.apply(a, i)
            };
        clearTimeout(t), t = setTimeout(s, n)
    }
    return r.clear = function()
    {
        clearTimeout(t)
    }, r
}

function Eo(e)
{
    return or(e).defaultView || window
}

function So()
{
    if (wo) return wo;
    var e = document.createElement("div");
    return e.appendChild(document.createTextNode("ABCD")), e.dir = "rtl", e.style.fontSize = "14px", e.style.width = "4px", e.style.height = "1px", e.style.position = "absolute", e.style.top = "-1000px", e.style.overflow = "scroll", document.body.appendChild(e), wo = "reverse", e.scrollLeft > 0 ? wo = "default" : (e.scrollLeft = 1, 0 === e.scrollLeft && (wo = "negative")), document.body.removeChild(e), wo
}

function Mo(e, t)
{
    var n = e.scrollLeft;
    if ("rtl" !== t) return n;
    switch (So())
    {
        case "negative":
            return e.scrollWidth - e.clientWidth + n;
        case "reverse":
            return e.scrollWidth - e.clientWidth - n;
        default:
            return n
    }
}

function To(e)
{
    return (1 + Math.sin(Math.PI * e - Math.PI / 2)) / 2
}
var ko = {
    width: 99,
    height: 99,
    position: "absolute",
    top: -9999,
    overflow: "scroll"
};

function Ao(e)
{
    var t = e.onChange,
        n = Object(er.a)(e, ["onChange"]),
        r = o.useRef(),
        i = o.useRef(null),
        a = function()
        {
            r.current = i.current.offsetHeight - i.current.clientHeight
        };
    return o.useEffect((function()
    {
        var e = xo((function()
        {
            var e = r.current;
            a(), e !== r.current && t(r.current)
        }));
        return window.addEventListener("resize", e),
            function()
            {
                e.clear(), window.removeEventListener("resize", e)
            }
    }), [t]), o.useEffect((function()
    {
        a(), t(r.current)
    }), [t]), o.createElement("div", Object(H.a)(
    {
        style: ko,
        ref: i
    }, n))
}
var Co = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.color,
            a = e.orientation,
            s = Object(er.a)(e, ["classes", "className", "color", "orientation"]);
        return o.createElement("span", Object(H.a)(
        {
            className: Object(nr.default)(n.root, n["color".concat(Object(hr.a)(i))], r, "vertical" === a && n.vertical),
            ref: t
        }, s))
    })),
    Oo = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                position: "absolute",
                height: 2,
                bottom: 0,
                width: "100%",
                transition: e.transitions.create()
            },
            colorPrimary:
            {
                backgroundColor: e.palette.primary.main
            },
            colorSecondary:
            {
                backgroundColor: e.palette.secondary.main
            },
            vertical:
            {
                height: "100%",
                width: 2,
                right: 0
            }
        }
    }),
    {
        name: "PrivateTabIndicator"
    })(Co),
    Po = n(241);

function Ro(e, t)
{
    var n = o.memo(o.forwardRef((function(t, n)
    {
        return o.createElement(Po.a, Object(H.a)(
        {}, t,
        {
            ref: n
        }), e)
    })));
    return n.muiName = Po.a.muiName, n
}
var Io = Ro(o.createElement("path",
    {
        d: "M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
    })),
    No = Ro(o.createElement("path",
    {
        d: "M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
    })),
    Lo = o.createElement(Io,
    {
        fontSize: "small"
    }),
    Bo = o.createElement(No,
    {
        fontSize: "small"
    }),
    jo = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.direction,
            a = e.orientation,
            s = e.visible,
            c = Object(er.a)(e, ["classes", "className", "direction", "orientation", "visible"]),
            u = Object(nr.default)(n.root, r, "vertical" === a && n.vertical);
        return s ? o.createElement(ii, Object(H.a)(
        {
            component: "div",
            className: u,
            ref: t,
            role: null,
            tabIndex: null
        }, c), "left" === i ? Lo : Bo) : o.createElement("div",
        {
            className: u
        })
    })),
    Fo = Object(rr.a)(
    {
        root:
        {
            width: 40,
            flexShrink: 0
        },
        vertical:
        {
            width: "100%",
            height: 40,
            "& svg":
            {
                transform: "rotate(90deg)"
            }
        }
    },
    {
        name: "PrivateTabScrollButton"
    })(jo),
    Uo = o.forwardRef((function(e, t)
    {
        var n = e.action,
            r = e.centered,
            i = void 0 !== r && r,
            a = e.children,
            s = e.classes,
            c = e.className,
            u = e.component,
            l = void 0 === u ? "div" : u,
            f = e.indicatorColor,
            h = void 0 === f ? "secondary" : f,
            d = e.onChange,
            p = e.orientation,
            m = void 0 === p ? "horizontal" : p,
            v = e.ScrollButtonComponent,
            g = void 0 === v ? Fo : v,
            y = e.scrollButtons,
            b = void 0 === y ? "auto" : y,
            w = e.TabIndicatorProps,
            _ = void 0 === w ?
            {} : w,
            x = e.textColor,
            E = void 0 === x ? "inherit" : x,
            S = e.value,
            M = e.variant,
            T = void 0 === M ? "standard" : M,
            k = Object(er.a)(e, ["action", "centered", "children", "classes", "className", "component", "indicatorColor", "onChange", "orientation", "ScrollButtonComponent", "scrollButtons", "TabIndicatorProps", "textColor", "value", "variant"]),
            A = wr(),
            C = "scrollable" === T,
            O = "rtl" === A.direction,
            P = "vertical" === m,
            R = P ? "scrollTop" : "scrollLeft",
            I = P ? "top" : "left",
            N = P ? "bottom" : "right",
            L = P ? "clientHeight" : "clientWidth",
            B = P ? "height" : "width";
        var j = o.useState(!1),
            F = j[0],
            U = j[1],
            D = o.useState(
            {}),
            z = D[0],
            V = D[1],
            W = o.useState(
            {
                start: !1,
                end: !1
            }),
            G = W[0],
            q = W[1],
            $ = o.useState(
            {
                overflow: "hidden",
                marginBottom: null
            }),
            K = $[0],
            Y = $[1],
            X = new Map,
            J = o.useRef(null),
            Z = o.useRef(null),
            Q = function()
            {
                var e, t, n = J.current;
                if (n)
                {
                    var r = n.getBoundingClientRect();
                    e = {
                        clientWidth: n.clientWidth,
                        scrollLeft: n.scrollLeft,
                        scrollTop: n.scrollTop,
                        scrollLeftNormalized: Mo(n, A.direction),
                        scrollWidth: n.scrollWidth,
                        top: r.top,
                        bottom: r.bottom,
                        left: r.left,
                        right: r.right
                    }
                }
                if (n && !1 !== S)
                {
                    var i = Z.current.children;
                    if (i.length > 0)
                    {
                        var o = i[X.get(S)];
                        0, t = o ? o.getBoundingClientRect() : null
                    }
                }
                return {
                    tabsMeta: e,
                    tabMeta: t
                }
            },
            ee = ur((function()
            {
                var e, t = Q(),
                    n = t.tabsMeta,
                    r = t.tabMeta,
                    i = 0;
                if (r && n)
                    if (P) i = r.top - n.top + n.scrollTop;
                    else
                    {
                        var o = O ? n.scrollLeftNormalized + n.clientWidth - n.scrollWidth : n.scrollLeft;
                        i = r.left - n.left + o
                    } var a = (e = {}, Object(tr.a)(e, I, i), Object(tr.a)(e, B, r ? r[B] : 0), e);
                if (isNaN(z[I]) || isNaN(z[B])) V(a);
                else
                {
                    var s = Math.abs(z[I] - a[I]),
                        c = Math.abs(z[B] - a[B]);
                    (s >= 1 || c >= 1) && V(a)
                }
            })),
            te = function(e)
            {
                ! function(e, t, n)
                {
                    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] :
                        {},
                        i = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : function() {},
                        o = r.ease,
                        a = void 0 === o ? To : o,
                        s = r.duration,
                        c = void 0 === s ? 300 : s,
                        u = null,
                        l = t[e],
                        f = !1,
                        h = function()
                        {
                            f = !0
                        },
                        d = function r(o)
                        {
                            if (f) i(new Error("Animation cancelled"));
                            else
                            {
                                null === u && (u = o);
                                var s = Math.min(1, (o - u) / c);
                                t[e] = a(s) * (n - l) + l, s >= 1 ? requestAnimationFrame((function()
                                {
                                    i(null)
                                })) : requestAnimationFrame(r)
                            }
                        };
                    l === n ? i(new Error("Element already at target position")) : requestAnimationFrame(d)
                }(R, J.current, e)
            },
            ne = function(e)
            {
                var t = J.current[R];
                P ? t += e : (t += e * (O ? -1 : 1), t *= O && "reverse" === So() ? -1 : 1), te(t)
            },
            re = function()
            {
                ne(-J.current[L])
            },
            ie = function()
            {
                ne(J.current[L])
            },
            oe = o.useCallback((function(e)
            {
                Y(
                {
                    overflow: null,
                    marginBottom: -e
                })
            }), []),
            ae = ur((function()
            {
                var e = Q(),
                    t = e.tabsMeta,
                    n = e.tabMeta;
                if (n && t)
                    if (n[I] < t[I])
                    {
                        var r = t[R] + (n[I] - t[I]);
                        te(r)
                    }
                else if (n[N] > t[N])
                {
                    var i = t[R] + (n[N] - t[N]);
                    te(i)
                }
            })),
            se = ur((function()
            {
                if (C && "off" !== b)
                {
                    var e, t, n = J.current,
                        r = n.scrollTop,
                        i = n.scrollHeight,
                        o = n.clientHeight,
                        a = n.scrollWidth,
                        s = n.clientWidth;
                    if (P) e = r > 1, t = r < i - o - 1;
                    else
                    {
                        var c = Mo(J.current, A.direction);
                        e = O ? c < a - s - 1 : c > 1, t = O ? c > 1 : c < a - s - 1
                    }
                    e === G.start && t === G.end || q(
                    {
                        start: e,
                        end: t
                    })
                }
            }));
        o.useEffect((function()
        {
            var e = xo((function()
                {
                    ee(), se()
                })),
                t = Eo(J.current);
            return t.addEventListener("resize", e),
                function()
                {
                    e.clear(), t.removeEventListener("resize", e)
                }
        }), [ee, se]);
        var ce = o.useCallback(xo((function()
        {
            se()
        })));
        o.useEffect((function()
        {
            return function()
            {
                ce.clear()
            }
        }), [ce]), o.useEffect((function()
        {
            U(!0)
        }), []), o.useEffect((function()
        {
            ee(), se()
        })), o.useEffect((function()
        {
            ae()
        }), [ae, z]), o.useImperativeHandle(n, (function()
        {
            return {
                updateIndicator: ee,
                updateScrollButtons: se
            }
        }), [ee, se]);
        var ue = o.createElement(Oo, Object(H.a)(
            {
                className: s.indicator,
                orientation: m,
                color: h
            }, _,
            {
                style: Object(H.a)(
                {}, z,
                {}, _.style)
            })),
            le = 0,
            fe = o.Children.map(a, (function(e)
            {
                if (!o.isValidElement(e)) return null;
                var t = void 0 === e.props.value ? le : e.props.value;
                X.set(t, le);
                var n = t === S;
                return le += 1, o.cloneElement(e,
                {
                    fullWidth: "fullWidth" === T,
                    indicator: n && !F && ue,
                    selected: n,
                    onChange: d,
                    textColor: E,
                    value: t
                })
            })),
            he = function()
            {
                var e = {};
                e.scrollbarSizeListener = C ? o.createElement(Ao,
                {
                    className: s.scrollable,
                    onChange: oe
                }) : null;
                var t = G.start || G.end,
                    n = C && ("auto" === b && t || "desktop" === b || "on" === b);
                return e.scrollButtonStart = n ? o.createElement(g,
                {
                    orientation: m,
                    direction: O ? "right" : "left",
                    onClick: re,
                    visible: G.start,
                    className: Object(nr.default)(s.scrollButtons, "on" !== b && s.scrollButtonsDesktop)
                }) : null, e.scrollButtonEnd = n ? o.createElement(g,
                {
                    orientation: m,
                    direction: O ? "left" : "right",
                    onClick: ie,
                    visible: G.end,
                    className: Object(nr.default)(s.scrollButtons, "on" !== b && s.scrollButtonsDesktop)
                }) : null, e
            }();
        return o.createElement(l, Object(H.a)(
        {
            className: Object(nr.default)(s.root, c, P && s.vertical),
            ref: t
        }, k), he.scrollButtonStart, he.scrollbarSizeListener, o.createElement("div",
        {
            className: Object(nr.default)(s.scroller, C ? s.scrollable : s.fixed),
            style: K,
            ref: J,
            onScroll: ce
        }, o.createElement("div",
        {
            className: Object(nr.default)(s.flexContainer, P && s.flexContainerVertical, i && !C && s.centered),
            ref: Z,
            role: "tablist"
        }, fe), F && ue), he.scrollButtonEnd)
    })),
    Do = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                overflow: "hidden",
                minHeight: 48,
                WebkitOverflowScrolling: "touch",
                display: "flex"
            },
            vertical:
            {
                flexDirection: "column"
            },
            flexContainer:
            {
                display: "flex"
            },
            flexContainerVertical:
            {
                flexDirection: "column"
            },
            centered:
            {
                justifyContent: "center"
            },
            scroller:
            {
                position: "relative",
                display: "inline-block",
                flex: "1 1 auto",
                whiteSpace: "nowrap"
            },
            fixed:
            {
                overflowX: "hidden",
                width: "100%"
            },
            scrollable:
            {
                overflowX: "scroll",
                scrollbarWidth: "none",
                "&::-webkit-scrollbar":
                {
                    display: "none"
                }
            },
            scrollButtons:
            {},
            scrollButtonsDesktop: Object(tr.a)(
            {}, e.breakpoints.down("xs"),
            {
                display: "none"
            }),
            indicator:
            {}
        }
    }),
    {
        name: "MuiTabs"
    })(Uo),
    zo = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.disabled,
            a = void 0 !== i && i,
            s = e.disableFocusRipple,
            c = void 0 !== s && s,
            u = e.fullWidth,
            l = e.icon,
            f = e.indicator,
            h = e.label,
            d = e.onChange,
            p = e.onClick,
            m = e.selected,
            v = e.textColor,
            g = void 0 === v ? "inherit" : v,
            y = e.value,
            b = e.wrapped,
            w = void 0 !== b && b,
            _ = Object(er.a)(e, ["classes", "className", "disabled", "disableFocusRipple", "fullWidth", "icon", "indicator", "label", "onChange", "onClick", "selected", "textColor", "value", "wrapped"]);
        return o.createElement(ii, Object(H.a)(
        {
            focusRipple: !c,
            className: Object(nr.default)(n.root, n["textColor".concat(Object(hr.a)(g))], r, a && n.disabled, m && n.selected, h && l && n.labelIcon, u && n.fullWidth, w && n.wrapped),
            ref: t,
            role: "tab",
            "aria-selected": m,
            disabled: a,
            onClick: function(e)
            {
                d && d(e, y), p && p(e)
            }
        }, _), o.createElement("span",
        {
            className: n.wrapper
        }, l, h), f)
    })),
    Ho = Object(rr.a)((function(e)
    {
        var t;
        return {
            root: Object(H.a)(
            {}, e.typography.button, (t = {
                maxWidth: 264,
                minWidth: 72,
                position: "relative",
                boxSizing: "border-box",
                minHeight: 48,
                flexShrink: 0,
                padding: "6px 12px"
            }, Object(tr.a)(t, e.breakpoints.up("sm"),
            {
                padding: "6px 24px"
            }), Object(tr.a)(t, "overflow", "hidden"), Object(tr.a)(t, "whiteSpace", "normal"), Object(tr.a)(t, "textAlign", "center"), Object(tr.a)(t, e.breakpoints.up("sm"),
            {
                minWidth: 160
            }), t)),
            labelIcon:
            {
                minHeight: 72,
                paddingTop: 9,
                "& $wrapper > *:first-child":
                {
                    marginBottom: 6
                }
            },
            textColorInherit:
            {
                color: "inherit",
                opacity: .7,
                "&$selected":
                {
                    opacity: 1
                },
                "&$disabled":
                {
                    opacity: .5
                }
            },
            textColorPrimary:
            {
                color: e.palette.text.secondary,
                "&$selected":
                {
                    color: e.palette.primary.main
                },
                "&$disabled":
                {
                    color: e.palette.text.disabled
                }
            },
            textColorSecondary:
            {
                color: e.palette.text.secondary,
                "&$selected":
                {
                    color: e.palette.secondary.main
                },
                "&$disabled":
                {
                    color: e.palette.text.disabled
                }
            },
            selected:
            {},
            disabled:
            {},
            fullWidth:
            {
                flexShrink: 1,
                flexGrow: 1,
                flexBasis: 0,
                maxWidth: "none"
            },
            wrapped:
            {
                fontSize: e.typography.pxToRem(12),
                lineHeight: 1.5
            },
            wrapper:
            {
                display: "inline-flex",
                alignItems: "center",
                justifyContent: "center",
                width: "100%",
                flexDirection: "column"
            }
        }
    }),
    {
        name: "MuiTab"
    })(zo),
    Vo = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.color,
            a = void 0 === i ? "primary" : i,
            s = e.component,
            c = void 0 === s ? "a" : s,
            u = e.onBlur,
            l = e.onFocus,
            f = e.TypographyClasses,
            h = e.underline,
            d = void 0 === h ? "hover" : h,
            p = e.variant,
            m = void 0 === p ? "inherit" : p,
            v = Object(er.a)(e, ["classes", "className", "color", "component", "onBlur", "onFocus", "TypographyClasses", "underline", "variant"]),
            g = Gr(),
            y = g.isFocusVisible,
            b = g.onBlurVisible,
            w = g.ref,
            _ = o.useState(!1),
            x = _[0],
            E = _[1],
            S = sr(t, w);
        return o.createElement(mi, Object(H.a)(
        {
            className: Object(nr.default)(n.root, n["underline".concat(Object(hr.a)(d))], r, x && n.focusVisible, "button" === c && n.button),
            classes: f,
            color: a,
            component: c,
            onBlur: function(e)
            {
                x && (b(), E(!1)), u && u(e)
            },
            onFocus: function(e)
            {
                y(e) && E(!0), l && l(e)
            },
            ref: S,
            variant: m
        }, v))
    })),
    Wo = Object(rr.a)(
    {
        root:
        {},
        underlineNone:
        {
            textDecoration: "none"
        },
        underlineHover:
        {
            textDecoration: "none",
            "&:hover":
            {
                textDecoration: "underline"
            }
        },
        underlineAlways:
        {
            textDecoration: "underline"
        },
        button:
        {
            position: "relative",
            WebkitTapHighlightColor: "transparent",
            backgroundColor: "transparent",
            outline: 0,
            border: 0,
            margin: 0,
            borderRadius: 0,
            padding: 0,
            cursor: "pointer",
            userSelect: "none",
            verticalAlign: "middle",
            "-moz-appearance": "none",
            "-webkit-appearance": "none",
            "&::-moz-focus-inner":
            {
                borderStyle: "none"
            },
            "&$focusVisible":
            {
                outline: "auto"
            }
        },
        focusVisible:
        {}
    },
    {
        name: "MuiLink"
    })(Vo);

function Go(e)
{
    return null != e && !(Array.isArray(e) && 0 === e.length)
}

function qo(e, t)
{
    return o.isValidElement(e) && -1 !== t.indexOf(e.type.muiName)
}
var $o = o.createContext();
var Ko = $o,
    Yo = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.classes,
            i = e.className,
            a = e.color,
            s = void 0 === a ? "primary" : a,
            c = e.component,
            u = void 0 === c ? "div" : c,
            l = e.disabled,
            f = void 0 !== l && l,
            h = e.error,
            d = void 0 !== h && h,
            p = e.fullWidth,
            m = void 0 !== p && p,
            v = e.hiddenLabel,
            g = void 0 !== v && v,
            y = e.margin,
            b = void 0 === y ? "none" : y,
            w = e.required,
            _ = void 0 !== w && w,
            x = e.size,
            E = e.variant,
            S = void 0 === E ? "standard" : E,
            M = Object(er.a)(e, ["children", "classes", "className", "color", "component", "disabled", "error", "fullWidth", "hiddenLabel", "margin", "required", "size", "variant"]),
            T = o.useState((function()
            {
                var e = !1;
                return n && o.Children.forEach(n, (function(t)
                {
                    if (qo(t, ["Input", "Select"]))
                    {
                        var n = qo(t, ["Select"]) ? t.props.input : t;
                        n && n.props.startAdornment && (e = !0)
                    }
                })), e
            })),
            k = T[0],
            A = T[1],
            C = o.useState((function()
            {
                var e = !1;
                return n && o.Children.forEach(n, (function(t)
                {
                    qo(t, ["Input", "Select"]) && function(e)
                    {
                        var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
                        return e && (Go(e.value) && "" !== e.value || t && Go(e.defaultValue) && "" !== e.defaultValue)
                    }(t.props, !0) && (e = !0)
                })), e
            })),
            O = C[0],
            P = C[1],
            R = o.useState(!1),
            I = R[0],
            N = R[1];
        f && I && N(!1);
        var L = o.useCallback((function()
            {
                P(!0)
            }), []),
            B = {
                adornedStart: k,
                setAdornedStart: A,
                color: s,
                disabled: f,
                error: d,
                filled: O,
                focused: I,
                fullWidth: m,
                hiddenLabel: g,
                margin: ("small" === x ? "dense" : void 0) || b,
                onBlur: function()
                {
                    N(!1)
                },
                onEmpty: o.useCallback((function()
                {
                    P(!1)
                }), []),
                onFilled: L,
                onFocus: function()
                {
                    N(!0)
                },
                registerEffect: void 0,
                required: _,
                variant: S
            };
        return o.createElement(Ko.Provider,
        {
            value: B
        }, o.createElement(u, Object(H.a)(
        {
            className: Object(nr.default)(r.root, i, "none" !== b && r["margin".concat(Object(hr.a)(b))], m && r.fullWidth),
            ref: t
        }, M), n))
    })),
    Xo = Object(rr.a)(
    {
        root:
        {
            display: "inline-flex",
            flexDirection: "column",
            position: "relative",
            minWidth: 0,
            padding: 0,
            margin: 0,
            border: 0,
            verticalAlign: "top"
        },
        marginNormal:
        {
            marginTop: 16,
            marginBottom: 8
        },
        marginDense:
        {
            marginTop: 8,
            marginBottom: 4
        },
        fullWidth:
        {
            width: "100%"
        }
    },
    {
        name: "MuiFormControl"
    })(Yo),
    Jo = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.row,
            a = void 0 !== i && i,
            s = Object(er.a)(e, ["classes", "className", "row"]);
        return o.createElement("div", Object(H.a)(
        {
            className: Object(nr.default)(n.root, r, a && n.row),
            ref: t
        }, s))
    })),
    Zo = Object(rr.a)(
    {
        root:
        {
            display: "flex",
            flexDirection: "column",
            flexWrap: "wrap"
        },
        row:
        {
            flexDirection: "row"
        }
    },
    {
        name: "MuiFormGroup"
    })(Jo);
void 0 === Number.EPSILON && (Number.EPSILON = Math.pow(2, -52)), void 0 === Number.isInteger && (Number.isInteger = function(e)
{
    return "number" == typeof e && isFinite(e) && Math.floor(e) === e
}), void 0 === Math.sign && (Math.sign = function(e)
{
    return e < 0 ? -1 : e > 0 ? 1 : +e
}), "name" in Function.prototype == !1 && Object.defineProperty(Function.prototype, "name",
{
    get: function()
    {
        return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]
    }
}), void 0 === Object.assign && (Object.assign = function(e)
{
    if (null == e) throw new TypeError("Cannot convert undefined or null to object");
    for (var t = Object(e), n = 1; n < arguments.length; n++)
    {
        var r = arguments[n];
        if (null != r)
            for (var i in r) Object.prototype.hasOwnProperty.call(r, i) && (t[i] = r[i])
    }
    return t
});

function Qo()
{}
Object.assign(Qo.prototype,
{
    addEventListener: function(e, t)
    {
        void 0 === this._listeners && (this._listeners = {});
        var n = this._listeners;
        void 0 === n[e] && (n[e] = []), -1 === n[e].indexOf(t) && n[e].push(t)
    },
    hasEventListener: function(e, t)
    {
        if (void 0 === this._listeners) return !1;
        var n = this._listeners;
        return void 0 !== n[e] && -1 !== n[e].indexOf(t)
    },
    removeEventListener: function(e, t)
    {
        if (void 0 !== this._listeners)
        {
            var n = this._listeners[e];
            if (void 0 !== n)
            {
                var r = n.indexOf(t); - 1 !== r && n.splice(r, 1)
            }
        }
    },
    dispatchEvent: function(e)
    {
        if (void 0 !== this._listeners)
        {
            var t = this._listeners[e.type];
            if (void 0 !== t)
            {
                e.target = this;
                for (var n = t.slice(0), r = 0, i = n.length; r < i; r++) n[r].call(this, e)
            }
        }
    }
});
for (var ea = [], ta = 0; ta < 256; ta++) ea[ta] = (ta < 16 ? "0" : "") + ta.toString(16);
var na = {
    DEG2RAD: Math.PI / 180,
    RAD2DEG: 180 / Math.PI,
    generateUUID: function()
    {
        var e = 4294967295 * Math.random() | 0,
            t = 4294967295 * Math.random() | 0,
            n = 4294967295 * Math.random() | 0,
            r = 4294967295 * Math.random() | 0;
        return (ea[255 & e] + ea[e >> 8 & 255] + ea[e >> 16 & 255] + ea[e >> 24 & 255] + "-" + ea[255 & t] + ea[t >> 8 & 255] + "-" + ea[t >> 16 & 15 | 64] + ea[t >> 24 & 255] + "-" + ea[63 & n | 128] + ea[n >> 8 & 255] + "-" + ea[n >> 16 & 255] + ea[n >> 24 & 255] + ea[255 & r] + ea[r >> 8 & 255] + ea[r >> 16 & 255] + ea[r >> 24 & 255]).toUpperCase()
    },
    clamp: function(e, t, n)
    {
        return Math.max(t, Math.min(n, e))
    },
    euclideanModulo: function(e, t)
    {
        return (e % t + t) % t
    },
    mapLinear: function(e, t, n, r, i)
    {
        return r + (e - t) * (i - r) / (n - t)
    },
    lerp: function(e, t, n)
    {
        return (1 - n) * e + n * t
    },
    smoothstep: function(e, t, n)
    {
        return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * (3 - 2 * e)
    },
    smootherstep: function(e, t, n)
    {
        return e <= t ? 0 : e >= n ? 1 : (e = (e - t) / (n - t)) * e * e * (e * (6 * e - 15) + 10)
    },
    randInt: function(e, t)
    {
        return e + Math.floor(Math.random() * (t - e + 1))
    },
    randFloat: function(e, t)
    {
        return e + Math.random() * (t - e)
    },
    randFloatSpread: function(e)
    {
        return e * (.5 - Math.random())
    },
    degToRad: function(e)
    {
        return e * na.DEG2RAD
    },
    radToDeg: function(e)
    {
        return e * na.RAD2DEG
    },
    isPowerOfTwo: function(e)
    {
        return 0 == (e & e - 1) && 0 !== e
    },
    ceilPowerOfTwo: function(e)
    {
        return Math.pow(2, Math.ceil(Math.log(e) / Math.LN2))
    },
    floorPowerOfTwo: function(e)
    {
        return Math.pow(2, Math.floor(Math.log(e) / Math.LN2))
    }
};

function ra(e, t)
{
    this.x = e || 0, this.y = t || 0
}

function ia(e, t, n, r)
{
    this._x = e || 0, this._y = t || 0, this._z = n || 0, this._w = void 0 !== r ? r : 1
}
Object.defineProperties(ra.prototype,
{
    width:
    {
        get: function()
        {
            return this.x
        },
        set: function(e)
        {
            this.x = e
        }
    },
    height:
    {
        get: function()
        {
            return this.y
        },
        set: function(e)
        {
            this.y = e
        }
    }
}), Object.assign(ra.prototype,
{
    isVector2: !0,
    set: function(e, t)
    {
        return this.x = e, this.y = t, this
    },
    setScalar: function(e)
    {
        return this.x = e, this.y = e, this
    },
    setX: function(e)
    {
        return this.x = e, this
    },
    setY: function(e)
    {
        return this.y = e, this
    },
    setComponent: function(e, t)
    {
        switch (e)
        {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
        }
        return this
    },
    getComponent: function(e)
    {
        switch (e)
        {
            case 0:
                return this.x;
            case 1:
                return this.y;
            default:
                throw new Error("index is out of range: " + e)
        }
    },
    clone: function()
    {
        return new this.constructor(this.x, this.y)
    },
    copy: function(e)
    {
        return this.x = e.x, this.y = e.y, this
    },
    add: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this)
    },
    addScalar: function(e)
    {
        return this.x += e, this.y += e, this
    },
    addVectors: function(e, t)
    {
        return this.x = e.x + t.x, this.y = e.y + t.y, this
    },
    addScaledVector: function(e, t)
    {
        return this.x += e.x * t, this.y += e.y * t, this
    },
    sub: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this)
    },
    subScalar: function(e)
    {
        return this.x -= e, this.y -= e, this
    },
    subVectors: function(e, t)
    {
        return this.x = e.x - t.x, this.y = e.y - t.y, this
    },
    multiply: function(e)
    {
        return this.x *= e.x, this.y *= e.y, this
    },
    multiplyScalar: function(e)
    {
        return this.x *= e, this.y *= e, this
    },
    divide: function(e)
    {
        return this.x /= e.x, this.y /= e.y, this
    },
    divideScalar: function(e)
    {
        return this.multiplyScalar(1 / e)
    },
    applyMatrix3: function(e)
    {
        var t = this.x,
            n = this.y,
            r = e.elements;
        return this.x = r[0] * t + r[3] * n + r[6], this.y = r[1] * t + r[4] * n + r[7], this
    },
    min: function(e)
    {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this
    },
    max: function(e)
    {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this
    },
    clamp: function(e, t)
    {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this
    },
    clampScalar: function(e, t)
    {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this
    },
    clampLength: function(e, t)
    {
        var n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
    },
    floor: function()
    {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this
    },
    ceil: function()
    {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this
    },
    round: function()
    {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this
    },
    roundToZero: function()
    {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this
    },
    negate: function()
    {
        return this.x = -this.x, this.y = -this.y, this
    },
    dot: function(e)
    {
        return this.x * e.x + this.y * e.y
    },
    cross: function(e)
    {
        return this.x * e.y - this.y * e.x
    },
    lengthSq: function()
    {
        return this.x * this.x + this.y * this.y
    },
    length: function()
    {
        return Math.sqrt(this.x * this.x + this.y * this.y)
    },
    manhattanLength: function()
    {
        return Math.abs(this.x) + Math.abs(this.y)
    },
    normalize: function()
    {
        return this.divideScalar(this.length() || 1)
    },
    angle: function()
    {
        var e = Math.atan2(this.y, this.x);
        return e < 0 && (e += 2 * Math.PI), e
    },
    distanceTo: function(e)
    {
        return Math.sqrt(this.distanceToSquared(e))
    },
    distanceToSquared: function(e)
    {
        var t = this.x - e.x,
            n = this.y - e.y;
        return t * t + n * n
    },
    manhattanDistanceTo: function(e)
    {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y)
    },
    setLength: function(e)
    {
        return this.normalize().multiplyScalar(e)
    },
    lerp: function(e, t)
    {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this
    },
    lerpVectors: function(e, t, n)
    {
        return this.subVectors(t, e).multiplyScalar(n).add(e)
    },
    equals: function(e)
    {
        return e.x === this.x && e.y === this.y
    },
    fromArray: function(e, t)
    {
        return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this
    },
    toArray: function(e, t)
    {
        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e
    },
    fromBufferAttribute: function(e, t, n)
    {
        return void 0 !== n && console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this
    },
    rotateAround: function(e, t)
    {
        var n = Math.cos(t),
            r = Math.sin(t),
            i = this.x - e.x,
            o = this.y - e.y;
        return this.x = i * n - o * r + e.x, this.y = i * r + o * n + e.y, this
    }
}), Object.assign(ia,
{
    slerp: function(e, t, n, r)
    {
        return n.copy(e).slerp(t, r)
    },
    slerpFlat: function(e, t, n, r, i, o, a)
    {
        var s = n[r + 0],
            c = n[r + 1],
            u = n[r + 2],
            l = n[r + 3],
            f = i[o + 0],
            h = i[o + 1],
            d = i[o + 2],
            p = i[o + 3];
        if (l !== p || s !== f || c !== h || u !== d)
        {
            var m = 1 - a,
                v = s * f + c * h + u * d + l * p,
                g = v >= 0 ? 1 : -1,
                y = 1 - v * v;
            if (y > Number.EPSILON)
            {
                var b = Math.sqrt(y),
                    w = Math.atan2(b, v * g);
                m = Math.sin(m * w) / b, a = Math.sin(a * w) / b
            }
            var _ = a * g;
            if (s = s * m + f * _, c = c * m + h * _, u = u * m + d * _, l = l * m + p * _, m === 1 - a)
            {
                var x = 1 / Math.sqrt(s * s + c * c + u * u + l * l);
                s *= x, c *= x, u *= x, l *= x
            }
        }
        e[t] = s, e[t + 1] = c, e[t + 2] = u, e[t + 3] = l
    }
}), Object.defineProperties(ia.prototype,
{
    x:
    {
        get: function()
        {
            return this._x
        },
        set: function(e)
        {
            this._x = e, this._onChangeCallback()
        }
    },
    y:
    {
        get: function()
        {
            return this._y
        },
        set: function(e)
        {
            this._y = e, this._onChangeCallback()
        }
    },
    z:
    {
        get: function()
        {
            return this._z
        },
        set: function(e)
        {
            this._z = e, this._onChangeCallback()
        }
    },
    w:
    {
        get: function()
        {
            return this._w
        },
        set: function(e)
        {
            this._w = e, this._onChangeCallback()
        }
    }
}), Object.assign(ia.prototype,
{
    isQuaternion: !0,
    set: function(e, t, n, r)
    {
        return this._x = e, this._y = t, this._z = n, this._w = r, this._onChangeCallback(), this
    },
    clone: function()
    {
        return new this.constructor(this._x, this._y, this._z, this._w)
    },
    copy: function(e)
    {
        return this._x = e.x, this._y = e.y, this._z = e.z, this._w = e.w, this._onChangeCallback(), this
    },
    setFromEuler: function(e, t)
    {
        if (!e || !e.isEuler) throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");
        var n = e._x,
            r = e._y,
            i = e._z,
            o = e.order,
            a = Math.cos,
            s = Math.sin,
            c = a(n / 2),
            u = a(r / 2),
            l = a(i / 2),
            f = s(n / 2),
            h = s(r / 2),
            d = s(i / 2);
        return "XYZ" === o ? (this._x = f * u * l + c * h * d, this._y = c * h * l - f * u * d, this._z = c * u * d + f * h * l, this._w = c * u * l - f * h * d) : "YXZ" === o ? (this._x = f * u * l + c * h * d, this._y = c * h * l - f * u * d, this._z = c * u * d - f * h * l, this._w = c * u * l + f * h * d) : "ZXY" === o ? (this._x = f * u * l - c * h * d, this._y = c * h * l + f * u * d, this._z = c * u * d + f * h * l, this._w = c * u * l - f * h * d) : "ZYX" === o ? (this._x = f * u * l - c * h * d, this._y = c * h * l + f * u * d, this._z = c * u * d - f * h * l, this._w = c * u * l + f * h * d) : "YZX" === o ? (this._x = f * u * l + c * h * d, this._y = c * h * l + f * u * d, this._z = c * u * d - f * h * l, this._w = c * u * l - f * h * d) : "XZY" === o && (this._x = f * u * l - c * h * d, this._y = c * h * l - f * u * d, this._z = c * u * d + f * h * l, this._w = c * u * l + f * h * d), !1 !== t && this._onChangeCallback(), this
    },
    setFromAxisAngle: function(e, t)
    {
        var n = t / 2,
            r = Math.sin(n);
        return this._x = e.x * r, this._y = e.y * r, this._z = e.z * r, this._w = Math.cos(n), this._onChangeCallback(), this
    },
    setFromRotationMatrix: function(e)
    {
        var t, n = e.elements,
            r = n[0],
            i = n[4],
            o = n[8],
            a = n[1],
            s = n[5],
            c = n[9],
            u = n[2],
            l = n[6],
            f = n[10],
            h = r + s + f;
        return h > 0 ? (t = .5 / Math.sqrt(h + 1), this._w = .25 / t, this._x = (l - c) * t, this._y = (o - u) * t, this._z = (a - i) * t) : r > s && r > f ? (t = 2 * Math.sqrt(1 + r - s - f), this._w = (l - c) / t, this._x = .25 * t, this._y = (i + a) / t, this._z = (o + u) / t) : s > f ? (t = 2 * Math.sqrt(1 + s - r - f), this._w = (o - u) / t, this._x = (i + a) / t, this._y = .25 * t, this._z = (c + l) / t) : (t = 2 * Math.sqrt(1 + f - r - s), this._w = (a - i) / t, this._x = (o + u) / t, this._y = (c + l) / t, this._z = .25 * t), this._onChangeCallback(), this
    },
    setFromUnitVectors: function(e, t)
    {
        var n = e.dot(t) + 1;
        return n < 1e-6 ? (n = 0, Math.abs(e.x) > Math.abs(e.z) ? (this._x = -e.y, this._y = e.x, this._z = 0, this._w = n) : (this._x = 0, this._y = -e.z, this._z = e.y, this._w = n)) : (this._x = e.y * t.z - e.z * t.y, this._y = e.z * t.x - e.x * t.z, this._z = e.x * t.y - e.y * t.x, this._w = n), this.normalize()
    },
    angleTo: function(e)
    {
        return 2 * Math.acos(Math.abs(na.clamp(this.dot(e), -1, 1)))
    },
    rotateTowards: function(e, t)
    {
        var n = this.angleTo(e);
        if (0 === n) return this;
        var r = Math.min(1, t / n);
        return this.slerp(e, r), this
    },
    inverse: function()
    {
        return this.conjugate()
    },
    conjugate: function()
    {
        return this._x *= -1, this._y *= -1, this._z *= -1, this._onChangeCallback(), this
    },
    dot: function(e)
    {
        return this._x * e._x + this._y * e._y + this._z * e._z + this._w * e._w
    },
    lengthSq: function()
    {
        return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w
    },
    length: function()
    {
        return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w)
    },
    normalize: function()
    {
        var e = this.length();
        return 0 === e ? (this._x = 0, this._y = 0, this._z = 0, this._w = 1) : (e = 1 / e, this._x = this._x * e, this._y = this._y * e, this._z = this._z * e, this._w = this._w * e), this._onChangeCallback(), this
    },
    multiply: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."), this.multiplyQuaternions(e, t)) : this.multiplyQuaternions(this, e)
    },
    premultiply: function(e)
    {
        return this.multiplyQuaternions(e, this)
    },
    multiplyQuaternions: function(e, t)
    {
        var n = e._x,
            r = e._y,
            i = e._z,
            o = e._w,
            a = t._x,
            s = t._y,
            c = t._z,
            u = t._w;
        return this._x = n * u + o * a + r * c - i * s, this._y = r * u + o * s + i * a - n * c, this._z = i * u + o * c + n * s - r * a, this._w = o * u - n * a - r * s - i * c, this._onChangeCallback(), this
    },
    slerp: function(e, t)
    {
        if (0 === t) return this;
        if (1 === t) return this.copy(e);
        var n = this._x,
            r = this._y,
            i = this._z,
            o = this._w,
            a = o * e._w + n * e._x + r * e._y + i * e._z;
        if (a < 0 ? (this._w = -e._w, this._x = -e._x, this._y = -e._y, this._z = -e._z, a = -a) : this.copy(e), a >= 1) return this._w = o, this._x = n, this._y = r, this._z = i, this;
        var s = 1 - a * a;
        if (s <= Number.EPSILON)
        {
            var c = 1 - t;
            return this._w = c * o + t * this._w, this._x = c * n + t * this._x, this._y = c * r + t * this._y, this._z = c * i + t * this._z, this.normalize(), this._onChangeCallback(), this
        }
        var u = Math.sqrt(s),
            l = Math.atan2(u, a),
            f = Math.sin((1 - t) * l) / u,
            h = Math.sin(t * l) / u;
        return this._w = o * f + this._w * h, this._x = n * f + this._x * h, this._y = r * f + this._y * h, this._z = i * f + this._z * h, this._onChangeCallback(), this
    },
    equals: function(e)
    {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._w === this._w
    },
    fromArray: function(e, t)
    {
        return void 0 === t && (t = 0), this._x = e[t], this._y = e[t + 1], this._z = e[t + 2], this._w = e[t + 3], this._onChangeCallback(), this
    },
    toArray: function(e, t)
    {
        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._w, e
    },
    _onChange: function(e)
    {
        return this._onChangeCallback = e, this
    },
    _onChangeCallback: function() {}
});
var oa = new sa,
    aa = new ia;

function sa(e, t, n)
{
    this.x = e || 0, this.y = t || 0, this.z = n || 0
}
Object.assign(sa.prototype,
{
    isVector3: !0,
    set: function(e, t, n)
    {
        return this.x = e, this.y = t, this.z = n, this
    },
    setScalar: function(e)
    {
        return this.x = e, this.y = e, this.z = e, this
    },
    setX: function(e)
    {
        return this.x = e, this
    },
    setY: function(e)
    {
        return this.y = e, this
    },
    setZ: function(e)
    {
        return this.z = e, this
    },
    setComponent: function(e, t)
    {
        switch (e)
        {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
        }
        return this
    },
    getComponent: function(e)
    {
        switch (e)
        {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            default:
                throw new Error("index is out of range: " + e)
        }
    },
    clone: function()
    {
        return new this.constructor(this.x, this.y, this.z)
    },
    copy: function(e)
    {
        return this.x = e.x, this.y = e.y, this.z = e.z, this
    },
    add: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this)
    },
    addScalar: function(e)
    {
        return this.x += e, this.y += e, this.z += e, this
    },
    addVectors: function(e, t)
    {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this
    },
    addScaledVector: function(e, t)
    {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this
    },
    sub: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this)
    },
    subScalar: function(e)
    {
        return this.x -= e, this.y -= e, this.z -= e, this
    },
    subVectors: function(e, t)
    {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this
    },
    multiply: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."), this.multiplyVectors(e, t)) : (this.x *= e.x, this.y *= e.y, this.z *= e.z, this)
    },
    multiplyScalar: function(e)
    {
        return this.x *= e, this.y *= e, this.z *= e, this
    },
    multiplyVectors: function(e, t)
    {
        return this.x = e.x * t.x, this.y = e.y * t.y, this.z = e.z * t.z, this
    },
    applyEuler: function(e)
    {
        return e && e.isEuler || console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."), this.applyQuaternion(aa.setFromEuler(e))
    },
    applyAxisAngle: function(e, t)
    {
        return this.applyQuaternion(aa.setFromAxisAngle(e, t))
    },
    applyMatrix3: function(e)
    {
        var t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
        return this.x = i[0] * t + i[3] * n + i[6] * r, this.y = i[1] * t + i[4] * n + i[7] * r, this.z = i[2] * t + i[5] * n + i[8] * r, this
    },
    applyNormalMatrix: function(e)
    {
        return this.applyMatrix3(e).normalize()
    },
    applyMatrix4: function(e)
    {
        var t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements,
            o = 1 / (i[3] * t + i[7] * n + i[11] * r + i[15]);
        return this.x = (i[0] * t + i[4] * n + i[8] * r + i[12]) * o, this.y = (i[1] * t + i[5] * n + i[9] * r + i[13]) * o, this.z = (i[2] * t + i[6] * n + i[10] * r + i[14]) * o, this
    },
    applyQuaternion: function(e)
    {
        var t = this.x,
            n = this.y,
            r = this.z,
            i = e.x,
            o = e.y,
            a = e.z,
            s = e.w,
            c = s * t + o * r - a * n,
            u = s * n + a * t - i * r,
            l = s * r + i * n - o * t,
            f = -i * t - o * n - a * r;
        return this.x = c * s + f * -i + u * -a - l * -o, this.y = u * s + f * -o + l * -i - c * -a, this.z = l * s + f * -a + c * -o - u * -i, this
    },
    project: function(e)
    {
        return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)
    },
    unproject: function(e)
    {
        return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)
    },
    transformDirection: function(e)
    {
        var t = this.x,
            n = this.y,
            r = this.z,
            i = e.elements;
        return this.x = i[0] * t + i[4] * n + i[8] * r, this.y = i[1] * t + i[5] * n + i[9] * r, this.z = i[2] * t + i[6] * n + i[10] * r, this.normalize()
    },
    divide: function(e)
    {
        return this.x /= e.x, this.y /= e.y, this.z /= e.z, this
    },
    divideScalar: function(e)
    {
        return this.multiplyScalar(1 / e)
    },
    min: function(e)
    {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this
    },
    max: function(e)
    {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this
    },
    clamp: function(e, t)
    {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this
    },
    clampScalar: function(e, t)
    {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this
    },
    clampLength: function(e, t)
    {
        var n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
    },
    floor: function()
    {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this
    },
    ceil: function()
    {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this
    },
    round: function()
    {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this
    },
    roundToZero: function()
    {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this
    },
    negate: function()
    {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this
    },
    dot: function(e)
    {
        return this.x * e.x + this.y * e.y + this.z * e.z
    },
    lengthSq: function()
    {
        return this.x * this.x + this.y * this.y + this.z * this.z
    },
    length: function()
    {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)
    },
    manhattanLength: function()
    {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)
    },
    normalize: function()
    {
        return this.divideScalar(this.length() || 1)
    },
    setLength: function(e)
    {
        return this.normalize().multiplyScalar(e)
    },
    lerp: function(e, t)
    {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this
    },
    lerpVectors: function(e, t, n)
    {
        return this.subVectors(t, e).multiplyScalar(n).add(e)
    },
    cross: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."), this.crossVectors(e, t)) : this.crossVectors(this, e)
    },
    crossVectors: function(e, t)
    {
        var n = e.x,
            r = e.y,
            i = e.z,
            o = t.x,
            a = t.y,
            s = t.z;
        return this.x = r * s - i * a, this.y = i * o - n * s, this.z = n * a - r * o, this
    },
    projectOnVector: function(e)
    {
        var t = e.dot(this) / e.lengthSq();
        return this.copy(e).multiplyScalar(t)
    },
    projectOnPlane: function(e)
    {
        return oa.copy(this).projectOnVector(e), this.sub(oa)
    },
    reflect: function(e)
    {
        return this.sub(oa.copy(e).multiplyScalar(2 * this.dot(e)))
    },
    angleTo: function(e)
    {
        var t = Math.sqrt(this.lengthSq() * e.lengthSq());
        0 === t && console.error("THREE.Vector3: angleTo() can't handle zero length vectors.");
        var n = this.dot(e) / t;
        return Math.acos(na.clamp(n, -1, 1))
    },
    distanceTo: function(e)
    {
        return Math.sqrt(this.distanceToSquared(e))
    },
    distanceToSquared: function(e)
    {
        var t = this.x - e.x,
            n = this.y - e.y,
            r = this.z - e.z;
        return t * t + n * n + r * r
    },
    manhattanDistanceTo: function(e)
    {
        return Math.abs(this.x - e.x) + Math.abs(this.y - e.y) + Math.abs(this.z - e.z)
    },
    setFromSpherical: function(e)
    {
        return this.setFromSphericalCoords(e.radius, e.phi, e.theta)
    },
    setFromSphericalCoords: function(e, t, n)
    {
        var r = Math.sin(t) * e;
        return this.x = r * Math.sin(n), this.y = Math.cos(t) * e, this.z = r * Math.cos(n), this
    },
    setFromCylindrical: function(e)
    {
        return this.setFromCylindricalCoords(e.radius, e.theta, e.y)
    },
    setFromCylindricalCoords: function(e, t, n)
    {
        return this.x = e * Math.sin(t), this.y = n, this.z = e * Math.cos(t), this
    },
    setFromMatrixPosition: function(e)
    {
        var t = e.elements;
        return this.x = t[12], this.y = t[13], this.z = t[14], this
    },
    setFromMatrixScale: function(e)
    {
        var t = this.setFromMatrixColumn(e, 0).length(),
            n = this.setFromMatrixColumn(e, 1).length(),
            r = this.setFromMatrixColumn(e, 2).length();
        return this.x = t, this.y = n, this.z = r, this
    },
    setFromMatrixColumn: function(e, t)
    {
        return this.fromArray(e.elements, 4 * t)
    },
    equals: function(e)
    {
        return e.x === this.x && e.y === this.y && e.z === this.z
    },
    fromArray: function(e, t)
    {
        return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this
    },
    toArray: function(e, t)
    {
        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e
    },
    fromBufferAttribute: function(e, t, n)
    {
        return void 0 !== n && console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this
    }
});
var ca, ua = new sa;

function la()
{
    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")
}
Object.assign(la.prototype,
{
    isMatrix3: !0,
    set: function(e, t, n, r, i, o, a, s, c)
    {
        var u = this.elements;
        return u[0] = e, u[1] = r, u[2] = a, u[3] = t, u[4] = i, u[5] = s, u[6] = n, u[7] = o, u[8] = c, this
    },
    identity: function()
    {
        return this.set(1, 0, 0, 0, 1, 0, 0, 0, 1), this
    },
    clone: function()
    {
        return (new this.constructor).fromArray(this.elements)
    },
    copy: function(e)
    {
        var t = this.elements,
            n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], this
    },
    setFromMatrix4: function(e)
    {
        var t = e.elements;
        return this.set(t[0], t[4], t[8], t[1], t[5], t[9], t[2], t[6], t[10]), this
    },
    applyToBufferAttribute: function(e)
    {
        for (var t = 0, n = e.count; t < n; t++) ua.x = e.getX(t), ua.y = e.getY(t), ua.z = e.getZ(t), ua.applyMatrix3(this), e.setXYZ(t, ua.x, ua.y, ua.z);
        return e
    },
    multiply: function(e)
    {
        return this.multiplyMatrices(this, e)
    },
    premultiply: function(e)
    {
        return this.multiplyMatrices(e, this)
    },
    multiplyMatrices: function(e, t)
    {
        var n = e.elements,
            r = t.elements,
            i = this.elements,
            o = n[0],
            a = n[3],
            s = n[6],
            c = n[1],
            u = n[4],
            l = n[7],
            f = n[2],
            h = n[5],
            d = n[8],
            p = r[0],
            m = r[3],
            v = r[6],
            g = r[1],
            y = r[4],
            b = r[7],
            w = r[2],
            _ = r[5],
            x = r[8];
        return i[0] = o * p + a * g + s * w, i[3] = o * m + a * y + s * _, i[6] = o * v + a * b + s * x, i[1] = c * p + u * g + l * w, i[4] = c * m + u * y + l * _, i[7] = c * v + u * b + l * x, i[2] = f * p + h * g + d * w, i[5] = f * m + h * y + d * _, i[8] = f * v + h * b + d * x, this
    },
    multiplyScalar: function(e)
    {
        var t = this.elements;
        return t[0] *= e, t[3] *= e, t[6] *= e, t[1] *= e, t[4] *= e, t[7] *= e, t[2] *= e, t[5] *= e, t[8] *= e, this
    },
    determinant: function()
    {
        var e = this.elements,
            t = e[0],
            n = e[1],
            r = e[2],
            i = e[3],
            o = e[4],
            a = e[5],
            s = e[6],
            c = e[7],
            u = e[8];
        return t * o * u - t * a * c - n * i * u + n * a * s + r * i * c - r * o * s
    },
    getInverse: function(e, t)
    {
        e && e.isMatrix4 && console.error("THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.");
        var n = e.elements,
            r = this.elements,
            i = n[0],
            o = n[1],
            a = n[2],
            s = n[3],
            c = n[4],
            u = n[5],
            l = n[6],
            f = n[7],
            h = n[8],
            d = h * c - u * f,
            p = u * l - h * s,
            m = f * s - c * l,
            v = i * d + o * p + a * m;
        if (0 === v)
        {
            var g = "THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0";
            if (!0 === t) throw new Error(g);
            return console.warn(g), this.identity()
        }
        var y = 1 / v;
        return r[0] = d * y, r[1] = (a * f - h * o) * y, r[2] = (u * o - a * c) * y, r[3] = p * y, r[4] = (h * i - a * l) * y, r[5] = (a * s - u * i) * y, r[6] = m * y, r[7] = (o * l - f * i) * y, r[8] = (c * i - o * s) * y, this
    },
    transpose: function()
    {
        var e, t = this.elements;
        return e = t[1], t[1] = t[3], t[3] = e, e = t[2], t[2] = t[6], t[6] = e, e = t[5], t[5] = t[7], t[7] = e, this
    },
    getNormalMatrix: function(e)
    {
        return this.setFromMatrix4(e).getInverse(this).transpose()
    },
    transposeIntoArray: function(e)
    {
        var t = this.elements;
        return e[0] = t[0], e[1] = t[3], e[2] = t[6], e[3] = t[1], e[4] = t[4], e[5] = t[7], e[6] = t[2], e[7] = t[5], e[8] = t[8], this
    },
    setUvTransform: function(e, t, n, r, i, o, a)
    {
        var s = Math.cos(i),
            c = Math.sin(i);
        this.set(n * s, n * c, -n * (s * o + c * a) + o + e, -r * c, r * s, -r * (-c * o + s * a) + a + t, 0, 0, 1)
    },
    scale: function(e, t)
    {
        var n = this.elements;
        return n[0] *= e, n[3] *= e, n[6] *= e, n[1] *= t, n[4] *= t, n[7] *= t, this
    },
    rotate: function(e)
    {
        var t = Math.cos(e),
            n = Math.sin(e),
            r = this.elements,
            i = r[0],
            o = r[3],
            a = r[6],
            s = r[1],
            c = r[4],
            u = r[7];
        return r[0] = t * i + n * s, r[3] = t * o + n * c, r[6] = t * a + n * u, r[1] = -n * i + t * s, r[4] = -n * o + t * c, r[7] = -n * a + t * u, this
    },
    translate: function(e, t)
    {
        var n = this.elements;
        return n[0] += e * n[2], n[3] += e * n[5], n[6] += e * n[8], n[1] += t * n[2], n[4] += t * n[5], n[7] += t * n[8], this
    },
    equals: function(e)
    {
        for (var t = this.elements, n = e.elements, r = 0; r < 9; r++)
            if (t[r] !== n[r]) return !1;
        return !0
    },
    fromArray: function(e, t)
    {
        void 0 === t && (t = 0);
        for (var n = 0; n < 9; n++) this.elements[n] = e[n + t];
        return this
    },
    toArray: function(e, t)
    {
        void 0 === e && (e = []), void 0 === t && (t = 0);
        var n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e
    }
});
var fa = {
        getDataURL: function(e)
        {
            var t;
            if ("undefined" == typeof HTMLCanvasElement) return e.src;
            if (e instanceof HTMLCanvasElement) t = e;
            else
            {
                void 0 === ca && (ca = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")), ca.width = e.width, ca.height = e.height;
                var n = ca.getContext("2d");
                e instanceof ImageData ? n.putImageData(e, 0, 0) : n.drawImage(e, 0, 0, e.width, e.height), t = ca
            }
            return t.width > 2048 || t.height > 2048 ? t.toDataURL("image/jpeg", .6) : t.toDataURL("image/png")
        }
    },
    ha = 0;

function da(e, t, n, r, i, o, a, s, c, u)
{
    Object.defineProperty(this, "id",
    {
        value: ha++
    }), this.uuid = na.generateUUID(), this.name = "", this.image = void 0 !== e ? e : da.DEFAULT_IMAGE, this.mipmaps = [], this.mapping = void 0 !== t ? t : da.DEFAULT_MAPPING, this.wrapS = void 0 !== n ? n : 1001, this.wrapT = void 0 !== r ? r : 1001, this.magFilter = void 0 !== i ? i : 1006, this.minFilter = void 0 !== o ? o : 1008, this.anisotropy = void 0 !== c ? c : 1, this.format = void 0 !== a ? a : 1023, this.internalFormat = null, this.type = void 0 !== s ? s : 1009, this.offset = new ra(0, 0), this.repeat = new ra(1, 1), this.center = new ra(0, 0), this.rotation = 0, this.matrixAutoUpdate = !0, this.matrix = new la, this.generateMipmaps = !0, this.premultiplyAlpha = !1, this.flipY = !0, this.unpackAlignment = 4, this.encoding = void 0 !== u ? u : 3e3, this.version = 0, this.onUpdate = null
}

function pa(e, t, n, r)
{
    this.x = e || 0, this.y = t || 0, this.z = n || 0, this.w = void 0 !== r ? r : 1
}

function ma(e, t, n)
{
    this.width = e, this.height = t, this.scissor = new pa(0, 0, e, t), this.scissorTest = !1, this.viewport = new pa(0, 0, e, t), n = n ||
    {}, this.texture = new da(void 0, void 0, n.wrapS, n.wrapT, n.magFilter, n.minFilter, n.format, n.type, n.anisotropy, n.encoding), this.texture.image = {}, this.texture.image.width = e, this.texture.image.height = t, this.texture.generateMipmaps = void 0 !== n.generateMipmaps && n.generateMipmaps, this.texture.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006, this.depthBuffer = void 0 === n.depthBuffer || n.depthBuffer, this.stencilBuffer = void 0 === n.stencilBuffer || n.stencilBuffer, this.depthTexture = void 0 !== n.depthTexture ? n.depthTexture : null
}

function va(e, t, n)
{
    ma.call(this, e, t, n), this.samples = 4
}
da.DEFAULT_IMAGE = void 0, da.DEFAULT_MAPPING = 300, da.prototype = Object.assign(Object.create(Qo.prototype),
{
    constructor: da,
    isTexture: !0,
    updateMatrix: function()
    {
        this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y)
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.name = e.name, this.image = e.image, this.mipmaps = e.mipmaps.slice(0), this.mapping = e.mapping, this.wrapS = e.wrapS, this.wrapT = e.wrapT, this.magFilter = e.magFilter, this.minFilter = e.minFilter, this.anisotropy = e.anisotropy, this.format = e.format, this.internalFormat = e.internalFormat, this.type = e.type, this.offset.copy(e.offset), this.repeat.copy(e.repeat), this.center.copy(e.center), this.rotation = e.rotation, this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrix.copy(e.matrix), this.generateMipmaps = e.generateMipmaps, this.premultiplyAlpha = e.premultiplyAlpha, this.flipY = e.flipY, this.unpackAlignment = e.unpackAlignment, this.encoding = e.encoding, this
    },
    toJSON: function(e)
    {
        var t = void 0 === e || "string" == typeof e;
        if (!t && void 0 !== e.textures[this.uuid]) return e.textures[this.uuid];
        var n = {
            metadata:
            {
                version: 4.5,
                type: "Texture",
                generator: "Texture.toJSON"
            },
            uuid: this.uuid,
            name: this.name,
            mapping: this.mapping,
            repeat: [this.repeat.x, this.repeat.y],
            offset: [this.offset.x, this.offset.y],
            center: [this.center.x, this.center.y],
            rotation: this.rotation,
            wrap: [this.wrapS, this.wrapT],
            format: this.format,
            type: this.type,
            encoding: this.encoding,
            minFilter: this.minFilter,
            magFilter: this.magFilter,
            anisotropy: this.anisotropy,
            flipY: this.flipY,
            premultiplyAlpha: this.premultiplyAlpha,
            unpackAlignment: this.unpackAlignment
        };
        if (void 0 !== this.image)
        {
            var r = this.image;
            if (void 0 === r.uuid && (r.uuid = na.generateUUID()), !t && void 0 === e.images[r.uuid])
            {
                var i;
                if (Array.isArray(r))
                {
                    i = [];
                    for (var o = 0, a = r.length; o < a; o++) i.push(fa.getDataURL(r[o]))
                }
                else i = fa.getDataURL(r);
                e.images[r.uuid] = {
                    uuid: r.uuid,
                    url: i
                }
            }
            n.image = r.uuid
        }
        return t || (e.textures[this.uuid] = n), n
    },
    dispose: function()
    {
        this.dispatchEvent(
        {
            type: "dispose"
        })
    },
    transformUv: function(e)
    {
        if (300 !== this.mapping) return e;
        if (e.applyMatrix3(this.matrix), e.x < 0 || e.x > 1) switch (this.wrapS)
        {
            case 1e3:
                e.x = e.x - Math.floor(e.x);
                break;
            case 1001:
                e.x = e.x < 0 ? 0 : 1;
                break;
            case 1002:
                1 === Math.abs(Math.floor(e.x) % 2) ? e.x = Math.ceil(e.x) - e.x : e.x = e.x - Math.floor(e.x)
        }
        if (e.y < 0 || e.y > 1) switch (this.wrapT)
        {
            case 1e3:
                e.y = e.y - Math.floor(e.y);
                break;
            case 1001:
                e.y = e.y < 0 ? 0 : 1;
                break;
            case 1002:
                1 === Math.abs(Math.floor(e.y) % 2) ? e.y = Math.ceil(e.y) - e.y : e.y = e.y - Math.floor(e.y)
        }
        return this.flipY && (e.y = 1 - e.y), e
    }
}), Object.defineProperty(da.prototype, "needsUpdate",
{
    set: function(e)
    {
        !0 === e && this.version++
    }
}), Object.defineProperties(pa.prototype,
{
    width:
    {
        get: function()
        {
            return this.z
        },
        set: function(e)
        {
            this.z = e
        }
    },
    height:
    {
        get: function()
        {
            return this.w
        },
        set: function(e)
        {
            this.w = e
        }
    }
}), Object.assign(pa.prototype,
{
    isVector4: !0,
    set: function(e, t, n, r)
    {
        return this.x = e, this.y = t, this.z = n, this.w = r, this
    },
    setScalar: function(e)
    {
        return this.x = e, this.y = e, this.z = e, this.w = e, this
    },
    setX: function(e)
    {
        return this.x = e, this
    },
    setY: function(e)
    {
        return this.y = e, this
    },
    setZ: function(e)
    {
        return this.z = e, this
    },
    setW: function(e)
    {
        return this.w = e, this
    },
    setComponent: function(e, t)
    {
        switch (e)
        {
            case 0:
                this.x = t;
                break;
            case 1:
                this.y = t;
                break;
            case 2:
                this.z = t;
                break;
            case 3:
                this.w = t;
                break;
            default:
                throw new Error("index is out of range: " + e)
        }
        return this
    },
    getComponent: function(e)
    {
        switch (e)
        {
            case 0:
                return this.x;
            case 1:
                return this.y;
            case 2:
                return this.z;
            case 3:
                return this.w;
            default:
                throw new Error("index is out of range: " + e)
        }
    },
    clone: function()
    {
        return new this.constructor(this.x, this.y, this.z, this.w)
    },
    copy: function(e)
    {
        return this.x = e.x, this.y = e.y, this.z = e.z, this.w = void 0 !== e.w ? e.w : 1, this
    },
    add: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."), this.addVectors(e, t)) : (this.x += e.x, this.y += e.y, this.z += e.z, this.w += e.w, this)
    },
    addScalar: function(e)
    {
        return this.x += e, this.y += e, this.z += e, this.w += e, this
    },
    addVectors: function(e, t)
    {
        return this.x = e.x + t.x, this.y = e.y + t.y, this.z = e.z + t.z, this.w = e.w + t.w, this
    },
    addScaledVector: function(e, t)
    {
        return this.x += e.x * t, this.y += e.y * t, this.z += e.z * t, this.w += e.w * t, this
    },
    sub: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."), this.subVectors(e, t)) : (this.x -= e.x, this.y -= e.y, this.z -= e.z, this.w -= e.w, this)
    },
    subScalar: function(e)
    {
        return this.x -= e, this.y -= e, this.z -= e, this.w -= e, this
    },
    subVectors: function(e, t)
    {
        return this.x = e.x - t.x, this.y = e.y - t.y, this.z = e.z - t.z, this.w = e.w - t.w, this
    },
    multiplyScalar: function(e)
    {
        return this.x *= e, this.y *= e, this.z *= e, this.w *= e, this
    },
    applyMatrix4: function(e)
    {
        var t = this.x,
            n = this.y,
            r = this.z,
            i = this.w,
            o = e.elements;
        return this.x = o[0] * t + o[4] * n + o[8] * r + o[12] * i, this.y = o[1] * t + o[5] * n + o[9] * r + o[13] * i, this.z = o[2] * t + o[6] * n + o[10] * r + o[14] * i, this.w = o[3] * t + o[7] * n + o[11] * r + o[15] * i, this
    },
    divideScalar: function(e)
    {
        return this.multiplyScalar(1 / e)
    },
    setAxisAngleFromQuaternion: function(e)
    {
        this.w = 2 * Math.acos(e.w);
        var t = Math.sqrt(1 - e.w * e.w);
        return t < 1e-4 ? (this.x = 1, this.y = 0, this.z = 0) : (this.x = e.x / t, this.y = e.y / t, this.z = e.z / t), this
    },
    setAxisAngleFromRotationMatrix: function(e)
    {
        var t, n, r, i, o = e.elements,
            a = o[0],
            s = o[4],
            c = o[8],
            u = o[1],
            l = o[5],
            f = o[9],
            h = o[2],
            d = o[6],
            p = o[10];
        if (Math.abs(s - u) < .01 && Math.abs(c - h) < .01 && Math.abs(f - d) < .01)
        {
            if (Math.abs(s + u) < .1 && Math.abs(c + h) < .1 && Math.abs(f + d) < .1 && Math.abs(a + l + p - 3) < .1) return this.set(1, 0, 0, 0), this;
            t = Math.PI;
            var m = (a + 1) / 2,
                v = (l + 1) / 2,
                g = (p + 1) / 2,
                y = (s + u) / 4,
                b = (c + h) / 4,
                w = (f + d) / 4;
            return m > v && m > g ? m < .01 ? (n = 0, r = .707106781, i = .707106781) : (r = y / (n = Math.sqrt(m)), i = b / n) : v > g ? v < .01 ? (n = .707106781, r = 0, i = .707106781) : (n = y / (r = Math.sqrt(v)), i = w / r) : g < .01 ? (n = .707106781, r = .707106781, i = 0) : (n = b / (i = Math.sqrt(g)), r = w / i), this.set(n, r, i, t), this
        }
        var _ = Math.sqrt((d - f) * (d - f) + (c - h) * (c - h) + (u - s) * (u - s));
        return Math.abs(_) < .001 && (_ = 1), this.x = (d - f) / _, this.y = (c - h) / _, this.z = (u - s) / _, this.w = Math.acos((a + l + p - 1) / 2), this
    },
    min: function(e)
    {
        return this.x = Math.min(this.x, e.x), this.y = Math.min(this.y, e.y), this.z = Math.min(this.z, e.z), this.w = Math.min(this.w, e.w), this
    },
    max: function(e)
    {
        return this.x = Math.max(this.x, e.x), this.y = Math.max(this.y, e.y), this.z = Math.max(this.z, e.z), this.w = Math.max(this.w, e.w), this
    },
    clamp: function(e, t)
    {
        return this.x = Math.max(e.x, Math.min(t.x, this.x)), this.y = Math.max(e.y, Math.min(t.y, this.y)), this.z = Math.max(e.z, Math.min(t.z, this.z)), this.w = Math.max(e.w, Math.min(t.w, this.w)), this
    },
    clampScalar: function(e, t)
    {
        return this.x = Math.max(e, Math.min(t, this.x)), this.y = Math.max(e, Math.min(t, this.y)), this.z = Math.max(e, Math.min(t, this.z)), this.w = Math.max(e, Math.min(t, this.w)), this
    },
    clampLength: function(e, t)
    {
        var n = this.length();
        return this.divideScalar(n || 1).multiplyScalar(Math.max(e, Math.min(t, n)))
    },
    floor: function()
    {
        return this.x = Math.floor(this.x), this.y = Math.floor(this.y), this.z = Math.floor(this.z), this.w = Math.floor(this.w), this
    },
    ceil: function()
    {
        return this.x = Math.ceil(this.x), this.y = Math.ceil(this.y), this.z = Math.ceil(this.z), this.w = Math.ceil(this.w), this
    },
    round: function()
    {
        return this.x = Math.round(this.x), this.y = Math.round(this.y), this.z = Math.round(this.z), this.w = Math.round(this.w), this
    },
    roundToZero: function()
    {
        return this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x), this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y), this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z), this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w), this
    },
    negate: function()
    {
        return this.x = -this.x, this.y = -this.y, this.z = -this.z, this.w = -this.w, this
    },
    dot: function(e)
    {
        return this.x * e.x + this.y * e.y + this.z * e.z + this.w * e.w
    },
    lengthSq: function()
    {
        return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w
    },
    length: function()
    {
        return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w)
    },
    manhattanLength: function()
    {
        return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w)
    },
    normalize: function()
    {
        return this.divideScalar(this.length() || 1)
    },
    setLength: function(e)
    {
        return this.normalize().multiplyScalar(e)
    },
    lerp: function(e, t)
    {
        return this.x += (e.x - this.x) * t, this.y += (e.y - this.y) * t, this.z += (e.z - this.z) * t, this.w += (e.w - this.w) * t, this
    },
    lerpVectors: function(e, t, n)
    {
        return this.subVectors(t, e).multiplyScalar(n).add(e)
    },
    equals: function(e)
    {
        return e.x === this.x && e.y === this.y && e.z === this.z && e.w === this.w
    },
    fromArray: function(e, t)
    {
        return void 0 === t && (t = 0), this.x = e[t], this.y = e[t + 1], this.z = e[t + 2], this.w = e[t + 3], this
    },
    toArray: function(e, t)
    {
        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.x, e[t + 1] = this.y, e[t + 2] = this.z, e[t + 3] = this.w, e
    },
    fromBufferAttribute: function(e, t, n)
    {
        return void 0 !== n && console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."), this.x = e.getX(t), this.y = e.getY(t), this.z = e.getZ(t), this.w = e.getW(t), this
    }
}), ma.prototype = Object.assign(Object.create(Qo.prototype),
{
    constructor: ma,
    isWebGLRenderTarget: !0,
    setSize: function(e, t)
    {
        this.width === e && this.height === t || (this.width = e, this.height = t, this.texture.image.width = e, this.texture.image.height = t, this.dispose()), this.viewport.set(0, 0, e, t), this.scissor.set(0, 0, e, t)
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.width = e.width, this.height = e.height, this.viewport.copy(e.viewport), this.texture = e.texture.clone(), this.depthBuffer = e.depthBuffer, this.stencilBuffer = e.stencilBuffer, this.depthTexture = e.depthTexture, this
    },
    dispose: function()
    {
        this.dispatchEvent(
        {
            type: "dispose"
        })
    }
}), va.prototype = Object.assign(Object.create(ma.prototype),
{
    constructor: va,
    isWebGLMultisampleRenderTarget: !0,
    copy: function(e)
    {
        return ma.prototype.copy.call(this, e), this.samples = e.samples, this
    }
});
var ga = new sa,
    ya = new Sa,
    ba = new sa(0, 0, 0),
    wa = new sa(1, 1, 1),
    _a = new sa,
    xa = new sa,
    Ea = new sa;

function Sa()
{
    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1], arguments.length > 0 && console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")
}
Object.assign(Sa.prototype,
{
    isMatrix4: !0,
    set: function(e, t, n, r, i, o, a, s, c, u, l, f, h, d, p, m)
    {
        var v = this.elements;
        return v[0] = e, v[4] = t, v[8] = n, v[12] = r, v[1] = i, v[5] = o, v[9] = a, v[13] = s, v[2] = c, v[6] = u, v[10] = l, v[14] = f, v[3] = h, v[7] = d, v[11] = p, v[15] = m, this
    },
    identity: function()
    {
        return this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
    },
    clone: function()
    {
        return (new Sa).fromArray(this.elements)
    },
    copy: function(e)
    {
        var t = this.elements,
            n = e.elements;
        return t[0] = n[0], t[1] = n[1], t[2] = n[2], t[3] = n[3], t[4] = n[4], t[5] = n[5], t[6] = n[6], t[7] = n[7], t[8] = n[8], t[9] = n[9], t[10] = n[10], t[11] = n[11], t[12] = n[12], t[13] = n[13], t[14] = n[14], t[15] = n[15], this
    },
    copyPosition: function(e)
    {
        var t = this.elements,
            n = e.elements;
        return t[12] = n[12], t[13] = n[13], t[14] = n[14], this
    },
    extractBasis: function(e, t, n)
    {
        return e.setFromMatrixColumn(this, 0), t.setFromMatrixColumn(this, 1), n.setFromMatrixColumn(this, 2), this
    },
    makeBasis: function(e, t, n)
    {
        return this.set(e.x, t.x, n.x, 0, e.y, t.y, n.y, 0, e.z, t.z, n.z, 0, 0, 0, 0, 1), this
    },
    extractRotation: function(e)
    {
        var t = this.elements,
            n = e.elements,
            r = 1 / ga.setFromMatrixColumn(e, 0).length(),
            i = 1 / ga.setFromMatrixColumn(e, 1).length(),
            o = 1 / ga.setFromMatrixColumn(e, 2).length();
        return t[0] = n[0] * r, t[1] = n[1] * r, t[2] = n[2] * r, t[3] = 0, t[4] = n[4] * i, t[5] = n[5] * i, t[6] = n[6] * i, t[7] = 0, t[8] = n[8] * o, t[9] = n[9] * o, t[10] = n[10] * o, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
    },
    makeRotationFromEuler: function(e)
    {
        e && e.isEuler || console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");
        var t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z,
            o = Math.cos(n),
            a = Math.sin(n),
            s = Math.cos(r),
            c = Math.sin(r),
            u = Math.cos(i),
            l = Math.sin(i);
        if ("XYZ" === e.order)
        {
            var f = o * u,
                h = o * l,
                d = a * u,
                p = a * l;
            t[0] = s * u, t[4] = -s * l, t[8] = c, t[1] = h + d * c, t[5] = f - p * c, t[9] = -a * s, t[2] = p - f * c, t[6] = d + h * c, t[10] = o * s
        }
        else if ("YXZ" === e.order)
        {
            var m = s * u,
                v = s * l,
                g = c * u,
                y = c * l;
            t[0] = m + y * a, t[4] = g * a - v, t[8] = o * c, t[1] = o * l, t[5] = o * u, t[9] = -a, t[2] = v * a - g, t[6] = y + m * a, t[10] = o * s
        }
        else if ("ZXY" === e.order)
        {
            m = s * u, v = s * l, g = c * u, y = c * l;
            t[0] = m - y * a, t[4] = -o * l, t[8] = g + v * a, t[1] = v + g * a, t[5] = o * u, t[9] = y - m * a, t[2] = -o * c, t[6] = a, t[10] = o * s
        }
        else if ("ZYX" === e.order)
        {
            f = o * u, h = o * l, d = a * u, p = a * l;
            t[0] = s * u, t[4] = d * c - h, t[8] = f * c + p, t[1] = s * l, t[5] = p * c + f, t[9] = h * c - d, t[2] = -c, t[6] = a * s, t[10] = o * s
        }
        else if ("YZX" === e.order)
        {
            var b = o * s,
                w = o * c,
                _ = a * s,
                x = a * c;
            t[0] = s * u, t[4] = x - b * l, t[8] = _ * l + w, t[1] = l, t[5] = o * u, t[9] = -a * u, t[2] = -c * u, t[6] = w * l + _, t[10] = b - x * l
        }
        else if ("XZY" === e.order)
        {
            b = o * s, w = o * c, _ = a * s, x = a * c;
            t[0] = s * u, t[4] = -l, t[8] = c * u, t[1] = b * l + x, t[5] = o * u, t[9] = w * l - _, t[2] = _ * l - w, t[6] = a * u, t[10] = x * l + b
        }
        return t[3] = 0, t[7] = 0, t[11] = 0, t[12] = 0, t[13] = 0, t[14] = 0, t[15] = 1, this
    },
    makeRotationFromQuaternion: function(e)
    {
        return this.compose(ba, e, wa)
    },
    lookAt: function(e, t, n)
    {
        var r = this.elements;
        return Ea.subVectors(e, t), 0 === Ea.lengthSq() && (Ea.z = 1), Ea.normalize(), _a.crossVectors(n, Ea), 0 === _a.lengthSq() && (1 === Math.abs(n.z) ? Ea.x += 1e-4 : Ea.z += 1e-4, Ea.normalize(), _a.crossVectors(n, Ea)), _a.normalize(), xa.crossVectors(Ea, _a), r[0] = _a.x, r[4] = xa.x, r[8] = Ea.x, r[1] = _a.y, r[5] = xa.y, r[9] = Ea.y, r[2] = _a.z, r[6] = xa.z, r[10] = Ea.z, this
    },
    multiply: function(e, t)
    {
        return void 0 !== t ? (console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."), this.multiplyMatrices(e, t)) : this.multiplyMatrices(this, e)
    },
    premultiply: function(e)
    {
        return this.multiplyMatrices(e, this)
    },
    multiplyMatrices: function(e, t)
    {
        var n = e.elements,
            r = t.elements,
            i = this.elements,
            o = n[0],
            a = n[4],
            s = n[8],
            c = n[12],
            u = n[1],
            l = n[5],
            f = n[9],
            h = n[13],
            d = n[2],
            p = n[6],
            m = n[10],
            v = n[14],
            g = n[3],
            y = n[7],
            b = n[11],
            w = n[15],
            _ = r[0],
            x = r[4],
            E = r[8],
            S = r[12],
            M = r[1],
            T = r[5],
            k = r[9],
            A = r[13],
            C = r[2],
            O = r[6],
            P = r[10],
            R = r[14],
            I = r[3],
            N = r[7],
            L = r[11],
            B = r[15];
        return i[0] = o * _ + a * M + s * C + c * I, i[4] = o * x + a * T + s * O + c * N, i[8] = o * E + a * k + s * P + c * L, i[12] = o * S + a * A + s * R + c * B, i[1] = u * _ + l * M + f * C + h * I, i[5] = u * x + l * T + f * O + h * N, i[9] = u * E + l * k + f * P + h * L, i[13] = u * S + l * A + f * R + h * B, i[2] = d * _ + p * M + m * C + v * I, i[6] = d * x + p * T + m * O + v * N, i[10] = d * E + p * k + m * P + v * L, i[14] = d * S + p * A + m * R + v * B, i[3] = g * _ + y * M + b * C + w * I, i[7] = g * x + y * T + b * O + w * N, i[11] = g * E + y * k + b * P + w * L, i[15] = g * S + y * A + b * R + w * B, this
    },
    multiplyScalar: function(e)
    {
        var t = this.elements;
        return t[0] *= e, t[4] *= e, t[8] *= e, t[12] *= e, t[1] *= e, t[5] *= e, t[9] *= e, t[13] *= e, t[2] *= e, t[6] *= e, t[10] *= e, t[14] *= e, t[3] *= e, t[7] *= e, t[11] *= e, t[15] *= e, this
    },
    applyToBufferAttribute: function(e)
    {
        for (var t = 0, n = e.count; t < n; t++) ga.x = e.getX(t), ga.y = e.getY(t), ga.z = e.getZ(t), ga.applyMatrix4(this), e.setXYZ(t, ga.x, ga.y, ga.z);
        return e
    },
    determinant: function()
    {
        var e = this.elements,
            t = e[0],
            n = e[4],
            r = e[8],
            i = e[12],
            o = e[1],
            a = e[5],
            s = e[9],
            c = e[13],
            u = e[2],
            l = e[6],
            f = e[10],
            h = e[14];
        return e[3] * (+i * s * l - r * c * l - i * a * f + n * c * f + r * a * h - n * s * h) + e[7] * (+t * s * h - t * c * f + i * o * f - r * o * h + r * c * u - i * s * u) + e[11] * (+t * c * l - t * a * h - i * o * l + n * o * h + i * a * u - n * c * u) + e[15] * (-r * a * u - t * s * l + t * a * f + r * o * l - n * o * f + n * s * u)
    },
    transpose: function()
    {
        var e, t = this.elements;
        return e = t[1], t[1] = t[4], t[4] = e, e = t[2], t[2] = t[8], t[8] = e, e = t[6], t[6] = t[9], t[9] = e, e = t[3], t[3] = t[12], t[12] = e, e = t[7], t[7] = t[13], t[13] = e, e = t[11], t[11] = t[14], t[14] = e, this
    },
    setPosition: function(e, t, n)
    {
        var r = this.elements;
        return e.isVector3 ? (r[12] = e.x, r[13] = e.y, r[14] = e.z) : (r[12] = e, r[13] = t, r[14] = n), this
    },
    getInverse: function(e, t)
    {
        var n = this.elements,
            r = e.elements,
            i = r[0],
            o = r[1],
            a = r[2],
            s = r[3],
            c = r[4],
            u = r[5],
            l = r[6],
            f = r[7],
            h = r[8],
            d = r[9],
            p = r[10],
            m = r[11],
            v = r[12],
            g = r[13],
            y = r[14],
            b = r[15],
            w = d * y * f - g * p * f + g * l * m - u * y * m - d * l * b + u * p * b,
            _ = v * p * f - h * y * f - v * l * m + c * y * m + h * l * b - c * p * b,
            x = h * g * f - v * d * f + v * u * m - c * g * m - h * u * b + c * d * b,
            E = v * d * l - h * g * l - v * u * p + c * g * p + h * u * y - c * d * y,
            S = i * w + o * _ + a * x + s * E;
        if (0 === S)
        {
            var M = "THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0";
            if (!0 === t) throw new Error(M);
            return console.warn(M), this.identity()
        }
        var T = 1 / S;
        return n[0] = w * T, n[1] = (g * p * s - d * y * s - g * a * m + o * y * m + d * a * b - o * p * b) * T, n[2] = (u * y * s - g * l * s + g * a * f - o * y * f - u * a * b + o * l * b) * T, n[3] = (d * l * s - u * p * s - d * a * f + o * p * f + u * a * m - o * l * m) * T, n[4] = _ * T, n[5] = (h * y * s - v * p * s + v * a * m - i * y * m - h * a * b + i * p * b) * T, n[6] = (v * l * s - c * y * s - v * a * f + i * y * f + c * a * b - i * l * b) * T, n[7] = (c * p * s - h * l * s + h * a * f - i * p * f - c * a * m + i * l * m) * T, n[8] = x * T, n[9] = (v * d * s - h * g * s - v * o * m + i * g * m + h * o * b - i * d * b) * T, n[10] = (c * g * s - v * u * s + v * o * f - i * g * f - c * o * b + i * u * b) * T, n[11] = (h * u * s - c * d * s - h * o * f + i * d * f + c * o * m - i * u * m) * T, n[12] = E * T, n[13] = (h * g * a - v * d * a + v * o * p - i * g * p - h * o * y + i * d * y) * T, n[14] = (v * u * a - c * g * a - v * o * l + i * g * l + c * o * y - i * u * y) * T, n[15] = (c * d * a - h * u * a + h * o * l - i * d * l - c * o * p + i * u * p) * T, this
    },
    scale: function(e)
    {
        var t = this.elements,
            n = e.x,
            r = e.y,
            i = e.z;
        return t[0] *= n, t[4] *= r, t[8] *= i, t[1] *= n, t[5] *= r, t[9] *= i, t[2] *= n, t[6] *= r, t[10] *= i, t[3] *= n, t[7] *= r, t[11] *= i, this
    },
    getMaxScaleOnAxis: function()
    {
        var e = this.elements,
            t = e[0] * e[0] + e[1] * e[1] + e[2] * e[2],
            n = e[4] * e[4] + e[5] * e[5] + e[6] * e[6],
            r = e[8] * e[8] + e[9] * e[9] + e[10] * e[10];
        return Math.sqrt(Math.max(t, n, r))
    },
    makeTranslation: function(e, t, n)
    {
        return this.set(1, 0, 0, e, 0, 1, 0, t, 0, 0, 1, n, 0, 0, 0, 1), this
    },
    makeRotationX: function(e)
    {
        var t = Math.cos(e),
            n = Math.sin(e);
        return this.set(1, 0, 0, 0, 0, t, -n, 0, 0, n, t, 0, 0, 0, 0, 1), this
    },
    makeRotationY: function(e)
    {
        var t = Math.cos(e),
            n = Math.sin(e);
        return this.set(t, 0, n, 0, 0, 1, 0, 0, -n, 0, t, 0, 0, 0, 0, 1), this
    },
    makeRotationZ: function(e)
    {
        var t = Math.cos(e),
            n = Math.sin(e);
        return this.set(t, -n, 0, 0, n, t, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1), this
    },
    makeRotationAxis: function(e, t)
    {
        var n = Math.cos(t),
            r = Math.sin(t),
            i = 1 - n,
            o = e.x,
            a = e.y,
            s = e.z,
            c = i * o,
            u = i * a;
        return this.set(c * o + n, c * a - r * s, c * s + r * a, 0, c * a + r * s, u * a + n, u * s - r * o, 0, c * s - r * a, u * s + r * o, i * s * s + n, 0, 0, 0, 0, 1), this
    },
    makeScale: function(e, t, n)
    {
        return this.set(e, 0, 0, 0, 0, t, 0, 0, 0, 0, n, 0, 0, 0, 0, 1), this
    },
    makeShear: function(e, t, n)
    {
        return this.set(1, t, n, 0, e, 1, n, 0, e, t, 1, 0, 0, 0, 0, 1), this
    },
    compose: function(e, t, n)
    {
        var r = this.elements,
            i = t._x,
            o = t._y,
            a = t._z,
            s = t._w,
            c = i + i,
            u = o + o,
            l = a + a,
            f = i * c,
            h = i * u,
            d = i * l,
            p = o * u,
            m = o * l,
            v = a * l,
            g = s * c,
            y = s * u,
            b = s * l,
            w = n.x,
            _ = n.y,
            x = n.z;
        return r[0] = (1 - (p + v)) * w, r[1] = (h + b) * w, r[2] = (d - y) * w, r[3] = 0, r[4] = (h - b) * _, r[5] = (1 - (f + v)) * _, r[6] = (m + g) * _, r[7] = 0, r[8] = (d + y) * x, r[9] = (m - g) * x, r[10] = (1 - (f + p)) * x, r[11] = 0, r[12] = e.x, r[13] = e.y, r[14] = e.z, r[15] = 1, this
    },
    decompose: function(e, t, n)
    {
        var r = this.elements,
            i = ga.set(r[0], r[1], r[2]).length(),
            o = ga.set(r[4], r[5], r[6]).length(),
            a = ga.set(r[8], r[9], r[10]).length();
        this.determinant() < 0 && (i = -i), e.x = r[12], e.y = r[13], e.z = r[14], ya.copy(this);
        var s = 1 / i,
            c = 1 / o,
            u = 1 / a;
        return ya.elements[0] *= s, ya.elements[1] *= s, ya.elements[2] *= s, ya.elements[4] *= c, ya.elements[5] *= c, ya.elements[6] *= c, ya.elements[8] *= u, ya.elements[9] *= u, ya.elements[10] *= u, t.setFromRotationMatrix(ya), n.x = i, n.y = o, n.z = a, this
    },
    makePerspective: function(e, t, n, r, i, o)
    {
        void 0 === o && console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");
        var a = this.elements,
            s = 2 * i / (t - e),
            c = 2 * i / (n - r),
            u = (t + e) / (t - e),
            l = (n + r) / (n - r),
            f = -(o + i) / (o - i),
            h = -2 * o * i / (o - i);
        return a[0] = s, a[4] = 0, a[8] = u, a[12] = 0, a[1] = 0, a[5] = c, a[9] = l, a[13] = 0, a[2] = 0, a[6] = 0, a[10] = f, a[14] = h, a[3] = 0, a[7] = 0, a[11] = -1, a[15] = 0, this
    },
    makeOrthographic: function(e, t, n, r, i, o)
    {
        var a = this.elements,
            s = 1 / (t - e),
            c = 1 / (n - r),
            u = 1 / (o - i),
            l = (t + e) * s,
            f = (n + r) * c,
            h = (o + i) * u;
        return a[0] = 2 * s, a[4] = 0, a[8] = 0, a[12] = -l, a[1] = 0, a[5] = 2 * c, a[9] = 0, a[13] = -f, a[2] = 0, a[6] = 0, a[10] = -2 * u, a[14] = -h, a[3] = 0, a[7] = 0, a[11] = 0, a[15] = 1, this
    },
    equals: function(e)
    {
        for (var t = this.elements, n = e.elements, r = 0; r < 16; r++)
            if (t[r] !== n[r]) return !1;
        return !0
    },
    fromArray: function(e, t)
    {
        void 0 === t && (t = 0);
        for (var n = 0; n < 16; n++) this.elements[n] = e[n + t];
        return this
    },
    toArray: function(e, t)
    {
        void 0 === e && (e = []), void 0 === t && (t = 0);
        var n = this.elements;
        return e[t] = n[0], e[t + 1] = n[1], e[t + 2] = n[2], e[t + 3] = n[3], e[t + 4] = n[4], e[t + 5] = n[5], e[t + 6] = n[6], e[t + 7] = n[7], e[t + 8] = n[8], e[t + 9] = n[9], e[t + 10] = n[10], e[t + 11] = n[11], e[t + 12] = n[12], e[t + 13] = n[13], e[t + 14] = n[14], e[t + 15] = n[15], e
    }
});
var Ma = new Sa,
    Ta = new ia;

function ka(e, t, n, r)
{
    this._x = e || 0, this._y = t || 0, this._z = n || 0, this._order = r || ka.DefaultOrder
}

function Aa()
{
    this.mask = 1
}
ka.RotationOrders = ["XYZ", "YZX", "ZXY", "XZY", "YXZ", "ZYX"], ka.DefaultOrder = "XYZ", Object.defineProperties(ka.prototype,
{
    x:
    {
        get: function()
        {
            return this._x
        },
        set: function(e)
        {
            this._x = e, this._onChangeCallback()
        }
    },
    y:
    {
        get: function()
        {
            return this._y
        },
        set: function(e)
        {
            this._y = e, this._onChangeCallback()
        }
    },
    z:
    {
        get: function()
        {
            return this._z
        },
        set: function(e)
        {
            this._z = e, this._onChangeCallback()
        }
    },
    order:
    {
        get: function()
        {
            return this._order
        },
        set: function(e)
        {
            this._order = e, this._onChangeCallback()
        }
    }
}), Object.assign(ka.prototype,
{
    isEuler: !0,
    set: function(e, t, n, r)
    {
        return this._x = e, this._y = t, this._z = n, this._order = r || this._order, this._onChangeCallback(), this
    },
    clone: function()
    {
        return new this.constructor(this._x, this._y, this._z, this._order)
    },
    copy: function(e)
    {
        return this._x = e._x, this._y = e._y, this._z = e._z, this._order = e._order, this._onChangeCallback(), this
    },
    setFromRotationMatrix: function(e, t, n)
    {
        var r = na.clamp,
            i = e.elements,
            o = i[0],
            a = i[4],
            s = i[8],
            c = i[1],
            u = i[5],
            l = i[9],
            f = i[2],
            h = i[6],
            d = i[10];
        return "XYZ" === (t = t || this._order) ? (this._y = Math.asin(r(s, -1, 1)), Math.abs(s) < .9999999 ? (this._x = Math.atan2(-l, d), this._z = Math.atan2(-a, o)) : (this._x = Math.atan2(h, u), this._z = 0)) : "YXZ" === t ? (this._x = Math.asin(-r(l, -1, 1)), Math.abs(l) < .9999999 ? (this._y = Math.atan2(s, d), this._z = Math.atan2(c, u)) : (this._y = Math.atan2(-f, o), this._z = 0)) : "ZXY" === t ? (this._x = Math.asin(r(h, -1, 1)), Math.abs(h) < .9999999 ? (this._y = Math.atan2(-f, d), this._z = Math.atan2(-a, u)) : (this._y = 0, this._z = Math.atan2(c, o))) : "ZYX" === t ? (this._y = Math.asin(-r(f, -1, 1)), Math.abs(f) < .9999999 ? (this._x = Math.atan2(h, d), this._z = Math.atan2(c, o)) : (this._x = 0, this._z = Math.atan2(-a, u))) : "YZX" === t ? (this._z = Math.asin(r(c, -1, 1)), Math.abs(c) < .9999999 ? (this._x = Math.atan2(-l, u), this._y = Math.atan2(-f, o)) : (this._x = 0, this._y = Math.atan2(s, d))) : "XZY" === t ? (this._z = Math.asin(-r(a, -1, 1)), Math.abs(a) < .9999999 ? (this._x = Math.atan2(h, u), this._y = Math.atan2(s, o)) : (this._x = Math.atan2(-l, d), this._y = 0)) : console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: " + t), this._order = t, !1 !== n && this._onChangeCallback(), this
    },
    setFromQuaternion: function(e, t, n)
    {
        return Ma.makeRotationFromQuaternion(e), this.setFromRotationMatrix(Ma, t, n)
    },
    setFromVector3: function(e, t)
    {
        return this.set(e.x, e.y, e.z, t || this._order)
    },
    reorder: function(e)
    {
        return Ta.setFromEuler(this), this.setFromQuaternion(Ta, e)
    },
    equals: function(e)
    {
        return e._x === this._x && e._y === this._y && e._z === this._z && e._order === this._order
    },
    fromArray: function(e)
    {
        return this._x = e[0], this._y = e[1], this._z = e[2], void 0 !== e[3] && (this._order = e[3]), this._onChangeCallback(), this
    },
    toArray: function(e, t)
    {
        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this._x, e[t + 1] = this._y, e[t + 2] = this._z, e[t + 3] = this._order, e
    },
    toVector3: function(e)
    {
        return e ? e.set(this._x, this._y, this._z) : new sa(this._x, this._y, this._z)
    },
    _onChange: function(e)
    {
        return this._onChangeCallback = e, this
    },
    _onChangeCallback: function() {}
}), Object.assign(Aa.prototype,
{
    set: function(e)
    {
        this.mask = 1 << e | 0
    },
    enable: function(e)
    {
        this.mask |= 1 << e | 0
    },
    enableAll: function()
    {
        this.mask = -1
    },
    toggle: function(e)
    {
        this.mask ^= 1 << e | 0
    },
    disable: function(e)
    {
        this.mask &= ~(1 << e | 0)
    },
    disableAll: function()
    {
        this.mask = 0
    },
    test: function(e)
    {
        return 0 != (this.mask & e.mask)
    }
});
var Ca = 0,
    Oa = new sa,
    Pa = new ia,
    Ra = new Sa,
    Ia = new sa,
    Na = new sa,
    La = new sa,
    Ba = new ia,
    ja = new sa(1, 0, 0),
    Fa = new sa(0, 1, 0),
    Ua = new sa(0, 0, 1),
    Da = {
        type: "added"
    },
    za = {
        type: "removed"
    };

function Ha()
{
    Object.defineProperty(this, "id",
    {
        value: Ca++
    }), this.uuid = na.generateUUID(), this.name = "", this.type = "Object3D", this.parent = null, this.children = [], this.up = Ha.DefaultUp.clone();
    var e = new sa,
        t = new ka,
        n = new ia,
        r = new sa(1, 1, 1);
    t._onChange((function()
    {
        n.setFromEuler(t, !1)
    })), n._onChange((function()
    {
        t.setFromQuaternion(n, void 0, !1)
    })), Object.defineProperties(this,
    {
        position:
        {
            configurable: !0,
            enumerable: !0,
            value: e
        },
        rotation:
        {
            configurable: !0,
            enumerable: !0,
            value: t
        },
        quaternion:
        {
            configurable: !0,
            enumerable: !0,
            value: n
        },
        scale:
        {
            configurable: !0,
            enumerable: !0,
            value: r
        },
        modelViewMatrix:
        {
            value: new Sa
        },
        normalMatrix:
        {
            value: new la
        }
    }), this.matrix = new Sa, this.matrixWorld = new Sa, this.matrixAutoUpdate = Ha.DefaultMatrixAutoUpdate, this.matrixWorldNeedsUpdate = !1, this.layers = new Aa, this.visible = !0, this.castShadow = !1, this.receiveShadow = !1, this.frustumCulled = !0, this.renderOrder = 0, this.userData = {}
}

function Va()
{
    Ha.call(this), this.type = "Scene", this.background = null, this.environment = null, this.fog = null, this.overrideMaterial = null, this.autoUpdate = !0, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",
    {
        detail: this
    }))
}
Ha.DefaultUp = new sa(0, 1, 0), Ha.DefaultMatrixAutoUpdate = !0, Ha.prototype = Object.assign(Object.create(Qo.prototype),
{
    constructor: Ha,
    isObject3D: !0,
    onBeforeRender: function() {},
    onAfterRender: function() {},
    applyMatrix: function(e)
    {
        this.matrixAutoUpdate && this.updateMatrix(), this.matrix.premultiply(e), this.matrix.decompose(this.position, this.quaternion, this.scale)
    },
    applyQuaternion: function(e)
    {
        return this.quaternion.premultiply(e), this
    },
    setRotationFromAxisAngle: function(e, t)
    {
        this.quaternion.setFromAxisAngle(e, t)
    },
    setRotationFromEuler: function(e)
    {
        this.quaternion.setFromEuler(e, !0)
    },
    setRotationFromMatrix: function(e)
    {
        this.quaternion.setFromRotationMatrix(e)
    },
    setRotationFromQuaternion: function(e)
    {
        this.quaternion.copy(e)
    },
    rotateOnAxis: function(e, t)
    {
        return Pa.setFromAxisAngle(e, t), this.quaternion.multiply(Pa), this
    },
    rotateOnWorldAxis: function(e, t)
    {
        return Pa.setFromAxisAngle(e, t), this.quaternion.premultiply(Pa), this
    },
    rotateX: function(e)
    {
        return this.rotateOnAxis(ja, e)
    },
    rotateY: function(e)
    {
        return this.rotateOnAxis(Fa, e)
    },
    rotateZ: function(e)
    {
        return this.rotateOnAxis(Ua, e)
    },
    translateOnAxis: function(e, t)
    {
        return Oa.copy(e).applyQuaternion(this.quaternion), this.position.add(Oa.multiplyScalar(t)), this
    },
    translateX: function(e)
    {
        return this.translateOnAxis(ja, e)
    },
    translateY: function(e)
    {
        return this.translateOnAxis(Fa, e)
    },
    translateZ: function(e)
    {
        return this.translateOnAxis(Ua, e)
    },
    localToWorld: function(e)
    {
        return e.applyMatrix4(this.matrixWorld)
    },
    worldToLocal: function(e)
    {
        return e.applyMatrix4(Ra.getInverse(this.matrixWorld))
    },
    lookAt: function(e, t, n)
    {
        e.isVector3 ? Ia.copy(e) : Ia.set(e, t, n);
        var r = this.parent;
        this.updateWorldMatrix(!0, !1), Na.setFromMatrixPosition(this.matrixWorld), this.isCamera || this.isLight ? Ra.lookAt(Na, Ia, this.up) : Ra.lookAt(Ia, Na, this.up), this.quaternion.setFromRotationMatrix(Ra), r && (Ra.extractRotation(r.matrixWorld), Pa.setFromRotationMatrix(Ra), this.quaternion.premultiply(Pa.inverse()))
    },
    add: function(e)
    {
        if (arguments.length > 1)
        {
            for (var t = 0; t < arguments.length; t++) this.add(arguments[t]);
            return this
        }
        return e === this ? (console.error("THREE.Object3D.add: object can't be added as a child of itself.", e), this) : (e && e.isObject3D ? (null !== e.parent && e.parent.remove(e), e.parent = this, this.children.push(e), e.dispatchEvent(Da)) : console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.", e), this)
    },
    remove: function(e)
    {
        if (arguments.length > 1)
        {
            for (var t = 0; t < arguments.length; t++) this.remove(arguments[t]);
            return this
        }
        var n = this.children.indexOf(e);
        return -1 !== n && (e.parent = null, this.children.splice(n, 1), e.dispatchEvent(za)), this
    },
    attach: function(e)
    {
        return this.updateWorldMatrix(!0, !1), Ra.getInverse(this.matrixWorld), null !== e.parent && (e.parent.updateWorldMatrix(!0, !1), Ra.multiply(e.parent.matrixWorld)), e.applyMatrix(Ra), e.updateWorldMatrix(!1, !1), this.add(e), this
    },
    getObjectById: function(e)
    {
        return this.getObjectByProperty("id", e)
    },
    getObjectByName: function(e)
    {
        return this.getObjectByProperty("name", e)
    },
    getObjectByProperty: function(e, t)
    {
        if (this[e] === t) return this;
        for (var n = 0, r = this.children.length; n < r; n++)
        {
            var i = this.children[n].getObjectByProperty(e, t);
            if (void 0 !== i) return i
        }
    },
    getWorldPosition: function(e)
    {
        return void 0 === e && (console.warn("THREE.Object3D: .getWorldPosition() target is now required"), e = new sa), this.updateMatrixWorld(!0), e.setFromMatrixPosition(this.matrixWorld)
    },
    getWorldQuaternion: function(e)
    {
        return void 0 === e && (console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"), e = new ia), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Na, e, La), e
    },
    getWorldScale: function(e)
    {
        return void 0 === e && (console.warn("THREE.Object3D: .getWorldScale() target is now required"), e = new sa), this.updateMatrixWorld(!0), this.matrixWorld.decompose(Na, Ba, e), e
    },
    getWorldDirection: function(e)
    {
        void 0 === e && (console.warn("THREE.Object3D: .getWorldDirection() target is now required"), e = new sa), this.updateMatrixWorld(!0);
        var t = this.matrixWorld.elements;
        return e.set(t[8], t[9], t[10]).normalize()
    },
    raycast: function() {},
    traverse: function(e)
    {
        e(this);
        for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverse(e)
    },
    traverseVisible: function(e)
    {
        if (!1 !== this.visible)
        {
            e(this);
            for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].traverseVisible(e)
        }
    },
    traverseAncestors: function(e)
    {
        var t = this.parent;
        null !== t && (e(t), t.traverseAncestors(e))
    },
    updateMatrix: function()
    {
        this.matrix.compose(this.position, this.quaternion, this.scale), this.matrixWorldNeedsUpdate = !0
    },
    updateMatrixWorld: function(e)
    {
        this.matrixAutoUpdate && this.updateMatrix(), (this.matrixWorldNeedsUpdate || e) && (null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), this.matrixWorldNeedsUpdate = !1, e = !0);
        for (var t = this.children, n = 0, r = t.length; n < r; n++) t[n].updateMatrixWorld(e)
    },
    updateWorldMatrix: function(e, t)
    {
        var n = this.parent;
        if (!0 === e && null !== n && n.updateWorldMatrix(!0, !1), this.matrixAutoUpdate && this.updateMatrix(), null === this.parent ? this.matrixWorld.copy(this.matrix) : this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix), !0 === t)
            for (var r = this.children, i = 0, o = r.length; i < o; i++) r[i].updateWorldMatrix(!1, !0)
    },
    toJSON: function(e)
    {
        var t = void 0 === e || "string" == typeof e,
            n = {};
        t && (e = {
            geometries:
            {},
            materials:
            {},
            textures:
            {},
            images:
            {},
            shapes:
            {}
        }, n.metadata = {
            version: 4.5,
            type: "Object",
            generator: "Object3D.toJSON"
        });
        var r = {};

        function i(t, n)
        {
            return void 0 === t[n.uuid] && (t[n.uuid] = n.toJSON(e)), n.uuid
        }
        if (r.uuid = this.uuid, r.type = this.type, "" !== this.name && (r.name = this.name), !0 === this.castShadow && (r.castShadow = !0), !0 === this.receiveShadow && (r.receiveShadow = !0), !1 === this.visible && (r.visible = !1), !1 === this.frustumCulled && (r.frustumCulled = !1), 0 !== this.renderOrder && (r.renderOrder = this.renderOrder), "{}" !== JSON.stringify(this.userData) && (r.userData = this.userData), r.layers = this.layers.mask, r.matrix = this.matrix.toArray(), !1 === this.matrixAutoUpdate && (r.matrixAutoUpdate = !1), this.isInstancedMesh && (r.type = "InstancedMesh", r.count = this.count, r.instanceMatrix = this.instanceMatrix.toJSON()), this.isMesh || this.isLine || this.isPoints)
        {
            r.geometry = i(e.geometries, this.geometry);
            var o = this.geometry.parameters;
            if (void 0 !== o && void 0 !== o.shapes)
            {
                var a = o.shapes;
                if (Array.isArray(a))
                    for (var s = 0, c = a.length; s < c; s++)
                    {
                        var u = a[s];
                        i(e.shapes, u)
                    }
                else i(e.shapes, a)
            }
        }
        if (void 0 !== this.material)
            if (Array.isArray(this.material))
            {
                var l = [];
                for (s = 0, c = this.material.length; s < c; s++) l.push(i(e.materials, this.material[s]));
                r.material = l
            }
        else r.material = i(e.materials, this.material);
        if (this.children.length > 0)
        {
            r.children = [];
            for (s = 0; s < this.children.length; s++) r.children.push(this.children[s].toJSON(e).object)
        }
        if (t)
        {
            var f = m(e.geometries),
                h = m(e.materials),
                d = m(e.textures),
                p = m(e.images);
            a = m(e.shapes);
            f.length > 0 && (n.geometries = f), h.length > 0 && (n.materials = h), d.length > 0 && (n.textures = d), p.length > 0 && (n.images = p), a.length > 0 && (n.shapes = a)
        }
        return n.object = r, n;

        function m(e)
        {
            var t = [];
            for (var n in e)
            {
                var r = e[n];
                delete r.metadata, t.push(r)
            }
            return t
        }
    },
    clone: function(e)
    {
        return (new this.constructor).copy(this, e)
    },
    copy: function(e, t)
    {
        if (void 0 === t && (t = !0), this.name = e.name, this.up.copy(e.up), this.position.copy(e.position), this.quaternion.copy(e.quaternion), this.scale.copy(e.scale), this.matrix.copy(e.matrix), this.matrixWorld.copy(e.matrixWorld), this.matrixAutoUpdate = e.matrixAutoUpdate, this.matrixWorldNeedsUpdate = e.matrixWorldNeedsUpdate, this.layers.mask = e.layers.mask, this.visible = e.visible, this.castShadow = e.castShadow, this.receiveShadow = e.receiveShadow, this.frustumCulled = e.frustumCulled, this.renderOrder = e.renderOrder, this.userData = JSON.parse(JSON.stringify(e.userData)), !0 === t)
            for (var n = 0; n < e.children.length; n++)
            {
                var r = e.children[n];
                this.add(r.clone())
            }
        return this
    }
}), Va.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: Va,
    isScene: !0,
    copy: function(e, t)
    {
        return Ha.prototype.copy.call(this, e, t), null !== e.background && (this.background = e.background.clone()), null !== e.environment && (this.environment = e.environment.clone()), null !== e.fog && (this.fog = e.fog.clone()), null !== e.overrideMaterial && (this.overrideMaterial = e.overrideMaterial.clone()), this.autoUpdate = e.autoUpdate, this.matrixAutoUpdate = e.matrixAutoUpdate, this
    },
    toJSON: function(e)
    {
        var t = Ha.prototype.toJSON.call(this, e);
        return null !== this.background && (t.object.background = this.background.toJSON(e)), null !== this.environment && (t.object.environment = this.environment.toJSON(e)), null !== this.fog && (t.object.fog = this.fog.toJSON()), t
    },
    dispose: function()
    {
        this.dispatchEvent(
        {
            type: "dispose"
        })
    }
});
var Wa = [new sa, new sa, new sa, new sa, new sa, new sa, new sa, new sa],
    Ga = new sa,
    qa = new rs,
    $a = new sa,
    Ka = new sa,
    Ya = new sa,
    Xa = new sa,
    Ja = new sa,
    Za = new sa,
    Qa = new sa,
    es = new sa,
    ts = new sa,
    ns = new sa;

function rs(e, t)
{
    this.min = void 0 !== e ? e : new sa(1 / 0, 1 / 0, 1 / 0), this.max = void 0 !== t ? t : new sa(-1 / 0, -1 / 0, -1 / 0)
}

function is(e, t, n, r, i)
{
    var o, a;
    for (o = 0, a = e.length - 3; o <= a; o += 3)
    {
        ns.fromArray(e, o);
        var s = i.x * Math.abs(ns.x) + i.y * Math.abs(ns.y) + i.z * Math.abs(ns.z),
            c = t.dot(ns),
            u = n.dot(ns),
            l = r.dot(ns);
        if (Math.max(-Math.max(c, u, l), Math.min(c, u, l)) > s) return !1
    }
    return !0
}
Object.assign(rs.prototype,
{
    isBox3: !0,
    set: function(e, t)
    {
        return this.min.copy(e), this.max.copy(t), this
    },
    setFromArray: function(e)
    {
        for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = e.length; s < c; s += 3)
        {
            var u = e[s],
                l = e[s + 1],
                f = e[s + 2];
            u < t && (t = u), l < n && (n = l), f < r && (r = f), u > i && (i = u), l > o && (o = l), f > a && (a = f)
        }
        return this.min.set(t, n, r), this.max.set(i, o, a), this
    },
    setFromBufferAttribute: function(e)
    {
        for (var t = 1 / 0, n = 1 / 0, r = 1 / 0, i = -1 / 0, o = -1 / 0, a = -1 / 0, s = 0, c = e.count; s < c; s++)
        {
            var u = e.getX(s),
                l = e.getY(s),
                f = e.getZ(s);
            u < t && (t = u), l < n && (n = l), f < r && (r = f), u > i && (i = u), l > o && (o = l), f > a && (a = f)
        }
        return this.min.set(t, n, r), this.max.set(i, o, a), this
    },
    setFromPoints: function(e)
    {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this
    },
    setFromCenterAndSize: function(e, t)
    {
        var n = Ga.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
    },
    setFromObject: function(e)
    {
        return this.makeEmpty(), this.expandByObject(e)
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.min.copy(e.min), this.max.copy(e.max), this
    },
    makeEmpty: function()
    {
        return this.min.x = this.min.y = this.min.z = 1 / 0, this.max.x = this.max.y = this.max.z = -1 / 0, this
    },
    isEmpty: function()
    {
        return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z
    },
    getCenter: function(e)
    {
        return void 0 === e && (console.warn("THREE.Box3: .getCenter() target is now required"), e = new sa), this.isEmpty() ? e.set(0, 0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
    },
    getSize: function(e)
    {
        return void 0 === e && (console.warn("THREE.Box3: .getSize() target is now required"), e = new sa), this.isEmpty() ? e.set(0, 0, 0) : e.subVectors(this.max, this.min)
    },
    expandByPoint: function(e)
    {
        return this.min.min(e), this.max.max(e), this
    },
    expandByVector: function(e)
    {
        return this.min.sub(e), this.max.add(e), this
    },
    expandByScalar: function(e)
    {
        return this.min.addScalar(-e), this.max.addScalar(e), this
    },
    expandByObject: function(e)
    {
        e.updateWorldMatrix(!1, !1);
        var t = e.geometry;
        void 0 !== t && (null === t.boundingBox && t.computeBoundingBox(), qa.copy(t.boundingBox), qa.applyMatrix4(e.matrixWorld), this.expandByPoint(qa.min), this.expandByPoint(qa.max));
        for (var n = e.children, r = 0, i = n.length; r < i; r++) this.expandByObject(n[r]);
        return this
    },
    containsPoint: function(e)
    {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y || e.z < this.min.z || e.z > this.max.z)
    },
    containsBox: function(e)
    {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y && this.min.z <= e.min.z && e.max.z <= this.max.z
    },
    getParameter: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Box3: .getParameter() target is now required"), t = new sa), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y), (e.z - this.min.z) / (this.max.z - this.min.z))
    },
    intersectsBox: function(e)
    {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y || e.max.z < this.min.z || e.min.z > this.max.z)
    },
    intersectsSphere: function(e)
    {
        return this.clampPoint(e.center, Ga), Ga.distanceToSquared(e.center) <= e.radius * e.radius
    },
    intersectsPlane: function(e)
    {
        var t, n;
        return e.normal.x > 0 ? (t = e.normal.x * this.min.x, n = e.normal.x * this.max.x) : (t = e.normal.x * this.max.x, n = e.normal.x * this.min.x), e.normal.y > 0 ? (t += e.normal.y * this.min.y, n += e.normal.y * this.max.y) : (t += e.normal.y * this.max.y, n += e.normal.y * this.min.y), e.normal.z > 0 ? (t += e.normal.z * this.min.z, n += e.normal.z * this.max.z) : (t += e.normal.z * this.max.z, n += e.normal.z * this.min.z), t <= -e.constant && n >= -e.constant
    },
    intersectsTriangle: function(e)
    {
        if (this.isEmpty()) return !1;
        this.getCenter(Qa), es.subVectors(this.max, Qa), $a.subVectors(e.a, Qa), Ka.subVectors(e.b, Qa), Ya.subVectors(e.c, Qa), Xa.subVectors(Ka, $a), Ja.subVectors(Ya, Ka), Za.subVectors($a, Ya);
        var t = [0, -Xa.z, Xa.y, 0, -Ja.z, Ja.y, 0, -Za.z, Za.y, Xa.z, 0, -Xa.x, Ja.z, 0, -Ja.x, Za.z, 0, -Za.x, -Xa.y, Xa.x, 0, -Ja.y, Ja.x, 0, -Za.y, Za.x, 0];
        return !!is(t, $a, Ka, Ya, es) && (!!is(t = [1, 0, 0, 0, 1, 0, 0, 0, 1], $a, Ka, Ya, es) && (ts.crossVectors(Xa, Ja), is(t = [ts.x, ts.y, ts.z], $a, Ka, Ya, es)))
    },
    clampPoint: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Box3: .clampPoint() target is now required"), t = new sa), t.copy(e).clamp(this.min, this.max)
    },
    distanceToPoint: function(e)
    {
        return Ga.copy(e).clamp(this.min, this.max).sub(e).length()
    },
    getBoundingSphere: function(e)
    {
        return void 0 === e && console.error("THREE.Box3: .getBoundingSphere() target is now required"), this.getCenter(e.center), e.radius = .5 * this.getSize(Ga).length(), e
    },
    intersect: function(e)
    {
        return this.min.max(e.min), this.max.min(e.max), this.isEmpty() && this.makeEmpty(), this
    },
    union: function(e)
    {
        return this.min.min(e.min), this.max.max(e.max), this
    },
    applyMatrix4: function(e)
    {
        return this.isEmpty() || (Wa[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(e), Wa[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(e), Wa[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(e), Wa[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(e), Wa[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(e), Wa[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(e), Wa[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(e), Wa[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(e), this.setFromPoints(Wa)), this
    },
    translate: function(e)
    {
        return this.min.add(e), this.max.add(e), this
    },
    equals: function(e)
    {
        return e.min.equals(this.min) && e.max.equals(this.max)
    }
});
var os = new rs;

function as(e, t)
{
    this.center = void 0 !== e ? e : new sa, this.radius = void 0 !== t ? t : 0
}
Object.assign(as.prototype,
{
    set: function(e, t)
    {
        return this.center.copy(e), this.radius = t, this
    },
    setFromPoints: function(e, t)
    {
        var n = this.center;
        void 0 !== t ? n.copy(t) : os.setFromPoints(e).getCenter(n);
        for (var r = 0, i = 0, o = e.length; i < o; i++) r = Math.max(r, n.distanceToSquared(e[i]));
        return this.radius = Math.sqrt(r), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.center.copy(e.center), this.radius = e.radius, this
    },
    empty: function()
    {
        return this.radius <= 0
    },
    containsPoint: function(e)
    {
        return e.distanceToSquared(this.center) <= this.radius * this.radius
    },
    distanceToPoint: function(e)
    {
        return e.distanceTo(this.center) - this.radius
    },
    intersectsSphere: function(e)
    {
        var t = this.radius + e.radius;
        return e.center.distanceToSquared(this.center) <= t * t
    },
    intersectsBox: function(e)
    {
        return e.intersectsSphere(this)
    },
    intersectsPlane: function(e)
    {
        return Math.abs(e.distanceToPoint(this.center)) <= this.radius
    },
    clampPoint: function(e, t)
    {
        var n = this.center.distanceToSquared(e);
        return void 0 === t && (console.warn("THREE.Sphere: .clampPoint() target is now required"), t = new sa), t.copy(e), n > this.radius * this.radius && (t.sub(this.center).normalize(), t.multiplyScalar(this.radius).add(this.center)), t
    },
    getBoundingBox: function(e)
    {
        return void 0 === e && (console.warn("THREE.Sphere: .getBoundingBox() target is now required"), e = new rs), e.set(this.center, this.center), e.expandByScalar(this.radius), e
    },
    applyMatrix4: function(e)
    {
        return this.center.applyMatrix4(e), this.radius = this.radius * e.getMaxScaleOnAxis(), this
    },
    translate: function(e)
    {
        return this.center.add(e), this
    },
    equals: function(e)
    {
        return e.center.equals(this.center) && e.radius === this.radius
    }
});
var ss = new sa,
    cs = new sa,
    us = new sa,
    ls = new sa,
    fs = new sa,
    hs = new sa,
    ds = new sa;

function ps(e, t)
{
    this.origin = void 0 !== e ? e : new sa, this.direction = void 0 !== t ? t : new sa(0, 0, -1)
}
Object.assign(ps.prototype,
{
    set: function(e, t)
    {
        return this.origin.copy(e), this.direction.copy(t), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.origin.copy(e.origin), this.direction.copy(e.direction), this
    },
    at: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Ray: .at() target is now required"), t = new sa), t.copy(this.direction).multiplyScalar(e).add(this.origin)
    },
    lookAt: function(e)
    {
        return this.direction.copy(e).sub(this.origin).normalize(), this
    },
    recast: function(e)
    {
        return this.origin.copy(this.at(e, ss)), this
    },
    closestPointToPoint: function(e, t)
    {
        void 0 === t && (console.warn("THREE.Ray: .closestPointToPoint() target is now required"), t = new sa), t.subVectors(e, this.origin);
        var n = t.dot(this.direction);
        return n < 0 ? t.copy(this.origin) : t.copy(this.direction).multiplyScalar(n).add(this.origin)
    },
    distanceToPoint: function(e)
    {
        return Math.sqrt(this.distanceSqToPoint(e))
    },
    distanceSqToPoint: function(e)
    {
        var t = ss.subVectors(e, this.origin).dot(this.direction);
        return t < 0 ? this.origin.distanceToSquared(e) : (ss.copy(this.direction).multiplyScalar(t).add(this.origin), ss.distanceToSquared(e))
    },
    distanceSqToSegment: function(e, t, n, r)
    {
        cs.copy(e).add(t).multiplyScalar(.5), us.copy(t).sub(e).normalize(), ls.copy(this.origin).sub(cs);
        var i, o, a, s, c = .5 * e.distanceTo(t),
            u = -this.direction.dot(us),
            l = ls.dot(this.direction),
            f = -ls.dot(us),
            h = ls.lengthSq(),
            d = Math.abs(1 - u * u);
        if (d > 0)
            if (o = u * l - f, s = c * d, (i = u * f - l) >= 0)
                if (o >= -s)
                    if (o <= s)
                    {
                        var p = 1 / d;
                        a = (i *= p) * (i + u * (o *= p) + 2 * l) + o * (u * i + o + 2 * f) + h
                    }
        else o = c, a = -(i = Math.max(0, -(u * o + l))) * i + o * (o + 2 * f) + h;
        else o = -c, a = -(i = Math.max(0, -(u * o + l))) * i + o * (o + 2 * f) + h;
        else o <= -s ? a = -(i = Math.max(0, -(-u * c + l))) * i + (o = i > 0 ? -c : Math.min(Math.max(-c, -f), c)) * (o + 2 * f) + h : o <= s ? (i = 0, a = (o = Math.min(Math.max(-c, -f), c)) * (o + 2 * f) + h) : a = -(i = Math.max(0, -(u * c + l))) * i + (o = i > 0 ? c : Math.min(Math.max(-c, -f), c)) * (o + 2 * f) + h;
        else o = u > 0 ? -c : c, a = -(i = Math.max(0, -(u * o + l))) * i + o * (o + 2 * f) + h;
        return n && n.copy(this.direction).multiplyScalar(i).add(this.origin), r && r.copy(us).multiplyScalar(o).add(cs), a
    },
    intersectSphere: function(e, t)
    {
        ss.subVectors(e.center, this.origin);
        var n = ss.dot(this.direction),
            r = ss.dot(ss) - n * n,
            i = e.radius * e.radius;
        if (r > i) return null;
        var o = Math.sqrt(i - r),
            a = n - o,
            s = n + o;
        return a < 0 && s < 0 ? null : a < 0 ? this.at(s, t) : this.at(a, t)
    },
    intersectsSphere: function(e)
    {
        return this.distanceSqToPoint(e.center) <= e.radius * e.radius
    },
    distanceToPlane: function(e)
    {
        var t = e.normal.dot(this.direction);
        if (0 === t) return 0 === e.distanceToPoint(this.origin) ? 0 : null;
        var n = -(this.origin.dot(e.normal) + e.constant) / t;
        return n >= 0 ? n : null
    },
    intersectPlane: function(e, t)
    {
        var n = this.distanceToPlane(e);
        return null === n ? null : this.at(n, t)
    },
    intersectsPlane: function(e)
    {
        var t = e.distanceToPoint(this.origin);
        return 0 === t || e.normal.dot(this.direction) * t < 0
    },
    intersectBox: function(e, t)
    {
        var n, r, i, o, a, s, c = 1 / this.direction.x,
            u = 1 / this.direction.y,
            l = 1 / this.direction.z,
            f = this.origin;
        return c >= 0 ? (n = (e.min.x - f.x) * c, r = (e.max.x - f.x) * c) : (n = (e.max.x - f.x) * c, r = (e.min.x - f.x) * c), u >= 0 ? (i = (e.min.y - f.y) * u, o = (e.max.y - f.y) * u) : (i = (e.max.y - f.y) * u, o = (e.min.y - f.y) * u), n > o || i > r ? null : ((i > n || n != n) && (n = i), (o < r || r != r) && (r = o), l >= 0 ? (a = (e.min.z - f.z) * l, s = (e.max.z - f.z) * l) : (a = (e.max.z - f.z) * l, s = (e.min.z - f.z) * l), n > s || a > r ? null : ((a > n || n != n) && (n = a), (s < r || r != r) && (r = s), r < 0 ? null : this.at(n >= 0 ? n : r, t)))
    },
    intersectsBox: function(e)
    {
        return null !== this.intersectBox(e, ss)
    },
    intersectTriangle: function(e, t, n, r, i)
    {
        fs.subVectors(t, e), hs.subVectors(n, e), ds.crossVectors(fs, hs);
        var o, a = this.direction.dot(ds);
        if (a > 0)
        {
            if (r) return null;
            o = 1
        }
        else
        {
            if (!(a < 0)) return null;
            o = -1, a = -a
        }
        ls.subVectors(this.origin, e);
        var s = o * this.direction.dot(hs.crossVectors(ls, hs));
        if (s < 0) return null;
        var c = o * this.direction.dot(fs.cross(ls));
        if (c < 0) return null;
        if (s + c > a) return null;
        var u = -o * ls.dot(ds);
        return u < 0 ? null : this.at(u / a, i)
    },
    applyMatrix4: function(e)
    {
        return this.origin.applyMatrix4(e), this.direction.transformDirection(e), this
    },
    equals: function(e)
    {
        return e.origin.equals(this.origin) && e.direction.equals(this.direction)
    }
});
var ms = new sa,
    vs = new sa,
    gs = new la;

function ys(e, t)
{
    this.normal = void 0 !== e ? e : new sa(1, 0, 0), this.constant = void 0 !== t ? t : 0
}
Object.assign(ys.prototype,
{
    isPlane: !0,
    set: function(e, t)
    {
        return this.normal.copy(e), this.constant = t, this
    },
    setComponents: function(e, t, n, r)
    {
        return this.normal.set(e, t, n), this.constant = r, this
    },
    setFromNormalAndCoplanarPoint: function(e, t)
    {
        return this.normal.copy(e), this.constant = -t.dot(this.normal), this
    },
    setFromCoplanarPoints: function(e, t, n)
    {
        var r = ms.subVectors(n, t).cross(vs.subVectors(e, t)).normalize();
        return this.setFromNormalAndCoplanarPoint(r, e), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.normal.copy(e.normal), this.constant = e.constant, this
    },
    normalize: function()
    {
        var e = 1 / this.normal.length();
        return this.normal.multiplyScalar(e), this.constant *= e, this
    },
    negate: function()
    {
        return this.constant *= -1, this.normal.negate(), this
    },
    distanceToPoint: function(e)
    {
        return this.normal.dot(e) + this.constant
    },
    distanceToSphere: function(e)
    {
        return this.distanceToPoint(e.center) - e.radius
    },
    projectPoint: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Plane: .projectPoint() target is now required"), t = new sa), t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)
    },
    intersectLine: function(e, t)
    {
        void 0 === t && (console.warn("THREE.Plane: .intersectLine() target is now required"), t = new sa);
        var n = e.delta(ms),
            r = this.normal.dot(n);
        if (0 === r) return 0 === this.distanceToPoint(e.start) ? t.copy(e.start) : void 0;
        var i = -(e.start.dot(this.normal) + this.constant) / r;
        return i < 0 || i > 1 ? void 0 : t.copy(n).multiplyScalar(i).add(e.start)
    },
    intersectsLine: function(e)
    {
        var t = this.distanceToPoint(e.start),
            n = this.distanceToPoint(e.end);
        return t < 0 && n > 0 || n < 0 && t > 0
    },
    intersectsBox: function(e)
    {
        return e.intersectsPlane(this)
    },
    intersectsSphere: function(e)
    {
        return e.intersectsPlane(this)
    },
    coplanarPoint: function(e)
    {
        return void 0 === e && (console.warn("THREE.Plane: .coplanarPoint() target is now required"), e = new sa), e.copy(this.normal).multiplyScalar(-this.constant)
    },
    applyMatrix4: function(e, t)
    {
        var n = t || gs.getNormalMatrix(e),
            r = this.coplanarPoint(ms).applyMatrix4(e),
            i = this.normal.applyMatrix3(n).normalize();
        return this.constant = -r.dot(i), this
    },
    translate: function(e)
    {
        return this.constant -= e.dot(this.normal), this
    },
    equals: function(e)
    {
        return e.normal.equals(this.normal) && e.constant === this.constant
    }
});
var bs = new sa,
    ws = new sa,
    _s = new sa,
    xs = new sa,
    Es = new sa,
    Ss = new sa,
    Ms = new sa,
    Ts = new sa,
    ks = new sa,
    As = new sa;

function Cs(e, t, n)
{
    this.a = void 0 !== e ? e : new sa, this.b = void 0 !== t ? t : new sa, this.c = void 0 !== n ? n : new sa
}
Object.assign(Cs,
{
    getNormal: function(e, t, n, r)
    {
        void 0 === r && (console.warn("THREE.Triangle: .getNormal() target is now required"), r = new sa), r.subVectors(n, t), bs.subVectors(e, t), r.cross(bs);
        var i = r.lengthSq();
        return i > 0 ? r.multiplyScalar(1 / Math.sqrt(i)) : r.set(0, 0, 0)
    },
    getBarycoord: function(e, t, n, r, i)
    {
        bs.subVectors(r, t), ws.subVectors(n, t), _s.subVectors(e, t);
        var o = bs.dot(bs),
            a = bs.dot(ws),
            s = bs.dot(_s),
            c = ws.dot(ws),
            u = ws.dot(_s),
            l = o * c - a * a;
        if (void 0 === i && (console.warn("THREE.Triangle: .getBarycoord() target is now required"), i = new sa), 0 === l) return i.set(-2, -1, -1);
        var f = 1 / l,
            h = (c * s - a * u) * f,
            d = (o * u - a * s) * f;
        return i.set(1 - h - d, d, h)
    },
    containsPoint: function(e, t, n, r)
    {
        return Cs.getBarycoord(e, t, n, r, xs), xs.x >= 0 && xs.y >= 0 && xs.x + xs.y <= 1
    },
    getUV: function(e, t, n, r, i, o, a, s)
    {
        return this.getBarycoord(e, t, n, r, xs), s.set(0, 0), s.addScaledVector(i, xs.x), s.addScaledVector(o, xs.y), s.addScaledVector(a, xs.z), s
    },
    isFrontFacing: function(e, t, n, r)
    {
        return bs.subVectors(n, t), ws.subVectors(e, t), bs.cross(ws).dot(r) < 0
    }
}), Object.assign(Cs.prototype,
{
    set: function(e, t, n)
    {
        return this.a.copy(e), this.b.copy(t), this.c.copy(n), this
    },
    setFromPointsAndIndices: function(e, t, n, r)
    {
        return this.a.copy(e[t]), this.b.copy(e[n]), this.c.copy(e[r]), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.a.copy(e.a), this.b.copy(e.b), this.c.copy(e.c), this
    },
    getArea: function()
    {
        return bs.subVectors(this.c, this.b), ws.subVectors(this.a, this.b), .5 * bs.cross(ws).length()
    },
    getMidpoint: function(e)
    {
        return void 0 === e && (console.warn("THREE.Triangle: .getMidpoint() target is now required"), e = new sa), e.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3)
    },
    getNormal: function(e)
    {
        return Cs.getNormal(this.a, this.b, this.c, e)
    },
    getPlane: function(e)
    {
        return void 0 === e && (console.warn("THREE.Triangle: .getPlane() target is now required"), e = new ys), e.setFromCoplanarPoints(this.a, this.b, this.c)
    },
    getBarycoord: function(e, t)
    {
        return Cs.getBarycoord(e, this.a, this.b, this.c, t)
    },
    getUV: function(e, t, n, r, i)
    {
        return Cs.getUV(e, this.a, this.b, this.c, t, n, r, i)
    },
    containsPoint: function(e)
    {
        return Cs.containsPoint(e, this.a, this.b, this.c)
    },
    isFrontFacing: function(e)
    {
        return Cs.isFrontFacing(this.a, this.b, this.c, e)
    },
    intersectsBox: function(e)
    {
        return e.intersectsTriangle(this)
    },
    closestPointToPoint: function(e, t)
    {
        void 0 === t && (console.warn("THREE.Triangle: .closestPointToPoint() target is now required"), t = new sa);
        var n, r, i = this.a,
            o = this.b,
            a = this.c;
        Es.subVectors(o, i), Ss.subVectors(a, i), Ts.subVectors(e, i);
        var s = Es.dot(Ts),
            c = Ss.dot(Ts);
        if (s <= 0 && c <= 0) return t.copy(i);
        ks.subVectors(e, o);
        var u = Es.dot(ks),
            l = Ss.dot(ks);
        if (u >= 0 && l <= u) return t.copy(o);
        var f = s * l - u * c;
        if (f <= 0 && s >= 0 && u <= 0) return n = s / (s - u), t.copy(i).addScaledVector(Es, n);
        As.subVectors(e, a);
        var h = Es.dot(As),
            d = Ss.dot(As);
        if (d >= 0 && h <= d) return t.copy(a);
        var p = h * c - s * d;
        if (p <= 0 && c >= 0 && d <= 0) return r = c / (c - d), t.copy(i).addScaledVector(Ss, r);
        var m = u * d - h * l;
        if (m <= 0 && l - u >= 0 && h - d >= 0) return Ms.subVectors(a, o), r = (l - u) / (l - u + (h - d)), t.copy(o).addScaledVector(Ms, r);
        var v = 1 / (m + p + f);
        return n = p * v, r = f * v, t.copy(i).addScaledVector(Es, n).addScaledVector(Ss, r)
    },
    equals: function(e)
    {
        return e.a.equals(this.a) && e.b.equals(this.b) && e.c.equals(this.c)
    }
});
var Os = {
        aliceblue: 15792383,
        antiquewhite: 16444375,
        aqua: 65535,
        aquamarine: 8388564,
        azure: 15794175,
        beige: 16119260,
        bisque: 16770244,
        black: 0,
        blanchedalmond: 16772045,
        blue: 255,
        blueviolet: 9055202,
        brown: 10824234,
        burlywood: 14596231,
        cadetblue: 6266528,
        chartreuse: 8388352,
        chocolate: 13789470,
        coral: 16744272,
        cornflowerblue: 6591981,
        cornsilk: 16775388,
        crimson: 14423100,
        cyan: 65535,
        darkblue: 139,
        darkcyan: 35723,
        darkgoldenrod: 12092939,
        darkgray: 11119017,
        darkgreen: 25600,
        darkgrey: 11119017,
        darkkhaki: 12433259,
        darkmagenta: 9109643,
        darkolivegreen: 5597999,
        darkorange: 16747520,
        darkorchid: 10040012,
        darkred: 9109504,
        darksalmon: 15308410,
        darkseagreen: 9419919,
        darkslateblue: 4734347,
        darkslategray: 3100495,
        darkslategrey: 3100495,
        darkturquoise: 52945,
        darkviolet: 9699539,
        deeppink: 16716947,
        deepskyblue: 49151,
        dimgray: 6908265,
        dimgrey: 6908265,
        dodgerblue: 2003199,
        firebrick: 11674146,
        floralwhite: 16775920,
        forestgreen: 2263842,
        fuchsia: 16711935,
        gainsboro: 14474460,
        ghostwhite: 16316671,
        gold: 16766720,
        goldenrod: 14329120,
        gray: 8421504,
        green: 32768,
        greenyellow: 11403055,
        grey: 8421504,
        honeydew: 15794160,
        hotpink: 16738740,
        indianred: 13458524,
        indigo: 4915330,
        ivory: 16777200,
        khaki: 15787660,
        lavender: 15132410,
        lavenderblush: 16773365,
        lawngreen: 8190976,
        lemonchiffon: 16775885,
        lightblue: 11393254,
        lightcoral: 15761536,
        lightcyan: 14745599,
        lightgoldenrodyellow: 16448210,
        lightgray: 13882323,
        lightgreen: 9498256,
        lightgrey: 13882323,
        lightpink: 16758465,
        lightsalmon: 16752762,
        lightseagreen: 2142890,
        lightskyblue: 8900346,
        lightslategray: 7833753,
        lightslategrey: 7833753,
        lightsteelblue: 11584734,
        lightyellow: 16777184,
        lime: 65280,
        limegreen: 3329330,
        linen: 16445670,
        magenta: 16711935,
        maroon: 8388608,
        mediumaquamarine: 6737322,
        mediumblue: 205,
        mediumorchid: 12211667,
        mediumpurple: 9662683,
        mediumseagreen: 3978097,
        mediumslateblue: 8087790,
        mediumspringgreen: 64154,
        mediumturquoise: 4772300,
        mediumvioletred: 13047173,
        midnightblue: 1644912,
        mintcream: 16121850,
        mistyrose: 16770273,
        moccasin: 16770229,
        navajowhite: 16768685,
        navy: 128,
        oldlace: 16643558,
        olive: 8421376,
        olivedrab: 7048739,
        orange: 16753920,
        orangered: 16729344,
        orchid: 14315734,
        palegoldenrod: 15657130,
        palegreen: 10025880,
        paleturquoise: 11529966,
        palevioletred: 14381203,
        papayawhip: 16773077,
        peachpuff: 16767673,
        peru: 13468991,
        pink: 16761035,
        plum: 14524637,
        powderblue: 11591910,
        purple: 8388736,
        rebeccapurple: 6697881,
        red: 16711680,
        rosybrown: 12357519,
        royalblue: 4286945,
        saddlebrown: 9127187,
        salmon: 16416882,
        sandybrown: 16032864,
        seagreen: 3050327,
        seashell: 16774638,
        sienna: 10506797,
        silver: 12632256,
        skyblue: 8900331,
        slateblue: 6970061,
        slategray: 7372944,
        slategrey: 7372944,
        snow: 16775930,
        springgreen: 65407,
        steelblue: 4620980,
        tan: 13808780,
        teal: 32896,
        thistle: 14204888,
        tomato: 16737095,
        turquoise: 4251856,
        violet: 15631086,
        wheat: 16113331,
        white: 16777215,
        whitesmoke: 16119285,
        yellow: 16776960,
        yellowgreen: 10145074
    },
    Ps = {
        h: 0,
        s: 0,
        l: 0
    },
    Rs = {
        h: 0,
        s: 0,
        l: 0
    };

function Is(e, t, n)
{
    return void 0 === t && void 0 === n ? this.set(e) : this.setRGB(e, t, n)
}

function Ns(e, t, n)
{
    return n < 0 && (n += 1), n > 1 && (n -= 1), n < 1 / 6 ? e + 6 * (t - e) * n : n < .5 ? t : n < 2 / 3 ? e + 6 * (t - e) * (2 / 3 - n) : e
}

function Ls(e)
{
    return e < .04045 ? .0773993808 * e : Math.pow(.9478672986 * e + .0521327014, 2.4)
}

function Bs(e)
{
    return e < .0031308 ? 12.92 * e : 1.055 * Math.pow(e, .41666) - .055
}

function js(e, t, n, r, i, o)
{
    this.a = e, this.b = t, this.c = n, this.normal = r && r.isVector3 ? r : new sa, this.vertexNormals = Array.isArray(r) ? r : [], this.color = i && i.isColor ? i : new Is, this.vertexColors = Array.isArray(i) ? i : [], this.materialIndex = void 0 !== o ? o : 0
}
Object.assign(Is.prototype,
{
    isColor: !0,
    r: 1,
    g: 1,
    b: 1,
    set: function(e)
    {
        return e && e.isColor ? this.copy(e) : "number" == typeof e ? this.setHex(e) : "string" == typeof e && this.setStyle(e), this
    },
    setScalar: function(e)
    {
        return this.r = e, this.g = e, this.b = e, this
    },
    setHex: function(e)
    {
        return e = Math.floor(e), this.r = (e >> 16 & 255) / 255, this.g = (e >> 8 & 255) / 255, this.b = (255 & e) / 255, this
    },
    setRGB: function(e, t, n)
    {
        return this.r = e, this.g = t, this.b = n, this
    },
    setHSL: function(e, t, n)
    {
        if (e = na.euclideanModulo(e, 1), t = na.clamp(t, 0, 1), n = na.clamp(n, 0, 1), 0 === t) this.r = this.g = this.b = n;
        else
        {
            var r = n <= .5 ? n * (1 + t) : n + t - n * t,
                i = 2 * n - r;
            this.r = Ns(i, r, e + 1 / 3), this.g = Ns(i, r, e), this.b = Ns(i, r, e - 1 / 3)
        }
        return this
    },
    setStyle: function(e)
    {
        function t(t)
        {
            void 0 !== t && parseFloat(t) < 1 && console.warn("THREE.Color: Alpha component of " + e + " will be ignored.")
        }
        var n;
        if (n = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e))
        {
            var r, i = n[1],
                o = n[2];
            switch (i)
            {
                case "rgb":
                case "rgba":
                    if (r = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(255, parseInt(r[1], 10)) / 255, this.g = Math.min(255, parseInt(r[2], 10)) / 255, this.b = Math.min(255, parseInt(r[3], 10)) / 255, t(r[5]), this;
                    if (r = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)) return this.r = Math.min(100, parseInt(r[1], 10)) / 100, this.g = Math.min(100, parseInt(r[2], 10)) / 100, this.b = Math.min(100, parseInt(r[3], 10)) / 100, t(r[5]), this;
                    break;
                case "hsl":
                case "hsla":
                    if (r = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))
                    {
                        var a = parseFloat(r[1]) / 360,
                            s = parseInt(r[2], 10) / 100,
                            c = parseInt(r[3], 10) / 100;
                        return t(r[5]), this.setHSL(a, s, c)
                    }
            }
        }
        else if (n = /^\#([A-Fa-f0-9]+)$/.exec(e))
        {
            var u = n[1],
                l = u.length;
            if (3 === l) return this.r = parseInt(u.charAt(0) + u.charAt(0), 16) / 255, this.g = parseInt(u.charAt(1) + u.charAt(1), 16) / 255, this.b = parseInt(u.charAt(2) + u.charAt(2), 16) / 255, this;
            if (6 === l) return this.r = parseInt(u.charAt(0) + u.charAt(1), 16) / 255, this.g = parseInt(u.charAt(2) + u.charAt(3), 16) / 255, this.b = parseInt(u.charAt(4) + u.charAt(5), 16) / 255, this
        }
        return e && e.length > 0 ? this.setColorName(e) : this
    },
    setColorName: function(e)
    {
        var t = Os[e];
        return void 0 !== t ? this.setHex(t) : console.warn("THREE.Color: Unknown color " + e), this
    },
    clone: function()
    {
        return new this.constructor(this.r, this.g, this.b)
    },
    copy: function(e)
    {
        return this.r = e.r, this.g = e.g, this.b = e.b, this
    },
    copyGammaToLinear: function(e, t)
    {
        return void 0 === t && (t = 2), this.r = Math.pow(e.r, t), this.g = Math.pow(e.g, t), this.b = Math.pow(e.b, t), this
    },
    copyLinearToGamma: function(e, t)
    {
        void 0 === t && (t = 2);
        var n = t > 0 ? 1 / t : 1;
        return this.r = Math.pow(e.r, n), this.g = Math.pow(e.g, n), this.b = Math.pow(e.b, n), this
    },
    convertGammaToLinear: function(e)
    {
        return this.copyGammaToLinear(this, e), this
    },
    convertLinearToGamma: function(e)
    {
        return this.copyLinearToGamma(this, e), this
    },
    copySRGBToLinear: function(e)
    {
        return this.r = Ls(e.r), this.g = Ls(e.g), this.b = Ls(e.b), this
    },
    copyLinearToSRGB: function(e)
    {
        return this.r = Bs(e.r), this.g = Bs(e.g), this.b = Bs(e.b), this
    },
    convertSRGBToLinear: function()
    {
        return this.copySRGBToLinear(this), this
    },
    convertLinearToSRGB: function()
    {
        return this.copyLinearToSRGB(this), this
    },
    getHex: function()
    {
        return 255 * this.r << 16 ^ 255 * this.g << 8 ^ 255 * this.b << 0
    },
    getHexString: function()
    {
        return ("000000" + this.getHex().toString(16)).slice(-6)
    },
    getHSL: function(e)
    {
        void 0 === e && (console.warn("THREE.Color: .getHSL() target is now required"), e = {
            h: 0,
            s: 0,
            l: 0
        });
        var t, n, r = this.r,
            i = this.g,
            o = this.b,
            a = Math.max(r, i, o),
            s = Math.min(r, i, o),
            c = (s + a) / 2;
        if (s === a) t = 0, n = 0;
        else
        {
            var u = a - s;
            switch (n = c <= .5 ? u / (a + s) : u / (2 - a - s), a)
            {
                case r:
                    t = (i - o) / u + (i < o ? 6 : 0);
                    break;
                case i:
                    t = (o - r) / u + 2;
                    break;
                case o:
                    t = (r - i) / u + 4
            }
            t /= 6
        }
        return e.h = t, e.s = n, e.l = c, e
    },
    getStyle: function()
    {
        return "rgb(" + (255 * this.r | 0) + "," + (255 * this.g | 0) + "," + (255 * this.b | 0) + ")"
    },
    offsetHSL: function(e, t, n)
    {
        return this.getHSL(Ps), Ps.h += e, Ps.s += t, Ps.l += n, this.setHSL(Ps.h, Ps.s, Ps.l), this
    },
    add: function(e)
    {
        return this.r += e.r, this.g += e.g, this.b += e.b, this
    },
    addColors: function(e, t)
    {
        return this.r = e.r + t.r, this.g = e.g + t.g, this.b = e.b + t.b, this
    },
    addScalar: function(e)
    {
        return this.r += e, this.g += e, this.b += e, this
    },
    sub: function(e)
    {
        return this.r = Math.max(0, this.r - e.r), this.g = Math.max(0, this.g - e.g), this.b = Math.max(0, this.b - e.b), this
    },
    multiply: function(e)
    {
        return this.r *= e.r, this.g *= e.g, this.b *= e.b, this
    },
    multiplyScalar: function(e)
    {
        return this.r *= e, this.g *= e, this.b *= e, this
    },
    lerp: function(e, t)
    {
        return this.r += (e.r - this.r) * t, this.g += (e.g - this.g) * t, this.b += (e.b - this.b) * t, this
    },
    lerpHSL: function(e, t)
    {
        this.getHSL(Ps), e.getHSL(Rs);
        var n = na.lerp(Ps.h, Rs.h, t),
            r = na.lerp(Ps.s, Rs.s, t),
            i = na.lerp(Ps.l, Rs.l, t);
        return this.setHSL(n, r, i), this
    },
    equals: function(e)
    {
        return e.r === this.r && e.g === this.g && e.b === this.b
    },
    fromArray: function(e, t)
    {
        return void 0 === t && (t = 0), this.r = e[t], this.g = e[t + 1], this.b = e[t + 2], this
    },
    toArray: function(e, t)
    {
        return void 0 === e && (e = []), void 0 === t && (t = 0), e[t] = this.r, e[t + 1] = this.g, e[t + 2] = this.b, e
    },
    toJSON: function()
    {
        return this.getHex()
    }
}), Is.NAMES = Os, Object.assign(js.prototype,
{
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        this.a = e.a, this.b = e.b, this.c = e.c, this.normal.copy(e.normal), this.color.copy(e.color), this.materialIndex = e.materialIndex;
        for (var t = 0, n = e.vertexNormals.length; t < n; t++) this.vertexNormals[t] = e.vertexNormals[t].clone();
        for (t = 0, n = e.vertexColors.length; t < n; t++) this.vertexColors[t] = e.vertexColors[t].clone();
        return this
    }
});
var Fs = 0;

function Us()
{
    Object.defineProperty(this, "id",
    {
        value: Fs++
    }), this.uuid = na.generateUUID(), this.name = "", this.type = "Material", this.fog = !0, this.blending = 1, this.side = 0, this.flatShading = !1, this.vertexTangents = !1, this.vertexColors = 0, this.opacity = 1, this.transparent = !1, this.blendSrc = 204, this.blendDst = 205, this.blendEquation = 100, this.blendSrcAlpha = null, this.blendDstAlpha = null, this.blendEquationAlpha = null, this.depthFunc = 3, this.depthTest = !0, this.depthWrite = !0, this.stencilWriteMask = 255, this.stencilFunc = 519, this.stencilRef = 0, this.stencilFuncMask = 255, this.stencilFail = 7680, this.stencilZFail = 7680, this.stencilZPass = 7680, this.stencilWrite = !1, this.clippingPlanes = null, this.clipIntersection = !1, this.clipShadows = !1, this.shadowSide = null, this.colorWrite = !0, this.precision = null, this.polygonOffset = !1, this.polygonOffsetFactor = 0, this.polygonOffsetUnits = 0, this.dithering = !1, this.alphaTest = 0, this.premultipliedAlpha = !1, this.visible = !0, this.toneMapped = !0, this.userData = {}, this.version = 0
}

function Ds(e)
{
    Us.call(this), this.type = "MeshBasicMaterial", this.color = new Is(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.setValues(e)
}
Us.prototype = Object.assign(Object.create(Qo.prototype),
{
    constructor: Us,
    isMaterial: !0,
    onBeforeCompile: function() {},
    setValues: function(e)
    {
        if (void 0 !== e)
            for (var t in e)
            {
                var n = e[t];
                if (void 0 !== n)
                    if ("shading" !== t)
                    {
                        var r = this[t];
                        void 0 !== r ? r && r.isColor ? r.set(n) : r && r.isVector3 && n && n.isVector3 ? r.copy(n) : this[t] = n : console.warn("THREE." + this.type + ": '" + t + "' is not a property of this material.")
                    }
                else console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === n;
                else console.warn("THREE.Material: '" + t + "' parameter is undefined.")
            }
    },
    toJSON: function(e)
    {
        var t = void 0 === e || "string" == typeof e;
        t && (e = {
            textures:
            {},
            images:
            {}
        });
        var n = {
            metadata:
            {
                version: 4.5,
                type: "Material",
                generator: "Material.toJSON"
            }
        };

        function r(e)
        {
            var t = [];
            for (var n in e)
            {
                var r = e[n];
                delete r.metadata, t.push(r)
            }
            return t
        }
        if (n.uuid = this.uuid, n.type = this.type, "" !== this.name && (n.name = this.name), this.color && this.color.isColor && (n.color = this.color.getHex()), void 0 !== this.roughness && (n.roughness = this.roughness), void 0 !== this.metalness && (n.metalness = this.metalness), this.sheen && this.sheen.isColor && (n.sheen = this.sheen.getHex()), this.emissive && this.emissive.isColor && (n.emissive = this.emissive.getHex()), this.emissiveIntensity && 1 !== this.emissiveIntensity && (n.emissiveIntensity = this.emissiveIntensity), this.specular && this.specular.isColor && (n.specular = this.specular.getHex()), void 0 !== this.shininess && (n.shininess = this.shininess), void 0 !== this.clearcoat && (n.clearcoat = this.clearcoat), void 0 !== this.clearcoatRoughness && (n.clearcoatRoughness = this.clearcoatRoughness), this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture && (n.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(e).uuid, n.clearcoatNormalScale = this.clearcoatNormalScale.toArray()), this.map && this.map.isTexture && (n.map = this.map.toJSON(e).uuid), this.matcap && this.matcap.isTexture && (n.matcap = this.matcap.toJSON(e).uuid), this.alphaMap && this.alphaMap.isTexture && (n.alphaMap = this.alphaMap.toJSON(e).uuid), this.lightMap && this.lightMap.isTexture && (n.lightMap = this.lightMap.toJSON(e).uuid), this.aoMap && this.aoMap.isTexture && (n.aoMap = this.aoMap.toJSON(e).uuid, n.aoMapIntensity = this.aoMapIntensity), this.bumpMap && this.bumpMap.isTexture && (n.bumpMap = this.bumpMap.toJSON(e).uuid, n.bumpScale = this.bumpScale), this.normalMap && this.normalMap.isTexture && (n.normalMap = this.normalMap.toJSON(e).uuid, n.normalMapType = this.normalMapType, n.normalScale = this.normalScale.toArray()), this.displacementMap && this.displacementMap.isTexture && (n.displacementMap = this.displacementMap.toJSON(e).uuid, n.displacementScale = this.displacementScale, n.displacementBias = this.displacementBias), this.roughnessMap && this.roughnessMap.isTexture && (n.roughnessMap = this.roughnessMap.toJSON(e).uuid), this.metalnessMap && this.metalnessMap.isTexture && (n.metalnessMap = this.metalnessMap.toJSON(e).uuid), this.emissiveMap && this.emissiveMap.isTexture && (n.emissiveMap = this.emissiveMap.toJSON(e).uuid), this.specularMap && this.specularMap.isTexture && (n.specularMap = this.specularMap.toJSON(e).uuid), this.envMap && this.envMap.isTexture && (n.envMap = this.envMap.toJSON(e).uuid, n.reflectivity = this.reflectivity, n.refractionRatio = this.refractionRatio, void 0 !== this.combine && (n.combine = this.combine), void 0 !== this.envMapIntensity && (n.envMapIntensity = this.envMapIntensity)), this.gradientMap && this.gradientMap.isTexture && (n.gradientMap = this.gradientMap.toJSON(e).uuid), void 0 !== this.size && (n.size = this.size), void 0 !== this.sizeAttenuation && (n.sizeAttenuation = this.sizeAttenuation), 1 !== this.blending && (n.blending = this.blending), !0 === this.flatShading && (n.flatShading = this.flatShading), 0 !== this.side && (n.side = this.side), 0 !== this.vertexColors && (n.vertexColors = this.vertexColors), this.opacity < 1 && (n.opacity = this.opacity), !0 === this.transparent && (n.transparent = this.transparent), n.depthFunc = this.depthFunc, n.depthTest = this.depthTest, n.depthWrite = this.depthWrite, n.stencilWrite = this.stencilWrite, n.stencilWriteMask = this.stencilWriteMask, n.stencilFunc = this.stencilFunc, n.stencilRef = this.stencilRef, n.stencilFuncMask = this.stencilFuncMask, n.stencilFail = this.stencilFail, n.stencilZFail = this.stencilZFail, n.stencilZPass = this.stencilZPass, this.rotation && 0 !== this.rotation && (n.rotation = this.rotation), !0 === this.polygonOffset && (n.polygonOffset = !0), 0 !== this.polygonOffsetFactor && (n.polygonOffsetFactor = this.polygonOffsetFactor), 0 !== this.polygonOffsetUnits && (n.polygonOffsetUnits = this.polygonOffsetUnits), this.linewidth && 1 !== this.linewidth && (n.linewidth = this.linewidth), void 0 !== this.dashSize && (n.dashSize = this.dashSize), void 0 !== this.gapSize && (n.gapSize = this.gapSize), void 0 !== this.scale && (n.scale = this.scale), !0 === this.dithering && (n.dithering = !0), this.alphaTest > 0 && (n.alphaTest = this.alphaTest), !0 === this.premultipliedAlpha && (n.premultipliedAlpha = this.premultipliedAlpha), !0 === this.wireframe && (n.wireframe = this.wireframe), this.wireframeLinewidth > 1 && (n.wireframeLinewidth = this.wireframeLinewidth), "round" !== this.wireframeLinecap && (n.wireframeLinecap = this.wireframeLinecap), "round" !== this.wireframeLinejoin && (n.wireframeLinejoin = this.wireframeLinejoin), !0 === this.morphTargets && (n.morphTargets = !0), !0 === this.morphNormals && (n.morphNormals = !0), !0 === this.skinning && (n.skinning = !0), !1 === this.visible && (n.visible = !1), !1 === this.toneMapped && (n.toneMapped = !1), "{}" !== JSON.stringify(this.userData) && (n.userData = this.userData), t)
        {
            var i = r(e.textures),
                o = r(e.images);
            i.length > 0 && (n.textures = i), o.length > 0 && (n.images = o)
        }
        return n
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        this.name = e.name, this.fog = e.fog, this.blending = e.blending, this.side = e.side, this.flatShading = e.flatShading, this.vertexTangents = e.vertexTangents, this.vertexColors = e.vertexColors, this.opacity = e.opacity, this.transparent = e.transparent, this.blendSrc = e.blendSrc, this.blendDst = e.blendDst, this.blendEquation = e.blendEquation, this.blendSrcAlpha = e.blendSrcAlpha, this.blendDstAlpha = e.blendDstAlpha, this.blendEquationAlpha = e.blendEquationAlpha, this.depthFunc = e.depthFunc, this.depthTest = e.depthTest, this.depthWrite = e.depthWrite, this.stencilWriteMask = e.stencilWriteMask, this.stencilFunc = e.stencilFunc, this.stencilRef = e.stencilRef, this.stencilFuncMask = e.stencilFuncMask, this.stencilFail = e.stencilFail, this.stencilZFail = e.stencilZFail, this.stencilZPass = e.stencilZPass, this.stencilWrite = e.stencilWrite;
        var t = e.clippingPlanes,
            n = null;
        if (null !== t)
        {
            var r = t.length;
            n = new Array(r);
            for (var i = 0; i !== r; ++i) n[i] = t[i].clone()
        }
        return this.clippingPlanes = n, this.clipIntersection = e.clipIntersection, this.clipShadows = e.clipShadows, this.shadowSide = e.shadowSide, this.colorWrite = e.colorWrite, this.precision = e.precision, this.polygonOffset = e.polygonOffset, this.polygonOffsetFactor = e.polygonOffsetFactor, this.polygonOffsetUnits = e.polygonOffsetUnits, this.dithering = e.dithering, this.alphaTest = e.alphaTest, this.premultipliedAlpha = e.premultipliedAlpha, this.visible = e.visible, this.toneMapped = e.toneMapped, this.userData = JSON.parse(JSON.stringify(e.userData)), this
    },
    dispose: function()
    {
        this.dispatchEvent(
        {
            type: "dispose"
        })
    }
}), Object.defineProperty(Us.prototype, "needsUpdate",
{
    set: function(e)
    {
        !0 === e && this.version++
    }
}), Ds.prototype = Object.create(Us.prototype), Ds.prototype.constructor = Ds, Ds.prototype.isMeshBasicMaterial = !0, Ds.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this
};
var zs = new sa;

function Hs(e, t, n)
{
    if (Array.isArray(e)) throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");
    this.name = "", this.array = e, this.itemSize = t, this.count = void 0 !== e ? e.length / t : 0, this.normalized = !0 === n, this.usage = 35044, this.updateRange = {
        offset: 0,
        count: -1
    }, this.version = 0
}

function Vs(e, t, n)
{
    Hs.call(this, new Int8Array(e), t, n)
}

function Ws(e, t, n)
{
    Hs.call(this, new Uint8Array(e), t, n)
}

function Gs(e, t, n)
{
    Hs.call(this, new Uint8ClampedArray(e), t, n)
}

function qs(e, t, n)
{
    Hs.call(this, new Int16Array(e), t, n)
}

function $s(e, t, n)
{
    Hs.call(this, new Uint16Array(e), t, n)
}

function Ks(e, t, n)
{
    Hs.call(this, new Int32Array(e), t, n)
}

function Ys(e, t, n)
{
    Hs.call(this, new Uint32Array(e), t, n)
}

function Xs(e, t, n)
{
    Hs.call(this, new Float32Array(e), t, n)
}

function Js(e, t, n)
{
    Hs.call(this, new Float64Array(e), t, n)
}

function Zs()
{
    this.vertices = [], this.normals = [], this.colors = [], this.uvs = [], this.uvs2 = [], this.groups = [], this.morphTargets = {}, this.skinWeights = [], this.skinIndices = [], this.boundingBox = null, this.boundingSphere = null, this.verticesNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.uvsNeedUpdate = !1, this.groupsNeedUpdate = !1
}

function Qs(e)
{
    if (0 === e.length) return -1 / 0;
    for (var t = e[0], n = 1, r = e.length; n < r; ++n) e[n] > t && (t = e[n]);
    return t
}
Object.defineProperty(Hs.prototype, "needsUpdate",
{
    set: function(e)
    {
        !0 === e && this.version++
    }
}), Object.assign(Hs.prototype,
{
    isBufferAttribute: !0,
    onUploadCallback: function() {},
    setUsage: function(e)
    {
        return this.usage = e, this
    },
    copy: function(e)
    {
        return this.name = e.name, this.array = new e.array.constructor(e.array), this.itemSize = e.itemSize, this.count = e.count, this.normalized = e.normalized, this.usage = e.usage, this
    },
    copyAt: function(e, t, n)
    {
        e *= this.itemSize, n *= t.itemSize;
        for (var r = 0, i = this.itemSize; r < i; r++) this.array[e + r] = t.array[n + r];
        return this
    },
    copyArray: function(e)
    {
        return this.array.set(e), this
    },
    copyColorsArray: function(e)
    {
        for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++)
        {
            var o = e[r];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined", r), o = new Is), t[n++] = o.r, t[n++] = o.g, t[n++] = o.b
        }
        return this
    },
    copyVector2sArray: function(e)
    {
        for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++)
        {
            var o = e[r];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined", r), o = new ra), t[n++] = o.x, t[n++] = o.y
        }
        return this
    },
    copyVector3sArray: function(e)
    {
        for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++)
        {
            var o = e[r];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined", r), o = new sa), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z
        }
        return this
    },
    copyVector4sArray: function(e)
    {
        for (var t = this.array, n = 0, r = 0, i = e.length; r < i; r++)
        {
            var o = e[r];
            void 0 === o && (console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined", r), o = new pa), t[n++] = o.x, t[n++] = o.y, t[n++] = o.z, t[n++] = o.w
        }
        return this
    },
    applyMatrix3: function(e)
    {
        for (var t = 0, n = this.count; t < n; t++) zs.x = this.getX(t), zs.y = this.getY(t), zs.z = this.getZ(t), zs.applyMatrix3(e), this.setXYZ(t, zs.x, zs.y, zs.z);
        return this
    },
    applyMatrix4: function(e)
    {
        for (var t = 0, n = this.count; t < n; t++) zs.x = this.getX(t), zs.y = this.getY(t), zs.z = this.getZ(t), zs.applyMatrix4(e), this.setXYZ(t, zs.x, zs.y, zs.z);
        return this
    },
    applyNormalMatrix: function(e)
    {
        for (var t = 0, n = this.count; t < n; t++) zs.x = this.getX(t), zs.y = this.getY(t), zs.z = this.getZ(t), zs.applyNormalMatrix(e), this.setXYZ(t, zs.x, zs.y, zs.z);
        return this
    },
    transformDirection: function(e)
    {
        for (var t = 0, n = this.count; t < n; t++) zs.x = this.getX(t), zs.y = this.getY(t), zs.z = this.getZ(t), zs.transformDirection(e), this.setXYZ(t, zs.x, zs.y, zs.z);
        return this
    },
    set: function(e, t)
    {
        return void 0 === t && (t = 0), this.array.set(e, t), this
    },
    getX: function(e)
    {
        return this.array[e * this.itemSize]
    },
    setX: function(e, t)
    {
        return this.array[e * this.itemSize] = t, this
    },
    getY: function(e)
    {
        return this.array[e * this.itemSize + 1]
    },
    setY: function(e, t)
    {
        return this.array[e * this.itemSize + 1] = t, this
    },
    getZ: function(e)
    {
        return this.array[e * this.itemSize + 2]
    },
    setZ: function(e, t)
    {
        return this.array[e * this.itemSize + 2] = t, this
    },
    getW: function(e)
    {
        return this.array[e * this.itemSize + 3]
    },
    setW: function(e, t)
    {
        return this.array[e * this.itemSize + 3] = t, this
    },
    setXY: function(e, t, n)
    {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this
    },
    setXYZ: function(e, t, n, r)
    {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this
    },
    setXYZW: function(e, t, n, r, i)
    {
        return e *= this.itemSize, this.array[e + 0] = t, this.array[e + 1] = n, this.array[e + 2] = r, this.array[e + 3] = i, this
    },
    onUpload: function(e)
    {
        return this.onUploadCallback = e, this
    },
    clone: function()
    {
        return new this.constructor(this.array, this.itemSize).copy(this)
    },
    toJSON: function()
    {
        return {
            itemSize: this.itemSize,
            type: this.array.constructor.name,
            array: Array.prototype.slice.call(this.array),
            normalized: this.normalized
        }
    }
}), Vs.prototype = Object.create(Hs.prototype), Vs.prototype.constructor = Vs, Ws.prototype = Object.create(Hs.prototype), Ws.prototype.constructor = Ws, Gs.prototype = Object.create(Hs.prototype), Gs.prototype.constructor = Gs, qs.prototype = Object.create(Hs.prototype), qs.prototype.constructor = qs, $s.prototype = Object.create(Hs.prototype), $s.prototype.constructor = $s, Ks.prototype = Object.create(Hs.prototype), Ks.prototype.constructor = Ks, Ys.prototype = Object.create(Hs.prototype), Ys.prototype.constructor = Ys, Xs.prototype = Object.create(Hs.prototype), Xs.prototype.constructor = Xs, Js.prototype = Object.create(Hs.prototype), Js.prototype.constructor = Js, Object.assign(Zs.prototype,
{
    computeGroups: function(e)
    {
        for (var t, n = [], r = void 0, i = e.faces, o = 0; o < i.length; o++)
        {
            var a = i[o];
            a.materialIndex !== r && (r = a.materialIndex, void 0 !== t && (t.count = 3 * o - t.start, n.push(t)), t = {
                start: 3 * o,
                materialIndex: r
            })
        }
        void 0 !== t && (t.count = 3 * o - t.start, n.push(t)), this.groups = n
    },
    fromGeometry: function(e)
    {
        var t, n = e.faces,
            r = e.vertices,
            i = e.faceVertexUvs,
            o = i[0] && i[0].length > 0,
            a = i[1] && i[1].length > 0,
            s = e.morphTargets,
            c = s.length;
        if (c > 0)
        {
            t = [];
            for (var u = 0; u < c; u++) t[u] = {
                name: s[u].name,
                data: []
            };
            this.morphTargets.position = t
        }
        var l, f = e.morphNormals,
            h = f.length;
        if (h > 0)
        {
            l = [];
            for (u = 0; u < h; u++) l[u] = {
                name: f[u].name,
                data: []
            };
            this.morphTargets.normal = l
        }
        var d = e.skinIndices,
            p = e.skinWeights,
            m = d.length === r.length,
            v = p.length === r.length;
        r.length > 0 && 0 === n.length && console.error("THREE.DirectGeometry: Faceless geometries are not supported.");
        for (u = 0; u < n.length; u++)
        {
            var g = n[u];
            this.vertices.push(r[g.a], r[g.b], r[g.c]);
            var y = g.vertexNormals;
            if (3 === y.length) this.normals.push(y[0], y[1], y[2]);
            else
            {
                var b = g.normal;
                this.normals.push(b, b, b)
            }
            var w, _ = g.vertexColors;
            if (3 === _.length) this.colors.push(_[0], _[1], _[2]);
            else
            {
                var x = g.color;
                this.colors.push(x, x, x)
            }
            if (!0 === o) void 0 !== (w = i[0][u]) ? this.uvs.push(w[0], w[1], w[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ", u), this.uvs.push(new ra, new ra, new ra));
            if (!0 === a) void 0 !== (w = i[1][u]) ? this.uvs2.push(w[0], w[1], w[2]) : (console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ", u), this.uvs2.push(new ra, new ra, new ra));
            for (var E = 0; E < c; E++)
            {
                var S = s[E].vertices;
                t[E].data.push(S[g.a], S[g.b], S[g.c])
            }
            for (E = 0; E < h; E++)
            {
                var M = f[E].vertexNormals[u];
                l[E].data.push(M.a, M.b, M.c)
            }
            m && this.skinIndices.push(d[g.a], d[g.b], d[g.c]), v && this.skinWeights.push(p[g.a], p[g.b], p[g.c])
        }
        return this.computeGroups(e), this.verticesNeedUpdate = e.verticesNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this
    }
});
var ec = 1,
    tc = new Sa,
    nc = new Ha,
    rc = new sa,
    ic = new rs,
    oc = new rs,
    ac = new sa;

function sc()
{
    Object.defineProperty(this, "id",
    {
        value: ec += 2
    }), this.uuid = na.generateUUID(), this.name = "", this.type = "BufferGeometry", this.index = null, this.attributes = {}, this.morphAttributes = {}, this.morphTargetsRelative = !1, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.drawRange = {
        start: 0,
        count: 1 / 0
    }, this.userData = {}
}
sc.prototype = Object.assign(Object.create(Qo.prototype),
{
    constructor: sc,
    isBufferGeometry: !0,
    getIndex: function()
    {
        return this.index
    },
    setIndex: function(e)
    {
        Array.isArray(e) ? this.index = new(Qs(e) > 65535 ? Ys : $s)(e, 1) : this.index = e
    },
    getAttribute: function(e)
    {
        return this.attributes[e]
    },
    setAttribute: function(e, t)
    {
        return this.attributes[e] = t, this
    },
    deleteAttribute: function(e)
    {
        return delete this.attributes[e], this
    },
    addGroup: function(e, t, n)
    {
        this.groups.push(
        {
            start: e,
            count: t,
            materialIndex: void 0 !== n ? n : 0
        })
    },
    clearGroups: function()
    {
        this.groups = []
    },
    setDrawRange: function(e, t)
    {
        this.drawRange.start = e, this.drawRange.count = t
    },
    applyMatrix: function(e)
    {
        var t = this.attributes.position;
        void 0 !== t && (t.applyMatrix4(e), t.needsUpdate = !0);
        var n = this.attributes.normal;
        if (void 0 !== n)
        {
            var r = (new la).getNormalMatrix(e);
            n.applyNormalMatrix(r), n.needsUpdate = !0
        }
        var i = this.attributes.tangent;
        return void 0 !== i && (i.transformDirection(e), i.needsUpdate = !0), null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this
    },
    rotateX: function(e)
    {
        return tc.makeRotationX(e), this.applyMatrix(tc), this
    },
    rotateY: function(e)
    {
        return tc.makeRotationY(e), this.applyMatrix(tc), this
    },
    rotateZ: function(e)
    {
        return tc.makeRotationZ(e), this.applyMatrix(tc), this
    },
    translate: function(e, t, n)
    {
        return tc.makeTranslation(e, t, n), this.applyMatrix(tc), this
    },
    scale: function(e, t, n)
    {
        return tc.makeScale(e, t, n), this.applyMatrix(tc), this
    },
    lookAt: function(e)
    {
        return nc.lookAt(e), nc.updateMatrix(), this.applyMatrix(nc.matrix), this
    },
    center: function()
    {
        return this.computeBoundingBox(), this.boundingBox.getCenter(rc).negate(), this.translate(rc.x, rc.y, rc.z), this
    },
    setFromObject: function(e)
    {
        var t = e.geometry;
        if (e.isPoints || e.isLine)
        {
            var n = new Xs(3 * t.vertices.length, 3),
                r = new Xs(3 * t.colors.length, 3);
            if (this.setAttribute("position", n.copyVector3sArray(t.vertices)), this.setAttribute("color", r.copyColorsArray(t.colors)), t.lineDistances && t.lineDistances.length === t.vertices.length)
            {
                var i = new Xs(t.lineDistances.length, 1);
                this.setAttribute("lineDistance", i.copyArray(t.lineDistances))
            }
            null !== t.boundingSphere && (this.boundingSphere = t.boundingSphere.clone()), null !== t.boundingBox && (this.boundingBox = t.boundingBox.clone())
        }
        else e.isMesh && t && t.isGeometry && this.fromGeometry(t);
        return this
    },
    setFromPoints: function(e)
    {
        for (var t = [], n = 0, r = e.length; n < r; n++)
        {
            var i = e[n];
            t.push(i.x, i.y, i.z || 0)
        }
        return this.setAttribute("position", new Xs(t, 3)), this
    },
    updateFromObject: function(e)
    {
        var t, n = e.geometry;
        if (e.isMesh)
        {
            var r = n.__directGeometry;
            if (!0 === n.elementsNeedUpdate && (r = void 0, n.elementsNeedUpdate = !1), void 0 === r) return this.fromGeometry(n);
            r.verticesNeedUpdate = n.verticesNeedUpdate, r.normalsNeedUpdate = n.normalsNeedUpdate, r.colorsNeedUpdate = n.colorsNeedUpdate, r.uvsNeedUpdate = n.uvsNeedUpdate, r.groupsNeedUpdate = n.groupsNeedUpdate, n.verticesNeedUpdate = !1, n.normalsNeedUpdate = !1, n.colorsNeedUpdate = !1, n.uvsNeedUpdate = !1, n.groupsNeedUpdate = !1, n = r
        }
        return !0 === n.verticesNeedUpdate && (void 0 !== (t = this.attributes.position) && (t.copyVector3sArray(n.vertices), t.needsUpdate = !0), n.verticesNeedUpdate = !1), !0 === n.normalsNeedUpdate && (void 0 !== (t = this.attributes.normal) && (t.copyVector3sArray(n.normals), t.needsUpdate = !0), n.normalsNeedUpdate = !1), !0 === n.colorsNeedUpdate && (void 0 !== (t = this.attributes.color) && (t.copyColorsArray(n.colors), t.needsUpdate = !0), n.colorsNeedUpdate = !1), n.uvsNeedUpdate && (void 0 !== (t = this.attributes.uv) && (t.copyVector2sArray(n.uvs), t.needsUpdate = !0), n.uvsNeedUpdate = !1), n.lineDistancesNeedUpdate && (void 0 !== (t = this.attributes.lineDistance) && (t.copyArray(n.lineDistances), t.needsUpdate = !0), n.lineDistancesNeedUpdate = !1), n.groupsNeedUpdate && (n.computeGroups(e.geometry), this.groups = n.groups, n.groupsNeedUpdate = !1), this
    },
    fromGeometry: function(e)
    {
        return e.__directGeometry = (new Zs).fromGeometry(e), this.fromDirectGeometry(e.__directGeometry)
    },
    fromDirectGeometry: function(e)
    {
        var t = new Float32Array(3 * e.vertices.length);
        if (this.setAttribute("position", new Hs(t, 3).copyVector3sArray(e.vertices)), e.normals.length > 0)
        {
            var n = new Float32Array(3 * e.normals.length);
            this.setAttribute("normal", new Hs(n, 3).copyVector3sArray(e.normals))
        }
        if (e.colors.length > 0)
        {
            var r = new Float32Array(3 * e.colors.length);
            this.setAttribute("color", new Hs(r, 3).copyColorsArray(e.colors))
        }
        if (e.uvs.length > 0)
        {
            var i = new Float32Array(2 * e.uvs.length);
            this.setAttribute("uv", new Hs(i, 2).copyVector2sArray(e.uvs))
        }
        if (e.uvs2.length > 0)
        {
            var o = new Float32Array(2 * e.uvs2.length);
            this.setAttribute("uv2", new Hs(o, 2).copyVector2sArray(e.uvs2))
        }
        for (var a in this.groups = e.groups, e.morphTargets)
        {
            for (var s = [], c = e.morphTargets[a], u = 0, l = c.length; u < l; u++)
            {
                var f = c[u],
                    h = new Xs(3 * f.data.length, 3);
                h.name = f.name, s.push(h.copyVector3sArray(f.data))
            }
            this.morphAttributes[a] = s
        }
        if (e.skinIndices.length > 0)
        {
            var d = new Xs(4 * e.skinIndices.length, 4);
            this.setAttribute("skinIndex", d.copyVector4sArray(e.skinIndices))
        }
        if (e.skinWeights.length > 0)
        {
            var p = new Xs(4 * e.skinWeights.length, 4);
            this.setAttribute("skinWeight", p.copyVector4sArray(e.skinWeights))
        }
        return null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), this
    },
    computeBoundingBox: function()
    {
        null === this.boundingBox && (this.boundingBox = new rs);
        var e = this.attributes.position,
            t = this.morphAttributes.position;
        if (void 0 !== e)
        {
            if (this.boundingBox.setFromBufferAttribute(e), t)
                for (var n = 0, r = t.length; n < r; n++)
                {
                    var i = t[n];
                    ic.setFromBufferAttribute(i), this.morphTargetsRelative ? (ac.addVectors(this.boundingBox.min, ic.min), this.boundingBox.expandByPoint(ac), ac.addVectors(this.boundingBox.max, ic.max), this.boundingBox.expandByPoint(ac)) : (this.boundingBox.expandByPoint(ic.min), this.boundingBox.expandByPoint(ic.max))
                }
        }
        else this.boundingBox.makeEmpty();
        (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) && console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this)
    },
    computeBoundingSphere: function()
    {
        null === this.boundingSphere && (this.boundingSphere = new as);
        var e = this.attributes.position,
            t = this.morphAttributes.position;
        if (e)
        {
            var n = this.boundingSphere.center;
            if (ic.setFromBufferAttribute(e), t)
                for (var r = 0, i = t.length; r < i; r++)
                {
                    var o = t[r];
                    oc.setFromBufferAttribute(o), this.morphTargetsRelative ? (ac.addVectors(ic.min, oc.min), ic.expandByPoint(ac), ac.addVectors(ic.max, oc.max), ic.expandByPoint(ac)) : (ic.expandByPoint(oc.min), ic.expandByPoint(oc.max))
                }
            ic.getCenter(n);
            var a = 0;
            for (r = 0, i = e.count; r < i; r++) ac.fromBufferAttribute(e, r), a = Math.max(a, n.distanceToSquared(ac));
            if (t)
                for (r = 0, i = t.length; r < i; r++)
                {
                    o = t[r];
                    for (var s = this.morphTargetsRelative, c = 0, u = o.count; c < u; c++) ac.fromBufferAttribute(o, c), s && (rc.fromBufferAttribute(e, c), ac.add(rc)), a = Math.max(a, n.distanceToSquared(ac))
                }
            this.boundingSphere.radius = Math.sqrt(a), isNaN(this.boundingSphere.radius) && console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this)
        }
    },
    computeFaceNormals: function() {},
    computeVertexNormals: function()
    {
        var e = this.index,
            t = this.attributes;
        if (t.position)
        {
            var n = t.position.array;
            if (void 0 === t.normal) this.setAttribute("normal", new Hs(new Float32Array(n.length), 3));
            else
                for (var r = t.normal.array, i = 0, o = r.length; i < o; i++) r[i] = 0;
            var a, s, c, u = t.normal.array,
                l = new sa,
                f = new sa,
                h = new sa,
                d = new sa,
                p = new sa;
            if (e)
            {
                var m = e.array;
                for (i = 0, o = e.count; i < o; i += 3) a = 3 * m[i + 0], s = 3 * m[i + 1], c = 3 * m[i + 2], l.fromArray(n, a), f.fromArray(n, s), h.fromArray(n, c), d.subVectors(h, f), p.subVectors(l, f), d.cross(p), u[a] += d.x, u[a + 1] += d.y, u[a + 2] += d.z, u[s] += d.x, u[s + 1] += d.y, u[s + 2] += d.z, u[c] += d.x, u[c + 1] += d.y, u[c + 2] += d.z
            }
            else
                for (i = 0, o = n.length; i < o; i += 9) l.fromArray(n, i), f.fromArray(n, i + 3), h.fromArray(n, i + 6), d.subVectors(h, f), p.subVectors(l, f), d.cross(p), u[i] = d.x, u[i + 1] = d.y, u[i + 2] = d.z, u[i + 3] = d.x, u[i + 4] = d.y, u[i + 5] = d.z, u[i + 6] = d.x, u[i + 7] = d.y, u[i + 8] = d.z;
            this.normalizeNormals(), t.normal.needsUpdate = !0
        }
    },
    merge: function(e, t)
    {
        if (e && e.isBufferGeometry)
        {
            void 0 === t && (t = 0, console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));
            var n = this.attributes;
            for (var r in n)
                if (void 0 !== e.attributes[r])
                    for (var i = n[r].array, o = e.attributes[r], a = o.array, s = o.itemSize * t, c = Math.min(a.length, i.length - s), u = 0, l = s; u < c; u++, l++) i[l] = a[u];
            return this
        }
        console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.", e)
    },
    normalizeNormals: function()
    {
        for (var e = this.attributes.normal, t = 0, n = e.count; t < n; t++) ac.x = e.getX(t), ac.y = e.getY(t), ac.z = e.getZ(t), ac.normalize(), e.setXYZ(t, ac.x, ac.y, ac.z)
    },
    toNonIndexed: function()
    {
        function e(e, t)
        {
            for (var n = e.array, r = e.itemSize, i = new n.constructor(t.length * r), o = 0, a = 0, s = 0, c = t.length; s < c; s++)
            {
                o = t[s] * r;
                for (var u = 0; u < r; u++) i[a++] = n[o++]
            }
            return new Hs(i, r)
        }
        if (null === this.index) return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."), this;
        var t = new sc,
            n = this.index.array,
            r = this.attributes;
        for (var i in r)
        {
            var o = e(r[i], n);
            t.setAttribute(i, o)
        }
        var a = this.morphAttributes;
        for (i in a)
        {
            for (var s = [], c = a[i], u = 0, l = c.length; u < l; u++)
            {
                o = e(c[u], n);
                s.push(o)
            }
            t.morphAttributes[i] = s
        }
        t.morphTargetsRelative = this.morphTargetsRelative;
        for (var f = this.groups, h = (u = 0, f.length); u < h; u++)
        {
            var d = f[u];
            t.addGroup(d.start, d.count, d.materialIndex)
        }
        return t
    },
    toJSON: function()
    {
        var e = {
            metadata:
            {
                version: 4.5,
                type: "BufferGeometry",
                generator: "BufferGeometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), Object.keys(this.userData).length > 0 && (e.userData = this.userData), void 0 !== this.parameters)
        {
            var t = this.parameters;
            for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
            return e
        }
        e.data = {
            attributes:
            {}
        };
        var r = this.index;
        null !== r && (e.data.index = {
            type: r.array.constructor.name,
            array: Array.prototype.slice.call(r.array)
        });
        var i = this.attributes;
        for (var n in i)
        {
            var o = (h = i[n]).toJSON();
            "" !== h.name && (o.name = h.name), e.data.attributes[n] = o
        }
        var a = {},
            s = !1;
        for (var n in this.morphAttributes)
        {
            for (var c = this.morphAttributes[n], u = [], l = 0, f = c.length; l < f; l++)
            {
                var h;
                o = (h = c[l]).toJSON();
                "" !== h.name && (o.name = h.name), u.push(o)
            }
            u.length > 0 && (a[n] = u, s = !0)
        }
        s && (e.data.morphAttributes = a, e.data.morphTargetsRelative = this.morphTargetsRelative);
        var d = this.groups;
        d.length > 0 && (e.data.groups = JSON.parse(JSON.stringify(d)));
        var p = this.boundingSphere;
        return null !== p && (e.data.boundingSphere = {
            center: p.center.toArray(),
            radius: p.radius
        }), e
    },
    clone: function()
    {
        return (new sc).copy(this)
    },
    copy: function(e)
    {
        var t, n, r;
        this.index = null, this.attributes = {}, this.morphAttributes = {}, this.groups = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
        var i = e.index;
        null !== i && this.setIndex(i.clone());
        var o = e.attributes;
        for (t in o)
        {
            var a = o[t];
            this.setAttribute(t, a.clone())
        }
        var s = e.morphAttributes;
        for (t in s)
        {
            var c = [],
                u = s[t];
            for (n = 0, r = u.length; n < r; n++) c.push(u[n].clone());
            this.morphAttributes[t] = c
        }
        this.morphTargetsRelative = e.morphTargetsRelative;
        var l = e.groups;
        for (n = 0, r = l.length; n < r; n++)
        {
            var f = l[n];
            this.addGroup(f.start, f.count, f.materialIndex)
        }
        var h = e.boundingBox;
        null !== h && (this.boundingBox = h.clone());
        var d = e.boundingSphere;
        return null !== d && (this.boundingSphere = d.clone()), this.drawRange.start = e.drawRange.start, this.drawRange.count = e.drawRange.count, this.userData = e.userData, this
    },
    dispose: function()
    {
        this.dispatchEvent(
        {
            type: "dispose"
        })
    }
});
var cc = new Sa,
    uc = new ps,
    lc = new as,
    fc = new sa,
    hc = new sa,
    dc = new sa,
    pc = new sa,
    mc = new sa,
    vc = new sa,
    gc = new sa,
    yc = new sa,
    bc = new sa,
    wc = new ra,
    _c = new ra,
    xc = new ra,
    Ec = new sa,
    Sc = new sa;

function Mc(e, t)
{
    Ha.call(this), this.type = "Mesh", this.geometry = void 0 !== e ? e : new sc, this.material = void 0 !== t ? t : new Ds(
    {
        color: 16777215 * Math.random()
    }), this.updateMorphTargets()
}

function Tc(e, t, n, r, i, o, a, s)
{
    if (null === (1 === t.side ? r.intersectTriangle(a, o, i, !0, s) : r.intersectTriangle(i, o, a, 2 !== t.side, s))) return null;
    Sc.copy(s), Sc.applyMatrix4(e.matrixWorld);
    var c = n.ray.origin.distanceTo(Sc);
    return c < n.near || c > n.far ? null :
    {
        distance: c,
        point: Sc.clone(),
        object: e
    }
}

function kc(e, t, n, r, i, o, a, s, c, u, l, f)
{
    fc.fromBufferAttribute(i, u), hc.fromBufferAttribute(i, l), dc.fromBufferAttribute(i, f);
    var h = e.morphTargetInfluences;
    if (t.morphTargets && o && h)
    {
        gc.set(0, 0, 0), yc.set(0, 0, 0), bc.set(0, 0, 0);
        for (var d = 0, p = o.length; d < p; d++)
        {
            var m = h[d],
                v = o[d];
            0 !== m && (pc.fromBufferAttribute(v, u), mc.fromBufferAttribute(v, l), vc.fromBufferAttribute(v, f), a ? (gc.addScaledVector(pc, m), yc.addScaledVector(mc, m), bc.addScaledVector(vc, m)) : (gc.addScaledVector(pc.sub(fc), m), yc.addScaledVector(mc.sub(hc), m), bc.addScaledVector(vc.sub(dc), m)))
        }
        fc.add(gc), hc.add(yc), dc.add(bc)
    }
    var g = Tc(e, t, n, r, fc, hc, dc, Ec);
    if (g)
    {
        s && (wc.fromBufferAttribute(s, u), _c.fromBufferAttribute(s, l), xc.fromBufferAttribute(s, f), g.uv = Cs.getUV(Ec, fc, hc, dc, wc, _c, xc, new ra)), c && (wc.fromBufferAttribute(c, u), _c.fromBufferAttribute(c, l), xc.fromBufferAttribute(c, f), g.uv2 = Cs.getUV(Ec, fc, hc, dc, wc, _c, xc, new ra));
        var y = new js(u, l, f);
        Cs.getNormal(fc, hc, dc, y.normal), g.face = y
    }
    return g
}
Mc.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: Mc,
    isMesh: !0,
    copy: function(e)
    {
        return Ha.prototype.copy.call(this, e), void 0 !== e.morphTargetInfluences && (this.morphTargetInfluences = e.morphTargetInfluences.slice()), void 0 !== e.morphTargetDictionary && (this.morphTargetDictionary = Object.assign(
        {}, e.morphTargetDictionary)), this
    },
    updateMorphTargets: function()
    {
        var e, t, n, r = this.geometry;
        if (r.isBufferGeometry)
        {
            var i = r.morphAttributes,
                o = Object.keys(i);
            if (o.length > 0)
            {
                var a = i[o[0]];
                if (void 0 !== a)
                    for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = a.length; e < t; e++) n = a[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e
            }
        }
        else
        {
            var s = r.morphTargets;
            void 0 !== s && s.length > 0 && console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")
        }
    },
    raycast: function(e, t)
    {
        var n, r = this.geometry,
            i = this.material,
            o = this.matrixWorld;
        if (void 0 !== i && (null === r.boundingSphere && r.computeBoundingSphere(), lc.copy(r.boundingSphere), lc.applyMatrix4(o), !1 !== e.ray.intersectsSphere(lc) && (cc.getInverse(o), uc.copy(e.ray).applyMatrix4(cc), null === r.boundingBox || !1 !== uc.intersectsBox(r.boundingBox))))
            if (r.isBufferGeometry)
            {
                var a, s, c, u, l, f, h, d, p, m = r.index,
                    v = r.attributes.position,
                    g = r.morphAttributes.position,
                    y = r.morphTargetsRelative,
                    b = r.attributes.uv,
                    w = r.attributes.uv2,
                    _ = r.groups,
                    x = r.drawRange;
                if (null !== m)
                    if (Array.isArray(i))
                        for (u = 0, f = _.length; u < f; u++)
                            for (p = i[(d = _[u]).materialIndex], l = Math.max(d.start, x.start), h = Math.min(d.start + d.count, x.start + x.count); l < h; l += 3) a = m.getX(l), s = m.getX(l + 1), c = m.getX(l + 2), (n = kc(this, p, e, uc, v, g, y, b, w, a, s, c)) && (n.faceIndex = Math.floor(l / 3), n.face.materialIndex = d.materialIndex, t.push(n));
                    else
                        for (u = Math.max(0, x.start), f = Math.min(m.count, x.start + x.count); u < f; u += 3) a = m.getX(u), s = m.getX(u + 1), c = m.getX(u + 2), (n = kc(this, i, e, uc, v, g, y, b, w, a, s, c)) && (n.faceIndex = Math.floor(u / 3), t.push(n));
                else if (void 0 !== v)
                    if (Array.isArray(i))
                        for (u = 0, f = _.length; u < f; u++)
                            for (p = i[(d = _[u]).materialIndex], l = Math.max(d.start, x.start), h = Math.min(d.start + d.count, x.start + x.count); l < h; l += 3)(n = kc(this, p, e, uc, v, g, y, b, w, a = l, s = l + 1, c = l + 2)) && (n.faceIndex = Math.floor(l / 3), n.face.materialIndex = d.materialIndex, t.push(n));
                    else
                        for (u = Math.max(0, x.start), f = Math.min(v.count, x.start + x.count); u < f; u += 3)(n = kc(this, i, e, uc, v, g, y, b, w, a = u, s = u + 1, c = u + 2)) && (n.faceIndex = Math.floor(u / 3), t.push(n))
            }
        else if (r.isGeometry)
        {
            var E, S, M, T, k = Array.isArray(i),
                A = r.vertices,
                C = r.faces,
                O = r.faceVertexUvs[0];
            O.length > 0 && (T = O);
            for (var P = 0, R = C.length; P < R; P++)
            {
                var I = C[P],
                    N = k ? i[I.materialIndex] : i;
                if (void 0 !== N && (E = A[I.a], S = A[I.b], M = A[I.c], n = Tc(this, N, e, uc, E, S, M, Ec)))
                {
                    if (T && T[P])
                    {
                        var L = T[P];
                        wc.copy(L[0]), _c.copy(L[1]), xc.copy(L[2]), n.uv = Cs.getUV(Ec, E, S, M, wc, _c, xc, new ra)
                    }
                    n.face = I, n.faceIndex = P, t.push(n)
                }
            }
        }
    },
    clone: function()
    {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
});
var Ac = 0,
    Cc = new Sa,
    Oc = new Ha,
    Pc = new sa;

function Rc()
{
    Object.defineProperty(this, "id",
    {
        value: Ac += 2
    }), this.uuid = na.generateUUID(), this.name = "", this.type = "Geometry", this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
        []
    ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.elementsNeedUpdate = !1, this.verticesNeedUpdate = !1, this.uvsNeedUpdate = !1, this.normalsNeedUpdate = !1, this.colorsNeedUpdate = !1, this.lineDistancesNeedUpdate = !1, this.groupsNeedUpdate = !1
}
Rc.prototype = Object.assign(Object.create(Qo.prototype),
{
    constructor: Rc,
    isGeometry: !0,
    applyMatrix: function(e)
    {
        for (var t = (new la).getNormalMatrix(e), n = 0, r = this.vertices.length; n < r; n++)
        {
            this.vertices[n].applyMatrix4(e)
        }
        for (n = 0, r = this.faces.length; n < r; n++)
        {
            var i = this.faces[n];
            i.normal.applyMatrix3(t).normalize();
            for (var o = 0, a = i.vertexNormals.length; o < a; o++) i.vertexNormals[o].applyMatrix3(t).normalize()
        }
        return null !== this.boundingBox && this.computeBoundingBox(), null !== this.boundingSphere && this.computeBoundingSphere(), this.verticesNeedUpdate = !0, this.normalsNeedUpdate = !0, this
    },
    rotateX: function(e)
    {
        return Cc.makeRotationX(e), this.applyMatrix(Cc), this
    },
    rotateY: function(e)
    {
        return Cc.makeRotationY(e), this.applyMatrix(Cc), this
    },
    rotateZ: function(e)
    {
        return Cc.makeRotationZ(e), this.applyMatrix(Cc), this
    },
    translate: function(e, t, n)
    {
        return Cc.makeTranslation(e, t, n), this.applyMatrix(Cc), this
    },
    scale: function(e, t, n)
    {
        return Cc.makeScale(e, t, n), this.applyMatrix(Cc), this
    },
    lookAt: function(e)
    {
        return Oc.lookAt(e), Oc.updateMatrix(), this.applyMatrix(Oc.matrix), this
    },
    fromBufferGeometry: function(e)
    {
        var t = this,
            n = null !== e.index ? e.index.array : void 0,
            r = e.attributes;
        if (void 0 === r.position) return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."), this;
        var i = r.position.array,
            o = void 0 !== r.normal ? r.normal.array : void 0,
            a = void 0 !== r.color ? r.color.array : void 0,
            s = void 0 !== r.uv ? r.uv.array : void 0,
            c = void 0 !== r.uv2 ? r.uv2.array : void 0;
        void 0 !== c && (this.faceVertexUvs[1] = []);
        for (var u = 0; u < i.length; u += 3) t.vertices.push((new sa).fromArray(i, u)), void 0 !== a && t.colors.push((new Is).fromArray(a, u));

        function l(e, n, r, i)
        {
            var u = void 0 === a ? [] : [t.colors[e].clone(), t.colors[n].clone(), t.colors[r].clone()],
                l = new js(e, n, r, void 0 === o ? [] : [(new sa).fromArray(o, 3 * e), (new sa).fromArray(o, 3 * n), (new sa).fromArray(o, 3 * r)], u, i);
            t.faces.push(l), void 0 !== s && t.faceVertexUvs[0].push([(new ra).fromArray(s, 2 * e), (new ra).fromArray(s, 2 * n), (new ra).fromArray(s, 2 * r)]), void 0 !== c && t.faceVertexUvs[1].push([(new ra).fromArray(c, 2 * e), (new ra).fromArray(c, 2 * n), (new ra).fromArray(c, 2 * r)])
        }
        var f = e.groups;
        if (f.length > 0)
            for (u = 0; u < f.length; u++)
                for (var h = f[u], d = h.start, p = d, m = d + h.count; p < m; p += 3) void 0 !== n ? l(n[p], n[p + 1], n[p + 2], h.materialIndex) : l(p, p + 1, p + 2, h.materialIndex);
        else if (void 0 !== n)
            for (u = 0; u < n.length; u += 3) l(n[u], n[u + 1], n[u + 2]);
        else
            for (u = 0; u < i.length / 3; u += 3) l(u, u + 1, u + 2);
        return this.computeFaceNormals(), null !== e.boundingBox && (this.boundingBox = e.boundingBox.clone()), null !== e.boundingSphere && (this.boundingSphere = e.boundingSphere.clone()), this
    },
    center: function()
    {
        return this.computeBoundingBox(), this.boundingBox.getCenter(Pc).negate(), this.translate(Pc.x, Pc.y, Pc.z), this
    },
    normalize: function()
    {
        this.computeBoundingSphere();
        var e = this.boundingSphere.center,
            t = this.boundingSphere.radius,
            n = 0 === t ? 1 : 1 / t,
            r = new Sa;
        return r.set(n, 0, 0, -n * e.x, 0, n, 0, -n * e.y, 0, 0, n, -n * e.z, 0, 0, 0, 1), this.applyMatrix(r), this
    },
    computeFaceNormals: function()
    {
        for (var e = new sa, t = new sa, n = 0, r = this.faces.length; n < r; n++)
        {
            var i = this.faces[n],
                o = this.vertices[i.a],
                a = this.vertices[i.b],
                s = this.vertices[i.c];
            e.subVectors(s, a), t.subVectors(o, a), e.cross(t), e.normalize(), i.normal.copy(e)
        }
    },
    computeVertexNormals: function(e)
    {
        var t, n, r, i, o, a;
        for (void 0 === e && (e = !0), a = new Array(this.vertices.length), t = 0, n = this.vertices.length; t < n; t++) a[t] = new sa;
        if (e)
        {
            var s, c, u, l = new sa,
                f = new sa;
            for (r = 0, i = this.faces.length; r < i; r++) o = this.faces[r], s = this.vertices[o.a], c = this.vertices[o.b], u = this.vertices[o.c], l.subVectors(u, c), f.subVectors(s, c), l.cross(f), a[o.a].add(l), a[o.b].add(l), a[o.c].add(l)
        }
        else
            for (this.computeFaceNormals(), r = 0, i = this.faces.length; r < i; r++) a[(o = this.faces[r]).a].add(o.normal), a[o.b].add(o.normal), a[o.c].add(o.normal);
        for (t = 0, n = this.vertices.length; t < n; t++) a[t].normalize();
        for (r = 0, i = this.faces.length; r < i; r++)
        {
            var h = (o = this.faces[r]).vertexNormals;
            3 === h.length ? (h[0].copy(a[o.a]), h[1].copy(a[o.b]), h[2].copy(a[o.c])) : (h[0] = a[o.a].clone(), h[1] = a[o.b].clone(), h[2] = a[o.c].clone())
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0)
    },
    computeFlatVertexNormals: function()
    {
        var e, t, n;
        for (this.computeFaceNormals(), e = 0, t = this.faces.length; e < t; e++)
        {
            var r = (n = this.faces[e]).vertexNormals;
            3 === r.length ? (r[0].copy(n.normal), r[1].copy(n.normal), r[2].copy(n.normal)) : (r[0] = n.normal.clone(), r[1] = n.normal.clone(), r[2] = n.normal.clone())
        }
        this.faces.length > 0 && (this.normalsNeedUpdate = !0)
    },
    computeMorphNormals: function()
    {
        var e, t, n, r, i;
        for (n = 0, r = this.faces.length; n < r; n++)
            for ((i = this.faces[n]).__originalFaceNormal ? i.__originalFaceNormal.copy(i.normal) : i.__originalFaceNormal = i.normal.clone(), i.__originalVertexNormals || (i.__originalVertexNormals = []), e = 0, t = i.vertexNormals.length; e < t; e++) i.__originalVertexNormals[e] ? i.__originalVertexNormals[e].copy(i.vertexNormals[e]) : i.__originalVertexNormals[e] = i.vertexNormals[e].clone();
        var o = new Rc;
        for (o.faces = this.faces, e = 0, t = this.morphTargets.length; e < t; e++)
        {
            if (!this.morphNormals[e])
            {
                this.morphNormals[e] = {}, this.morphNormals[e].faceNormals = [], this.morphNormals[e].vertexNormals = [];
                var a = this.morphNormals[e].faceNormals,
                    s = this.morphNormals[e].vertexNormals;
                for (n = 0, r = this.faces.length; n < r; n++) c = new sa, u = {
                    a: new sa,
                    b: new sa,
                    c: new sa
                }, a.push(c), s.push(u)
            }
            var c, u, l = this.morphNormals[e];
            for (o.vertices = this.morphTargets[e].vertices, o.computeFaceNormals(), o.computeVertexNormals(), n = 0, r = this.faces.length; n < r; n++) i = this.faces[n], c = l.faceNormals[n], u = l.vertexNormals[n], c.copy(i.normal), u.a.copy(i.vertexNormals[0]), u.b.copy(i.vertexNormals[1]), u.c.copy(i.vertexNormals[2])
        }
        for (n = 0, r = this.faces.length; n < r; n++)(i = this.faces[n]).normal = i.__originalFaceNormal, i.vertexNormals = i.__originalVertexNormals
    },
    computeBoundingBox: function()
    {
        null === this.boundingBox && (this.boundingBox = new rs), this.boundingBox.setFromPoints(this.vertices)
    },
    computeBoundingSphere: function()
    {
        null === this.boundingSphere && (this.boundingSphere = new as), this.boundingSphere.setFromPoints(this.vertices)
    },
    merge: function(e, t, n)
    {
        if (e && e.isGeometry)
        {
            var r, i = this.vertices.length,
                o = this.vertices,
                a = e.vertices,
                s = this.faces,
                c = e.faces,
                u = this.colors,
                l = e.colors;
            void 0 === n && (n = 0), void 0 !== t && (r = (new la).getNormalMatrix(t));
            for (var f = 0, h = a.length; f < h; f++)
            {
                var d = a[f].clone();
                void 0 !== t && d.applyMatrix4(t), o.push(d)
            }
            for (f = 0, h = l.length; f < h; f++) u.push(l[f].clone());
            for (f = 0, h = c.length; f < h; f++)
            {
                var p, m, v, g = c[f],
                    y = g.vertexNormals,
                    b = g.vertexColors;
                (p = new js(g.a + i, g.b + i, g.c + i)).normal.copy(g.normal), void 0 !== r && p.normal.applyMatrix3(r).normalize();
                for (var w = 0, _ = y.length; w < _; w++) m = y[w].clone(), void 0 !== r && m.applyMatrix3(r).normalize(), p.vertexNormals.push(m);
                p.color.copy(g.color);
                for (w = 0, _ = b.length; w < _; w++) v = b[w], p.vertexColors.push(v.clone());
                p.materialIndex = g.materialIndex + n, s.push(p)
            }
            for (f = 0, h = e.faceVertexUvs.length; f < h; f++)
            {
                var x = e.faceVertexUvs[f];
                void 0 === this.faceVertexUvs[f] && (this.faceVertexUvs[f] = []);
                for (w = 0, _ = x.length; w < _; w++)
                {
                    for (var E = x[w], S = [], M = 0, T = E.length; M < T; M++) S.push(E[M].clone());
                    this.faceVertexUvs[f].push(S)
                }
            }
        }
        else console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.", e)
    },
    mergeMesh: function(e)
    {
        e && e.isMesh ? (e.matrixAutoUpdate && e.updateMatrix(), this.merge(e.geometry, e.matrix)) : console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.", e)
    },
    mergeVertices: function()
    {
        var e, t, n, r, i, o, a, s, c = {},
            u = [],
            l = [],
            f = Math.pow(10, 4);
        for (n = 0, r = this.vertices.length; n < r; n++) e = this.vertices[n], void 0 === c[t = Math.round(e.x * f) + "_" + Math.round(e.y * f) + "_" + Math.round(e.z * f)] ? (c[t] = n, u.push(this.vertices[n]), l[n] = u.length - 1) : l[n] = l[c[t]];
        var h = [];
        for (n = 0, r = this.faces.length; n < r; n++)
        {
            (i = this.faces[n]).a = l[i.a], i.b = l[i.b], i.c = l[i.c], o = [i.a, i.b, i.c];
            for (var d = 0; d < 3; d++)
                if (o[d] === o[(d + 1) % 3])
                {
                    h.push(n);
                    break
                }
        }
        for (n = h.length - 1; n >= 0; n--)
        {
            var p = h[n];
            for (this.faces.splice(p, 1), a = 0, s = this.faceVertexUvs.length; a < s; a++) this.faceVertexUvs[a].splice(p, 1)
        }
        var m = this.vertices.length - u.length;
        return this.vertices = u, m
    },
    setFromPoints: function(e)
    {
        this.vertices = [];
        for (var t = 0, n = e.length; t < n; t++)
        {
            var r = e[t];
            this.vertices.push(new sa(r.x, r.y, r.z || 0))
        }
        return this
    },
    sortFacesByMaterialIndex: function()
    {
        for (var e = this.faces, t = e.length, n = 0; n < t; n++) e[n]._id = n;
        e.sort((function(e, t)
        {
            return e.materialIndex - t.materialIndex
        }));
        var r, i, o = this.faceVertexUvs[0],
            a = this.faceVertexUvs[1];
        o && o.length === t && (r = []), a && a.length === t && (i = []);
        for (n = 0; n < t; n++)
        {
            var s = e[n]._id;
            r && r.push(o[s]), i && i.push(a[s])
        }
        r && (this.faceVertexUvs[0] = r), i && (this.faceVertexUvs[1] = i)
    },
    toJSON: function()
    {
        var e = {
            metadata:
            {
                version: 4.5,
                type: "Geometry",
                generator: "Geometry.toJSON"
            }
        };
        if (e.uuid = this.uuid, e.type = this.type, "" !== this.name && (e.name = this.name), void 0 !== this.parameters)
        {
            var t = this.parameters;
            for (var n in t) void 0 !== t[n] && (e[n] = t[n]);
            return e
        }
        for (var r = [], i = 0; i < this.vertices.length; i++)
        {
            var o = this.vertices[i];
            r.push(o.x, o.y, o.z)
        }
        var a = [],
            s = [],
            c = {},
            u = [],
            l = {},
            f = [],
            h = {};
        for (i = 0; i < this.faces.length; i++)
        {
            var d = this.faces[i],
                p = void 0 !== this.faceVertexUvs[0][i],
                m = d.normal.length() > 0,
                v = d.vertexNormals.length > 0,
                g = 1 !== d.color.r || 1 !== d.color.g || 1 !== d.color.b,
                y = d.vertexColors.length > 0,
                b = 0;
            if (b = E(b, 0, 0), b = E(b, 1, !0), b = E(b, 2, !1), b = E(b, 3, p), b = E(b, 4, m), b = E(b, 5, v), b = E(b, 6, g), b = E(b, 7, y), a.push(b), a.push(d.a, d.b, d.c), a.push(d.materialIndex), p)
            {
                var w = this.faceVertexUvs[0][i];
                a.push(T(w[0]), T(w[1]), T(w[2]))
            }
            if (m && a.push(S(d.normal)), v)
            {
                var _ = d.vertexNormals;
                a.push(S(_[0]), S(_[1]), S(_[2]))
            }
            if (g && a.push(M(d.color)), y)
            {
                var x = d.vertexColors;
                a.push(M(x[0]), M(x[1]), M(x[2]))
            }
        }

        function E(e, t, n)
        {
            return n ? e | 1 << t : e & ~(1 << t)
        }

        function S(e)
        {
            var t = e.x.toString() + e.y.toString() + e.z.toString();
            return void 0 !== c[t] || (c[t] = s.length / 3, s.push(e.x, e.y, e.z)), c[t]
        }

        function M(e)
        {
            var t = e.r.toString() + e.g.toString() + e.b.toString();
            return void 0 !== l[t] || (l[t] = u.length, u.push(e.getHex())), l[t]
        }

        function T(e)
        {
            var t = e.x.toString() + e.y.toString();
            return void 0 !== h[t] || (h[t] = f.length / 2, f.push(e.x, e.y)), h[t]
        }
        return e.data = {}, e.data.vertices = r, e.data.normals = s, u.length > 0 && (e.data.colors = u), f.length > 0 && (e.data.uvs = [f]), e.data.faces = a, e
    },
    clone: function()
    {
        return (new Rc).copy(this)
    },
    copy: function(e)
    {
        var t, n, r, i, o, a;
        this.vertices = [], this.colors = [], this.faces = [], this.faceVertexUvs = [
            []
        ], this.morphTargets = [], this.morphNormals = [], this.skinWeights = [], this.skinIndices = [], this.lineDistances = [], this.boundingBox = null, this.boundingSphere = null, this.name = e.name;
        var s = e.vertices;
        for (t = 0, n = s.length; t < n; t++) this.vertices.push(s[t].clone());
        var c = e.colors;
        for (t = 0, n = c.length; t < n; t++) this.colors.push(c[t].clone());
        var u = e.faces;
        for (t = 0, n = u.length; t < n; t++) this.faces.push(u[t].clone());
        for (t = 0, n = e.faceVertexUvs.length; t < n; t++)
        {
            var l = e.faceVertexUvs[t];
            for (void 0 === this.faceVertexUvs[t] && (this.faceVertexUvs[t] = []), r = 0, i = l.length; r < i; r++)
            {
                var f = l[r],
                    h = [];
                for (o = 0, a = f.length; o < a; o++)
                {
                    var d = f[o];
                    h.push(d.clone())
                }
                this.faceVertexUvs[t].push(h)
            }
        }
        var p = e.morphTargets;
        for (t = 0, n = p.length; t < n; t++)
        {
            var m = {};
            if (m.name = p[t].name, void 0 !== p[t].vertices)
                for (m.vertices = [], r = 0, i = p[t].vertices.length; r < i; r++) m.vertices.push(p[t].vertices[r].clone());
            if (void 0 !== p[t].normals)
                for (m.normals = [], r = 0, i = p[t].normals.length; r < i; r++) m.normals.push(p[t].normals[r].clone());
            this.morphTargets.push(m)
        }
        var v = e.morphNormals;
        for (t = 0, n = v.length; t < n; t++)
        {
            var g = {};
            if (void 0 !== v[t].vertexNormals)
                for (g.vertexNormals = [], r = 0, i = v[t].vertexNormals.length; r < i; r++)
                {
                    var y = v[t].vertexNormals[r],
                        b = {};
                    b.a = y.a.clone(), b.b = y.b.clone(), b.c = y.c.clone(), g.vertexNormals.push(b)
                }
            if (void 0 !== v[t].faceNormals)
                for (g.faceNormals = [], r = 0, i = v[t].faceNormals.length; r < i; r++) g.faceNormals.push(v[t].faceNormals[r].clone());
            this.morphNormals.push(g)
        }
        var w = e.skinWeights;
        for (t = 0, n = w.length; t < n; t++) this.skinWeights.push(w[t].clone());
        var _ = e.skinIndices;
        for (t = 0, n = _.length; t < n; t++) this.skinIndices.push(_[t].clone());
        var x = e.lineDistances;
        for (t = 0, n = x.length; t < n; t++) this.lineDistances.push(x[t]);
        var E = e.boundingBox;
        null !== E && (this.boundingBox = E.clone());
        var S = e.boundingSphere;
        return null !== S && (this.boundingSphere = S.clone()), this.elementsNeedUpdate = e.elementsNeedUpdate, this.verticesNeedUpdate = e.verticesNeedUpdate, this.uvsNeedUpdate = e.uvsNeedUpdate, this.normalsNeedUpdate = e.normalsNeedUpdate, this.colorsNeedUpdate = e.colorsNeedUpdate, this.lineDistancesNeedUpdate = e.lineDistancesNeedUpdate, this.groupsNeedUpdate = e.groupsNeedUpdate, this
    },
    dispose: function()
    {
        this.dispatchEvent(
        {
            type: "dispose"
        })
    }
});
class Ic extends sc
{
    constructor(e, t, n, r, i, o)
    {
        super(), this.type = "BoxBufferGeometry", this.parameters = {
            width: e,
            height: t,
            depth: n,
            widthSegments: r,
            heightSegments: i,
            depthSegments: o
        };
        var a = this;
        e = e || 1, t = t || 1, n = n || 1, r = Math.floor(r) || 1, i = Math.floor(i) || 1, o = Math.floor(o) || 1;
        var s = [],
            c = [],
            u = [],
            l = [],
            f = 0,
            h = 0;

        function d(e, t, n, r, i, o, d, p, m, v, g)
        {
            var y, b, w = o / m,
                _ = d / v,
                x = o / 2,
                E = d / 2,
                S = p / 2,
                M = m + 1,
                T = v + 1,
                k = 0,
                A = 0,
                C = new sa;
            for (b = 0; b < T; b++)
            {
                var O = b * _ - E;
                for (y = 0; y < M; y++)
                {
                    var P = y * w - x;
                    C[e] = P * r, C[t] = O * i, C[n] = S, c.push(C.x, C.y, C.z), C[e] = 0, C[t] = 0, C[n] = p > 0 ? 1 : -1, u.push(C.x, C.y, C.z), l.push(y / m), l.push(1 - b / v), k += 1
                }
            }
            for (b = 0; b < v; b++)
                for (y = 0; y < m; y++)
                {
                    var R = f + y + M * b,
                        I = f + y + M * (b + 1),
                        N = f + (y + 1) + M * (b + 1),
                        L = f + (y + 1) + M * b;
                    s.push(R, I, L), s.push(I, N, L), A += 6
                }
            a.addGroup(h, A, g), h += A, f += k
        }
        d("z", "y", "x", -1, -1, n, t, e, o, i, 0), d("z", "y", "x", 1, -1, n, t, -e, o, i, 1), d("x", "z", "y", 1, 1, e, n, t, r, o, 2), d("x", "z", "y", 1, -1, e, n, -t, r, o, 3), d("x", "y", "z", 1, -1, e, t, n, r, i, 4), d("x", "y", "z", -1, -1, e, t, -n, r, i, 5), this.setIndex(s), this.setAttribute("position", new Xs(c, 3)), this.setAttribute("normal", new Xs(u, 3)), this.setAttribute("uv", new Xs(l, 2))
    }
}

function Nc(e)
{
    var t = {};
    for (var n in e)
        for (var r in t[n] = {}, e[n])
        {
            var i = e[n][r];
            i && (i.isColor || i.isMatrix3 || i.isMatrix4 || i.isVector2 || i.isVector3 || i.isVector4 || i.isTexture) ? t[n][r] = i.clone() : Array.isArray(i) ? t[n][r] = i.slice() : t[n][r] = i
        }
    return t
}

function Lc(e)
{
    for (var t = {}, n = 0; n < e.length; n++)
    {
        var r = Nc(e[n]);
        for (var i in r) t[i] = r[i]
    }
    return t
}

function Bc(e)
{
    Us.call(this), this.type = "ShaderMaterial", this.defines = {}, this.uniforms = {}, this.vertexShader = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}", this.fragmentShader = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}", this.linewidth = 1, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.lights = !1, this.clipping = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.extensions = {
        derivatives: !1,
        fragDepth: !1,
        drawBuffers: !1,
        shaderTextureLOD: !1
    }, this.defaultAttributeValues = {
        color: [1, 1, 1],
        uv: [0, 0],
        uv2: [0, 0]
    }, this.index0AttributeName = void 0, this.uniformsNeedUpdate = !1, void 0 !== e && (void 0 !== e.attributes && console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."), this.setValues(e))
}

function jc()
{
    Ha.call(this), this.type = "Camera", this.matrixWorldInverse = new Sa, this.projectionMatrix = new Sa, this.projectionMatrixInverse = new Sa
}

function Fc(e, t, n, r)
{
    jc.call(this), this.type = "PerspectiveCamera", this.fov = void 0 !== e ? e : 50, this.zoom = 1, this.near = void 0 !== n ? n : .1, this.far = void 0 !== r ? r : 2e3, this.focus = 10, this.aspect = void 0 !== t ? t : 1, this.view = null, this.filmGauge = 35, this.filmOffset = 0, this.updateProjectionMatrix()
}
Bc.prototype = Object.create(Us.prototype), Bc.prototype.constructor = Bc, Bc.prototype.isShaderMaterial = !0, Bc.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.fragmentShader = e.fragmentShader, this.vertexShader = e.vertexShader, this.uniforms = Nc(e.uniforms), this.defines = Object.assign(
    {}, e.defines), this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.lights = e.lights, this.clipping = e.clipping, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this.extensions = e.extensions, this
}, Bc.prototype.toJSON = function(e)
{
    var t = Us.prototype.toJSON.call(this, e);
    for (var n in t.uniforms = {}, this.uniforms)
    {
        var r = this.uniforms[n].value;
        r && r.isTexture ? t.uniforms[n] = {
            type: "t",
            value: r.toJSON(e).uuid
        } : r && r.isColor ? t.uniforms[n] = {
            type: "c",
            value: r.getHex()
        } : r && r.isVector2 ? t.uniforms[n] = {
            type: "v2",
            value: r.toArray()
        } : r && r.isVector3 ? t.uniforms[n] = {
            type: "v3",
            value: r.toArray()
        } : r && r.isVector4 ? t.uniforms[n] = {
            type: "v4",
            value: r.toArray()
        } : r && r.isMatrix3 ? t.uniforms[n] = {
            type: "m3",
            value: r.toArray()
        } : r && r.isMatrix4 ? t.uniforms[n] = {
            type: "m4",
            value: r.toArray()
        } : t.uniforms[n] = {
            value: r
        }
    }
    Object.keys(this.defines).length > 0 && (t.defines = this.defines), t.vertexShader = this.vertexShader, t.fragmentShader = this.fragmentShader;
    var i = {};
    for (var o in this.extensions) !0 === this.extensions[o] && (i[o] = !0);
    return Object.keys(i).length > 0 && (t.extensions = i), t
}, jc.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: jc,
    isCamera: !0,
    copy: function(e, t)
    {
        return Ha.prototype.copy.call(this, e, t), this.matrixWorldInverse.copy(e.matrixWorldInverse), this.projectionMatrix.copy(e.projectionMatrix), this.projectionMatrixInverse.copy(e.projectionMatrixInverse), this
    },
    getWorldDirection: function(e)
    {
        void 0 === e && (console.warn("THREE.Camera: .getWorldDirection() target is now required"), e = new sa), this.updateMatrixWorld(!0);
        var t = this.matrixWorld.elements;
        return e.set(-t[8], -t[9], -t[10]).normalize()
    },
    updateMatrixWorld: function(e)
    {
        Ha.prototype.updateMatrixWorld.call(this, e), this.matrixWorldInverse.getInverse(this.matrixWorld)
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    }
}), Fc.prototype = Object.assign(Object.create(jc.prototype),
{
    constructor: Fc,
    isPerspectiveCamera: !0,
    copy: function(e, t)
    {
        return jc.prototype.copy.call(this, e, t), this.fov = e.fov, this.zoom = e.zoom, this.near = e.near, this.far = e.far, this.focus = e.focus, this.aspect = e.aspect, this.view = null === e.view ? null : Object.assign(
        {}, e.view), this.filmGauge = e.filmGauge, this.filmOffset = e.filmOffset, this
    },
    setFocalLength: function(e)
    {
        var t = .5 * this.getFilmHeight() / e;
        this.fov = 2 * na.RAD2DEG * Math.atan(t), this.updateProjectionMatrix()
    },
    getFocalLength: function()
    {
        var e = Math.tan(.5 * na.DEG2RAD * this.fov);
        return .5 * this.getFilmHeight() / e
    },
    getEffectiveFOV: function()
    {
        return 2 * na.RAD2DEG * Math.atan(Math.tan(.5 * na.DEG2RAD * this.fov) / this.zoom)
    },
    getFilmWidth: function()
    {
        return this.filmGauge * Math.min(this.aspect, 1)
    },
    getFilmHeight: function()
    {
        return this.filmGauge / Math.max(this.aspect, 1)
    },
    setViewOffset: function(e, t, n, r, i, o)
    {
        this.aspect = e / t, null === this.view && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = o, this.updateProjectionMatrix()
    },
    clearViewOffset: function()
    {
        null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
    },
    updateProjectionMatrix: function()
    {
        var e = this.near,
            t = e * Math.tan(.5 * na.DEG2RAD * this.fov) / this.zoom,
            n = 2 * t,
            r = this.aspect * n,
            i = -.5 * r,
            o = this.view;
        if (null !== this.view && this.view.enabled)
        {
            var a = o.fullWidth,
                s = o.fullHeight;
            i += o.offsetX * r / a, t -= o.offsetY * n / s, r *= o.width / a, n *= o.height / s
        }
        var c = this.filmOffset;
        0 !== c && (i += e * c / this.getFilmWidth()), this.projectionMatrix.makePerspective(i, i + r, t, t - n, e, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix)
    },
    toJSON: function(e)
    {
        var t = Ha.prototype.toJSON.call(this, e);
        return t.object.fov = this.fov, t.object.zoom = this.zoom, t.object.near = this.near, t.object.far = this.far, t.object.focus = this.focus, t.object.aspect = this.aspect, null !== this.view && (t.object.view = Object.assign(
        {}, this.view)), t.object.filmGauge = this.filmGauge, t.object.filmOffset = this.filmOffset, t
    }
});

function Uc(e, t, n, r)
{
    Ha.call(this), this.type = "CubeCamera";
    var i = new Fc(90, 1, e, t);
    i.up.set(0, -1, 0), i.lookAt(new sa(1, 0, 0)), this.add(i);
    var o = new Fc(90, 1, e, t);
    o.up.set(0, -1, 0), o.lookAt(new sa(-1, 0, 0)), this.add(o);
    var a = new Fc(90, 1, e, t);
    a.up.set(0, 0, 1), a.lookAt(new sa(0, 1, 0)), this.add(a);
    var s = new Fc(90, 1, e, t);
    s.up.set(0, 0, -1), s.lookAt(new sa(0, -1, 0)), this.add(s);
    var c = new Fc(90, 1, e, t);
    c.up.set(0, -1, 0), c.lookAt(new sa(0, 0, 1)), this.add(c);
    var u = new Fc(90, 1, e, t);
    u.up.set(0, -1, 0), u.lookAt(new sa(0, 0, -1)), this.add(u), r = r ||
    {
        format: 1022,
        magFilter: 1006,
        minFilter: 1006
    }, this.renderTarget = new Dc(n, n, r), this.renderTarget.texture.name = "CubeCamera", this.update = function(e, t)
    {
        null === this.parent && this.updateMatrixWorld();
        var n = e.getRenderTarget(),
            r = this.renderTarget,
            l = r.texture.generateMipmaps;
        r.texture.generateMipmaps = !1, e.setRenderTarget(r, 0), e.render(t, i), e.setRenderTarget(r, 1), e.render(t, o), e.setRenderTarget(r, 2), e.render(t, a), e.setRenderTarget(r, 3), e.render(t, s), e.setRenderTarget(r, 4), e.render(t, c), r.texture.generateMipmaps = l, e.setRenderTarget(r, 5), e.render(t, u), e.setRenderTarget(n)
    }, this.clear = function(e, t, n, r)
    {
        for (var i = e.getRenderTarget(), o = this.renderTarget, a = 0; a < 6; a++) e.setRenderTarget(o, a), e.clear(t, n, r);
        e.setRenderTarget(i)
    }
}

function Dc(e, t, n)
{
    ma.call(this, e, t, n)
}

function zc(e, t, n, r, i, o, a, s, c, u, l, f)
{
    da.call(this, null, o, a, s, c, u, r, i, l, f), this.image = {
        data: e || null,
        width: t || 1,
        height: n || 1
    }, this.magFilter = void 0 !== c ? c : 1003, this.minFilter = void 0 !== u ? u : 1003, this.generateMipmaps = !1, this.flipY = !1, this.unpackAlignment = 1, this.needsUpdate = !0
}
Uc.prototype = Object.create(Ha.prototype), Uc.prototype.constructor = Uc, Dc.prototype = Object.create(ma.prototype), Dc.prototype.constructor = Dc, Dc.prototype.isWebGLRenderTargetCube = !0, Dc.prototype.fromEquirectangularTexture = function(e, t)
{
    this.texture.type = t.type, this.texture.format = t.format, this.texture.encoding = t.encoding;
    var n = new Va,
        r = {
            uniforms:
            {
                tEquirect:
                {
                    value: null
                }
            },
            vertexShader: ["varying vec3 vWorldDirection;", "vec3 transformDirection( in vec3 dir, in mat4 matrix ) {", "\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );", "}", "void main() {", "\tvWorldDirection = transformDirection( position, modelMatrix );", "\t#include <begin_vertex>", "\t#include <project_vertex>", "}"].join("\n"),
            fragmentShader: ["uniform sampler2D tEquirect;", "varying vec3 vWorldDirection;", "#define RECIPROCAL_PI 0.31830988618", "#define RECIPROCAL_PI2 0.15915494", "void main() {", "\tvec3 direction = normalize( vWorldDirection );", "\tvec2 sampleUV;", "\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;", "\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;", "\tgl_FragColor = texture2D( tEquirect, sampleUV );", "}"].join("\n")
        },
        i = new Bc(
        {
            type: "CubemapFromEquirect",
            uniforms: Nc(r.uniforms),
            vertexShader: r.vertexShader,
            fragmentShader: r.fragmentShader,
            side: 1,
            blending: 0
        });
    i.uniforms.tEquirect.value = t;
    var o = new Mc(new Ic(5, 5, 5), i);
    n.add(o);
    var a = new Uc(1, 10, 1);
    return a.renderTarget = this, a.renderTarget.texture.name = "CubeCameraTexture", a.update(e, n), o.geometry.dispose(), o.material.dispose(), this
}, zc.prototype = Object.create(da.prototype), zc.prototype.constructor = zc, zc.prototype.isDataTexture = !0;
var Hc = new as,
    Vc = new sa;

function Wc(e, t, n, r, i, o)
{
    this.planes = [void 0 !== e ? e : new ys, void 0 !== t ? t : new ys, void 0 !== n ? n : new ys, void 0 !== r ? r : new ys, void 0 !== i ? i : new ys, void 0 !== o ? o : new ys]
}
Object.assign(Wc.prototype,
{
    set: function(e, t, n, r, i, o)
    {
        var a = this.planes;
        return a[0].copy(e), a[1].copy(t), a[2].copy(n), a[3].copy(r), a[4].copy(i), a[5].copy(o), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        for (var t = this.planes, n = 0; n < 6; n++) t[n].copy(e.planes[n]);
        return this
    },
    setFromMatrix: function(e)
    {
        var t = this.planes,
            n = e.elements,
            r = n[0],
            i = n[1],
            o = n[2],
            a = n[3],
            s = n[4],
            c = n[5],
            u = n[6],
            l = n[7],
            f = n[8],
            h = n[9],
            d = n[10],
            p = n[11],
            m = n[12],
            v = n[13],
            g = n[14],
            y = n[15];
        return t[0].setComponents(a - r, l - s, p - f, y - m).normalize(), t[1].setComponents(a + r, l + s, p + f, y + m).normalize(), t[2].setComponents(a + i, l + c, p + h, y + v).normalize(), t[3].setComponents(a - i, l - c, p - h, y - v).normalize(), t[4].setComponents(a - o, l - u, p - d, y - g).normalize(), t[5].setComponents(a + o, l + u, p + d, y + g).normalize(), this
    },
    intersectsObject: function(e)
    {
        var t = e.geometry;
        return null === t.boundingSphere && t.computeBoundingSphere(), Hc.copy(t.boundingSphere).applyMatrix4(e.matrixWorld), this.intersectsSphere(Hc)
    },
    intersectsSprite: function(e)
    {
        return Hc.center.set(0, 0, 0), Hc.radius = .7071067811865476, Hc.applyMatrix4(e.matrixWorld), this.intersectsSphere(Hc)
    },
    intersectsSphere: function(e)
    {
        for (var t = this.planes, n = e.center, r = -e.radius, i = 0; i < 6; i++)
        {
            if (t[i].distanceToPoint(n) < r) return !1
        }
        return !0
    },
    intersectsBox: function(e)
    {
        for (var t = this.planes, n = 0; n < 6; n++)
        {
            var r = t[n];
            if (Vc.x = r.normal.x > 0 ? e.max.x : e.min.x, Vc.y = r.normal.y > 0 ? e.max.y : e.min.y, Vc.z = r.normal.z > 0 ? e.max.z : e.min.z, r.distanceToPoint(Vc) < 0) return !1
        }
        return !0
    },
    containsPoint: function(e)
    {
        for (var t = this.planes, n = 0; n < 6; n++)
            if (t[n].distanceToPoint(e) < 0) return !1;
        return !0
    }
});
var Gc = {
        alphamap_fragment: "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",
        alphamap_pars_fragment: "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        alphatest_fragment: "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",
        aomap_fragment: "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",
        aomap_pars_fragment: "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",
        begin_vertex: "vec3 transformed = vec3( position );",
        beginnormal_vertex: "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",
        bsdfs: "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",
        bumpmap_pars_fragment: "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",
        clipping_planes_fragment: "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",
        clipping_planes_pars_fragment: "#if NUM_CLIPPING_PLANES > 0\n\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\t\tvarying vec3 vViewPosition;\n\t#endif\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",
        clipping_planes_pars_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvarying vec3 vViewPosition;\n#endif",
        clipping_planes_vertex: "#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif",
        color_fragment: "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",
        color_pars_fragment: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_pars_vertex: "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",
        color_vertex: "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif",
        common: "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}",
        cube_uv_reflection_fragment: "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif",
        defaultnormal_vertex: "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",
        displacementmap_pars_vertex: "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",
        displacementmap_vertex: "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",
        emissivemap_fragment: "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",
        emissivemap_pars_fragment: "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",
        encodings_fragment: "gl_FragColor = linearToOutputTexel( gl_FragColor );",
        encodings_pars_fragment: "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = min( floor( D ) / 255.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",
        envmap_fragment: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ), 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",
        envmap_common_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",
        envmap_pars_fragment: "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",
        envmap_pars_vertex: "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",
        envmap_physical_pars_fragment: "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",
        envmap_vertex: "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",
        fog_vertex: "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif",
        fog_pars_vertex: "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",
        fog_fragment: "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",
        fog_pars_fragment: "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",
        gradientmap_pars_fragment: "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",
        lightmap_fragment: "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",
        lightmap_pars_fragment: "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",
        lights_lambert_vertex: "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n#endif",
        lights_pars_begin: "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t\tfloat shadowCameraNear;\n\t\tfloat shadowCameraFar;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t\tint shadow;\n\t\tfloat shadowBias;\n\t\tfloat shadowRadius;\n\t\tvec2 shadowMapSize;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",
        lights_toon_fragment: "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
        lights_toon_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",
        lights_phong_fragment: "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",
        lights_phong_pars_fragment: "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",
        lights_physical_fragment: "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = saturate( clearcoat );\tmaterial.clearcoatRoughness = max( clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",
        lights_physical_pars_fragment: "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",
        lights_fragment_begin: "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",
        lights_fragment_maps: "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",
        lights_fragment_end: "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",
        logdepthbuf_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",
        logdepthbuf_pars_fragment: "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",
        logdepthbuf_pars_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",
        logdepthbuf_vertex: "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",
        map_fragment: "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",
        map_pars_fragment: "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",
        map_particle_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",
        map_particle_pars_fragment: "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",
        metalnessmap_fragment: "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",
        metalnessmap_pars_fragment: "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",
        morphnormal_vertex: "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",
        morphtarget_pars_vertex: "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",
        morphtarget_vertex: "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",
        normal_fragment_begin: "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",
        normal_fragment_maps: "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",
        normalmap_pars_fragment: "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",
        clearcoat_normal_fragment_begin: "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",
        clearcoat_normal_fragment_maps: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",
        clearcoat_normalmap_pars_fragment: "#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",
        packing: "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",
        premultiplied_alpha_fragment: "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",
        project_vertex: "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",
        dithering_fragment: "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",
        dithering_pars_fragment: "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",
        roughnessmap_fragment: "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",
        roughnessmap_pars_fragment: "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",
        shadowmap_pars_fragment: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\n\t\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n\t\tvec2 f = fract( uv * size + 0.5 );\n\t\tfloat a = mix( lb, lt, f.y );\n\t\tfloat b = mix( rb, rt, f.y );\n\t\tfloat c = mix( a, b, f.x );\n\t\treturn c;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tshadow = (\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",
        shadowmap_pars_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",
        shadowmap_vertex: "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#endif\n#endif",
        shadowmask_pars_fragment: "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLight directionalLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLight spotLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLight pointLight;\n\t#pragma unroll_loop\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#endif\n\t#endif\n\treturn shadow;\n}",
        skinbase_vertex: "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",
        skinning_pars_vertex: "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",
        skinning_vertex: "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",
        skinnormal_vertex: "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",
        specularmap_fragment: "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",
        specularmap_pars_fragment: "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",
        tonemapping_fragment: "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",
        tonemapping_pars_fragment: "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}",
        uv_pars_fragment: "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",
        uv_pars_vertex: "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",
        uv_vertex: "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",
        uv2_pars_fragment: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",
        uv2_pars_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",
        uv2_vertex: "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",
        worldpos_vertex: "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",
        background_frag: "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        background_vert: "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",
        cube_frag: "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        cube_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",
        depth_frag: "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n\t#endif\n}",
        depth_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n}",
        distanceRGBA_frag: "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",
        distanceRGBA_vert: "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",
        equirect_frag: "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",
        equirect_vert: "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",
        linedashed_frag: "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        linedashed_vert: "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\tvLineDistance = scale * lineDistance;\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",
        meshbasic_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        meshbasic_vert: "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",
        meshlambert_frag: "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshlambert_vert: "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshmatcap_frag: "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        meshmatcap_vert: "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",
        meshtoon_frag: "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshtoon_vert: "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphong_frag: "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphong_vert: "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        meshphysical_frag: "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",
        meshphysical_vert: "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        normal_frag: "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",
        normal_vert: "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",
        points_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <premultiplied_alpha_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        points_vert: "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",
        shadow_frag: "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <fog_fragment>\n}",
        shadow_vert: "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",
        sprite_frag: "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",
        sprite_vert: "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"
    },
    qc = {
        common:
        {
            diffuse:
            {
                value: new Is(15658734)
            },
            opacity:
            {
                value: 1
            },
            map:
            {
                value: null
            },
            uvTransform:
            {
                value: new la
            },
            uv2Transform:
            {
                value: new la
            },
            alphaMap:
            {
                value: null
            }
        },
        specularmap:
        {
            specularMap:
            {
                value: null
            }
        },
        envmap:
        {
            envMap:
            {
                value: null
            },
            flipEnvMap:
            {
                value: -1
            },
            reflectivity:
            {
                value: 1
            },
            refractionRatio:
            {
                value: .98
            },
            maxMipLevel:
            {
                value: 0
            }
        },
        aomap:
        {
            aoMap:
            {
                value: null
            },
            aoMapIntensity:
            {
                value: 1
            }
        },
        lightmap:
        {
            lightMap:
            {
                value: null
            },
            lightMapIntensity:
            {
                value: 1
            }
        },
        emissivemap:
        {
            emissiveMap:
            {
                value: null
            }
        },
        bumpmap:
        {
            bumpMap:
            {
                value: null
            },
            bumpScale:
            {
                value: 1
            }
        },
        normalmap:
        {
            normalMap:
            {
                value: null
            },
            normalScale:
            {
                value: new ra(1, 1)
            }
        },
        displacementmap:
        {
            displacementMap:
            {
                value: null
            },
            displacementScale:
            {
                value: 1
            },
            displacementBias:
            {
                value: 0
            }
        },
        roughnessmap:
        {
            roughnessMap:
            {
                value: null
            }
        },
        metalnessmap:
        {
            metalnessMap:
            {
                value: null
            }
        },
        gradientmap:
        {
            gradientMap:
            {
                value: null
            }
        },
        fog:
        {
            fogDensity:
            {
                value: 25e-5
            },
            fogNear:
            {
                value: 1
            },
            fogFar:
            {
                value: 2e3
            },
            fogColor:
            {
                value: new Is(16777215)
            }
        },
        lights:
        {
            ambientLightColor:
            {
                value: []
            },
            lightProbe:
            {
                value: []
            },
            directionalLights:
            {
                value: [],
                properties:
                {
                    direction:
                    {},
                    color:
                    {},
                    shadow:
                    {},
                    shadowBias:
                    {},
                    shadowRadius:
                    {},
                    shadowMapSize:
                    {}
                }
            },
            directionalShadowMap:
            {
                value: []
            },
            directionalShadowMatrix:
            {
                value: []
            },
            spotLights:
            {
                value: [],
                properties:
                {
                    color:
                    {},
                    position:
                    {},
                    direction:
                    {},
                    distance:
                    {},
                    coneCos:
                    {},
                    penumbraCos:
                    {},
                    decay:
                    {},
                    shadow:
                    {},
                    shadowBias:
                    {},
                    shadowRadius:
                    {},
                    shadowMapSize:
                    {}
                }
            },
            spotShadowMap:
            {
                value: []
            },
            spotShadowMatrix:
            {
                value: []
            },
            pointLights:
            {
                value: [],
                properties:
                {
                    color:
                    {},
                    position:
                    {},
                    decay:
                    {},
                    distance:
                    {},
                    shadow:
                    {},
                    shadowBias:
                    {},
                    shadowRadius:
                    {},
                    shadowMapSize:
                    {},
                    shadowCameraNear:
                    {},
                    shadowCameraFar:
                    {}
                }
            },
            pointShadowMap:
            {
                value: []
            },
            pointShadowMatrix:
            {
                value: []
            },
            hemisphereLights:
            {
                value: [],
                properties:
                {
                    direction:
                    {},
                    skyColor:
                    {},
                    groundColor:
                    {}
                }
            },
            rectAreaLights:
            {
                value: [],
                properties:
                {
                    color:
                    {},
                    position:
                    {},
                    width:
                    {},
                    height:
                    {}
                }
            }
        },
        points:
        {
            diffuse:
            {
                value: new Is(15658734)
            },
            opacity:
            {
                value: 1
            },
            size:
            {
                value: 1
            },
            scale:
            {
                value: 1
            },
            map:
            {
                value: null
            },
            alphaMap:
            {
                value: null
            },
            uvTransform:
            {
                value: new la
            }
        },
        sprite:
        {
            diffuse:
            {
                value: new Is(15658734)
            },
            opacity:
            {
                value: 1
            },
            center:
            {
                value: new ra(.5, .5)
            },
            rotation:
            {
                value: 0
            },
            map:
            {
                value: null
            },
            alphaMap:
            {
                value: null
            },
            uvTransform:
            {
                value: new la
            }
        }
    },
    $c = {
        basic:
        {
            uniforms: Lc([qc.common, qc.specularmap, qc.envmap, qc.aomap, qc.lightmap, qc.fog]),
            vertexShader: Gc.meshbasic_vert,
            fragmentShader: Gc.meshbasic_frag
        },
        lambert:
        {
            uniforms: Lc([qc.common, qc.specularmap, qc.envmap, qc.aomap, qc.lightmap, qc.emissivemap, qc.fog, qc.lights,
            {
                emissive:
                {
                    value: new Is(0)
                }
            }]),
            vertexShader: Gc.meshlambert_vert,
            fragmentShader: Gc.meshlambert_frag
        },
        phong:
        {
            uniforms: Lc([qc.common, qc.specularmap, qc.envmap, qc.aomap, qc.lightmap, qc.emissivemap, qc.bumpmap, qc.normalmap, qc.displacementmap, qc.fog, qc.lights,
            {
                emissive:
                {
                    value: new Is(0)
                },
                specular:
                {
                    value: new Is(1118481)
                },
                shininess:
                {
                    value: 30
                }
            }]),
            vertexShader: Gc.meshphong_vert,
            fragmentShader: Gc.meshphong_frag
        },
        standard:
        {
            uniforms: Lc([qc.common, qc.envmap, qc.aomap, qc.lightmap, qc.emissivemap, qc.bumpmap, qc.normalmap, qc.displacementmap, qc.roughnessmap, qc.metalnessmap, qc.fog, qc.lights,
            {
                emissive:
                {
                    value: new Is(0)
                },
                roughness:
                {
                    value: .5
                },
                metalness:
                {
                    value: .5
                },
                envMapIntensity:
                {
                    value: 1
                }
            }]),
            vertexShader: Gc.meshphysical_vert,
            fragmentShader: Gc.meshphysical_frag
        },
        toon:
        {
            uniforms: Lc([qc.common, qc.specularmap, qc.aomap, qc.lightmap, qc.emissivemap, qc.bumpmap, qc.normalmap, qc.displacementmap, qc.gradientmap, qc.fog, qc.lights,
            {
                emissive:
                {
                    value: new Is(0)
                },
                specular:
                {
                    value: new Is(1118481)
                },
                shininess:
                {
                    value: 30
                }
            }]),
            vertexShader: Gc.meshtoon_vert,
            fragmentShader: Gc.meshtoon_frag
        },
        matcap:
        {
            uniforms: Lc([qc.common, qc.bumpmap, qc.normalmap, qc.displacementmap, qc.fog,
            {
                matcap:
                {
                    value: null
                }
            }]),
            vertexShader: Gc.meshmatcap_vert,
            fragmentShader: Gc.meshmatcap_frag
        },
        points:
        {
            uniforms: Lc([qc.points, qc.fog]),
            vertexShader: Gc.points_vert,
            fragmentShader: Gc.points_frag
        },
        dashed:
        {
            uniforms: Lc([qc.common, qc.fog,
            {
                scale:
                {
                    value: 1
                },
                dashSize:
                {
                    value: 1
                },
                totalSize:
                {
                    value: 2
                }
            }]),
            vertexShader: Gc.linedashed_vert,
            fragmentShader: Gc.linedashed_frag
        },
        depth:
        {
            uniforms: Lc([qc.common, qc.displacementmap]),
            vertexShader: Gc.depth_vert,
            fragmentShader: Gc.depth_frag
        },
        normal:
        {
            uniforms: Lc([qc.common, qc.bumpmap, qc.normalmap, qc.displacementmap,
            {
                opacity:
                {
                    value: 1
                }
            }]),
            vertexShader: Gc.normal_vert,
            fragmentShader: Gc.normal_frag
        },
        sprite:
        {
            uniforms: Lc([qc.sprite, qc.fog]),
            vertexShader: Gc.sprite_vert,
            fragmentShader: Gc.sprite_frag
        },
        background:
        {
            uniforms:
            {
                uvTransform:
                {
                    value: new la
                },
                t2D:
                {
                    value: null
                }
            },
            vertexShader: Gc.background_vert,
            fragmentShader: Gc.background_frag
        },
        cube:
        {
            uniforms: Lc([qc.envmap,
            {
                opacity:
                {
                    value: 1
                }
            }]),
            vertexShader: Gc.cube_vert,
            fragmentShader: Gc.cube_frag
        },
        equirect:
        {
            uniforms:
            {
                tEquirect:
                {
                    value: null
                }
            },
            vertexShader: Gc.equirect_vert,
            fragmentShader: Gc.equirect_frag
        },
        distanceRGBA:
        {
            uniforms: Lc([qc.common, qc.displacementmap,
            {
                referencePosition:
                {
                    value: new sa
                },
                nearDistance:
                {
                    value: 1
                },
                farDistance:
                {
                    value: 1e3
                }
            }]),
            vertexShader: Gc.distanceRGBA_vert,
            fragmentShader: Gc.distanceRGBA_frag
        },
        shadow:
        {
            uniforms: Lc([qc.lights, qc.fog,
            {
                color:
                {
                    value: new Is(0)
                },
                opacity:
                {
                    value: 1
                }
            }]),
            vertexShader: Gc.shadow_vert,
            fragmentShader: Gc.shadow_frag
        }
    };

function Kc()
{
    var e = null,
        t = !1,
        n = null;

    function r(i, o)
    {
        !1 !== t && (n(i, o), e.requestAnimationFrame(r))
    }
    return {
        start: function()
        {
            !0 !== t && null !== n && (e.requestAnimationFrame(r), t = !0)
        },
        stop: function()
        {
            t = !1
        },
        setAnimationLoop: function(e)
        {
            n = e
        },
        setContext: function(t)
        {
            e = t
        }
    }
}

function Yc(e)
{
    var t = new WeakMap;
    return {
        get: function(e)
        {
            return e.isInterleavedBufferAttribute && (e = e.data), t.get(e)
        },
        remove: function(n)
        {
            n.isInterleavedBufferAttribute && (n = n.data);
            var r = t.get(n);
            r && (e.deleteBuffer(r.buffer), t.delete(n))
        },
        update: function(n, r)
        {
            n.isInterleavedBufferAttribute && (n = n.data);
            var i = t.get(n);
            void 0 === i ? t.set(n, function(t, n)
            {
                var r = t.array,
                    i = t.usage,
                    o = e.createBuffer();
                e.bindBuffer(n, o), e.bufferData(n, r, i), t.onUploadCallback();
                var a = 5126;
                return r instanceof Float32Array ? a = 5126 : r instanceof Float64Array ? console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.") : r instanceof Uint16Array ? a = 5123 : r instanceof Int16Array ? a = 5122 : r instanceof Uint32Array ? a = 5125 : r instanceof Int32Array ? a = 5124 : r instanceof Int8Array ? a = 5120 : r instanceof Uint8Array && (a = 5121),
                {
                    buffer: o,
                    type: a,
                    bytesPerElement: r.BYTES_PER_ELEMENT,
                    version: t.version
                }
            }(n, r)) : i.version < n.version && (! function(t, n, r)
            {
                var i = n.array,
                    o = n.updateRange;
                e.bindBuffer(r, t), -1 === o.count ? e.bufferSubData(r, 0, i) : (e.bufferSubData(r, o.offset * i.BYTES_PER_ELEMENT, i.subarray(o.offset, o.offset + o.count)), o.count = -1)
            }(i.buffer, n, r), i.version = n.version)
        }
    }
}

function Xc(e, t, n, r)
{
    Rc.call(this), this.type = "PlaneGeometry", this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: r
    }, this.fromBufferGeometry(new Jc(e, t, n, r)), this.mergeVertices()
}

function Jc(e, t, n, r)
{
    sc.call(this), this.type = "PlaneBufferGeometry", this.parameters = {
        width: e,
        height: t,
        widthSegments: n,
        heightSegments: r
    };
    var i, o, a = (e = e || 1) / 2,
        s = (t = t || 1) / 2,
        c = Math.floor(n) || 1,
        u = Math.floor(r) || 1,
        l = c + 1,
        f = u + 1,
        h = e / c,
        d = t / u,
        p = [],
        m = [],
        v = [],
        g = [];
    for (o = 0; o < f; o++)
    {
        var y = o * d - s;
        for (i = 0; i < l; i++)
        {
            var b = i * h - a;
            m.push(b, -y, 0), v.push(0, 0, 1), g.push(i / c), g.push(1 - o / u)
        }
    }
    for (o = 0; o < u; o++)
        for (i = 0; i < c; i++)
        {
            var w = i + l * o,
                _ = i + l * (o + 1),
                x = i + 1 + l * (o + 1),
                E = i + 1 + l * o;
            p.push(w, _, E), p.push(_, x, E)
        }
    this.setIndex(p), this.setAttribute("position", new Xs(m, 3)), this.setAttribute("normal", new Xs(v, 3)), this.setAttribute("uv", new Xs(g, 2))
}

function Zc(e, t, n, r)
{
    var i, o, a = new Is(0),
        s = 0,
        c = null,
        u = 0;

    function l(e, n)
    {
        t.buffers.color.setClear(e.r, e.g, e.b, n, r)
    }
    return {
        getClearColor: function()
        {
            return a
        },
        setClearColor: function(e, t)
        {
            a.set(e), l(a, s = void 0 !== t ? t : 1)
        },
        getClearAlpha: function()
        {
            return s
        },
        setClearAlpha: function(e)
        {
            l(a, s = e)
        },
        render: function(t, r, f, h)
        {
            var d = r.background,
                p = e.xr,
                m = p.getSession && p.getSession();
            if (m && "additive" === m.environmentBlendMode && (d = null), null === d ? (l(a, s), c = null, u = 0) : d && d.isColor && (l(d, 1), h = !0, c = null, u = 0), (e.autoClear || h) && e.clear(e.autoClearColor, e.autoClearDepth, e.autoClearStencil), d && (d.isCubeTexture || d.isWebGLRenderTargetCube || 306 === d.mapping))
            {
                void 0 === o && ((o = new Mc(new Ic(1, 1, 1), new Bc(
                {
                    type: "BackgroundCubeMaterial",
                    uniforms: Nc($c.cube.uniforms),
                    vertexShader: $c.cube.vertexShader,
                    fragmentShader: $c.cube.fragmentShader,
                    side: 1,
                    depthTest: !1,
                    depthWrite: !1,
                    fog: !1
                }))).geometry.deleteAttribute("normal"), o.geometry.deleteAttribute("uv"), o.onBeforeRender = function(e, t, n)
                {
                    this.matrixWorld.copyPosition(n.matrixWorld)
                }, Object.defineProperty(o.material, "envMap",
                {
                    get: function()
                    {
                        return this.uniforms.envMap.value
                    }
                }), n.update(o));
                var v = d.isWebGLRenderTargetCube ? d.texture : d;
                o.material.uniforms.envMap.value = v, o.material.uniforms.flipEnvMap.value = v.isCubeTexture ? -1 : 1, c === d && u === v.version || (o.material.needsUpdate = !0, c = d, u = v.version), t.unshift(o, o.geometry, o.material, 0, 0, null)
            }
            else d && d.isTexture && (void 0 === i && ((i = new Mc(new Jc(2, 2), new Bc(
            {
                type: "BackgroundMaterial",
                uniforms: Nc($c.background.uniforms),
                vertexShader: $c.background.vertexShader,
                fragmentShader: $c.background.fragmentShader,
                side: 0,
                depthTest: !1,
                depthWrite: !1,
                fog: !1
            }))).geometry.deleteAttribute("normal"), Object.defineProperty(i.material, "map",
            {
                get: function()
                {
                    return this.uniforms.t2D.value
                }
            }), n.update(i)), i.material.uniforms.t2D.value = d, !0 === d.matrixAutoUpdate && d.updateMatrix(), i.material.uniforms.uvTransform.value.copy(d.matrix), c === d && u === d.version || (i.material.needsUpdate = !0, c = d, u = d.version), t.unshift(i, i.geometry, i.material, 0, 0, null))
        }
    }
}

function Qc(e, t, n, r)
{
    var i, o = r.isWebGL2;
    this.setMode = function(e)
    {
        i = e
    }, this.render = function(t, r)
    {
        e.drawArrays(i, t, r), n.update(r, i)
    }, this.renderInstances = function(r, a, s, c)
    {
        if (0 !== c)
        {
            var u, l;
            if (o) u = e, l = "drawArraysInstanced";
            else if (l = "drawArraysInstancedANGLE", null === (u = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            u[l](i, a, s, c), n.update(s, i, c)
        }
    }
}

function eu(e, t, n)
{
    var r;

    function i(t)
    {
        if ("highp" === t)
        {
            if (e.getShaderPrecisionFormat(35633, 36338).precision > 0 && e.getShaderPrecisionFormat(35632, 36338).precision > 0) return "highp";
            t = "mediump"
        }
        return "mediump" === t && e.getShaderPrecisionFormat(35633, 36337).precision > 0 && e.getShaderPrecisionFormat(35632, 36337).precision > 0 ? "mediump" : "lowp"
    }
    var o = "undefined" != typeof WebGL2RenderingContext && e instanceof WebGL2RenderingContext || "undefined" != typeof WebGL2ComputeRenderingContext && e instanceof WebGL2ComputeRenderingContext,
        a = void 0 !== n.precision ? n.precision : "highp",
        s = i(a);
    s !== a && (console.warn("THREE.WebGLRenderer:", a, "not supported, using", s, "instead."), a = s);
    var c = !0 === n.logarithmicDepthBuffer,
        u = e.getParameter(34930),
        l = e.getParameter(35660),
        f = e.getParameter(3379),
        h = e.getParameter(34076),
        d = e.getParameter(34921),
        p = e.getParameter(36347),
        m = e.getParameter(36348),
        v = e.getParameter(36349),
        g = l > 0,
        y = o || !!t.get("OES_texture_float");
    return {
        isWebGL2: o,
        getMaxAnisotropy: function()
        {
            if (void 0 !== r) return r;
            var n = t.get("EXT_texture_filter_anisotropic");
            return r = null !== n ? e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0
        },
        getMaxPrecision: i,
        precision: a,
        logarithmicDepthBuffer: c,
        maxTextures: u,
        maxVertexTextures: l,
        maxTextureSize: f,
        maxCubemapSize: h,
        maxAttributes: d,
        maxVertexUniforms: p,
        maxVaryings: m,
        maxFragmentUniforms: v,
        vertexTextures: g,
        floatFragmentTextures: y,
        floatVertexTextures: g && y,
        maxSamples: o ? e.getParameter(36183) : 0
    }
}

function tu()
{
    var e = this,
        t = null,
        n = 0,
        r = !1,
        i = !1,
        o = new ys,
        a = new la,
        s = {
            value: null,
            needsUpdate: !1
        };

    function c()
    {
        s.value !== t && (s.value = t, s.needsUpdate = n > 0), e.numPlanes = n, e.numIntersection = 0
    }

    function u(t, n, r, i)
    {
        var c = null !== t ? t.length : 0,
            u = null;
        if (0 !== c)
        {
            if (u = s.value, !0 !== i || null === u)
            {
                var l = r + 4 * c,
                    f = n.matrixWorldInverse;
                a.getNormalMatrix(f), (null === u || u.length < l) && (u = new Float32Array(l));
                for (var h = 0, d = r; h !== c; ++h, d += 4) o.copy(t[h]).applyMatrix4(f, a), o.normal.toArray(u, d), u[d + 3] = o.constant
            }
            s.value = u, s.needsUpdate = !0
        }
        return e.numPlanes = c, u
    }
    this.uniform = s, this.numPlanes = 0, this.numIntersection = 0, this.init = function(e, i, o)
    {
        var a = 0 !== e.length || i || 0 !== n || r;
        return r = i, t = u(e, o, 0), n = e.length, a
    }, this.beginShadows = function()
    {
        i = !0, u(null)
    }, this.endShadows = function()
    {
        i = !1, c()
    }, this.setState = function(e, o, a, l, f, h)
    {
        if (!r || null === e || 0 === e.length || i && !a) i ? u(null) : c();
        else
        {
            var d = i ? 0 : n,
                p = 4 * d,
                m = f.clippingState || null;
            s.value = m, m = u(e, l, p, h);
            for (var v = 0; v !== p; ++v) m[v] = t[v];
            f.clippingState = m, this.numIntersection = o ? this.numPlanes : 0, this.numPlanes += d
        }
    }
}

function nu(e)
{
    var t = {};
    return {
        get: function(n)
        {
            if (void 0 !== t[n]) return t[n];
            var r;
            switch (n)
            {
                case "WEBGL_depth_texture":
                    r = e.getExtension("WEBGL_depth_texture") || e.getExtension("MOZ_WEBGL_depth_texture") || e.getExtension("WEBKIT_WEBGL_depth_texture");
                    break;
                case "EXT_texture_filter_anisotropic":
                    r = e.getExtension("EXT_texture_filter_anisotropic") || e.getExtension("MOZ_EXT_texture_filter_anisotropic") || e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");
                    break;
                case "WEBGL_compressed_texture_s3tc":
                    r = e.getExtension("WEBGL_compressed_texture_s3tc") || e.getExtension("MOZ_WEBGL_compressed_texture_s3tc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");
                    break;
                case "WEBGL_compressed_texture_pvrtc":
                    r = e.getExtension("WEBGL_compressed_texture_pvrtc") || e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");
                    break;
                default:
                    r = e.getExtension(n)
            }
            return null === r && console.warn("THREE.WebGLRenderer: " + n + " extension not supported."), t[n] = r, r
        }
    }
}

function ru(e, t, n)
{
    var r = new WeakMap,
        i = new WeakMap;

    function o(e)
    {
        var a = e.target,
            s = r.get(a);
        for (var c in null !== s.index && t.remove(s.index), s.attributes) t.remove(s.attributes[c]);
        a.removeEventListener("dispose", o), r.delete(a);
        var u = i.get(s);
        u && (t.remove(u), i.delete(s)), n.memory.geometries--
    }

    function a(e)
    {
        var n = [],
            r = e.index,
            o = e.attributes.position,
            a = 0;
        if (null !== r)
        {
            var s = r.array;
            a = r.version;
            for (var c = 0, u = s.length; c < u; c += 3)
            {
                var l = s[c + 0],
                    f = s[c + 1],
                    h = s[c + 2];
                n.push(l, f, f, h, h, l)
            }
        }
        else
        {
            s = o.array;
            a = o.version;
            for (c = 0, u = s.length / 3 - 1; c < u; c += 3)
            {
                l = c + 0, f = c + 1, h = c + 2;
                n.push(l, f, f, h, h, l)
            }
        }
        var d = new(Qs(n) > 65535 ? Ys : $s)(n, 1);
        d.version = a, t.update(d, 34963);
        var p = i.get(e);
        p && t.remove(p), i.set(e, d)
    }
    return {
        get: function(e, t)
        {
            var i = r.get(t);
            return i || (t.addEventListener("dispose", o), t.isBufferGeometry ? i = t : t.isGeometry && (void 0 === t._bufferGeometry && (t._bufferGeometry = (new sc).setFromObject(e)), i = t._bufferGeometry), r.set(t, i), n.memory.geometries++, i)
        },
        update: function(e)
        {
            var n = e.index,
                r = e.attributes;
            for (var i in null !== n && t.update(n, 34963), r) t.update(r[i], 34962);
            var o = e.morphAttributes;
            for (var i in o)
                for (var a = o[i], s = 0, c = a.length; s < c; s++) t.update(a[s], 34962)
        },
        getWireframeAttribute: function(e)
        {
            var t = i.get(e);
            if (t)
            {
                var n = e.index;
                null !== n && t.version < n.version && a(e)
            }
            else a(e);
            return i.get(e)
        }
    }
}

function iu(e, t, n, r)
{
    var i, o, a, s = r.isWebGL2;
    this.setMode = function(e)
    {
        i = e
    }, this.setIndex = function(e)
    {
        o = e.type, a = e.bytesPerElement
    }, this.render = function(t, r)
    {
        e.drawElements(i, r, o, t * a), n.update(r, i)
    }, this.renderInstances = function(r, c, u, l)
    {
        if (0 !== l)
        {
            var f, h;
            if (s) f = e, h = "drawElementsInstanced";
            else if (h = "drawElementsInstancedANGLE", null === (f = t.get("ANGLE_instanced_arrays"))) return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");
            f[h](i, u, o, c * a, l), n.update(u, i, l)
        }
    }
}

function ou(e)
{
    var t = {
        frame: 0,
        calls: 0,
        triangles: 0,
        points: 0,
        lines: 0
    };
    return {
        memory:
        {
            geometries: 0,
            textures: 0
        },
        render: t,
        programs: null,
        autoReset: !0,
        reset: function()
        {
            t.frame++, t.calls = 0, t.triangles = 0, t.points = 0, t.lines = 0
        },
        update: function(e, n, r)
        {
            switch (r = r || 1, t.calls++, n)
            {
                case 4:
                    t.triangles += r * (e / 3);
                    break;
                case 1:
                    t.lines += r * (e / 2);
                    break;
                case 3:
                    t.lines += r * (e - 1);
                    break;
                case 2:
                    t.lines += r * e;
                    break;
                case 0:
                    t.points += r * e;
                    break;
                default:
                    console.error("THREE.WebGLInfo: Unknown draw mode:", n)
            }
        }
    }
}

function au(e, t)
{
    return Math.abs(t[1]) - Math.abs(e[1])
}

function su(e)
{
    var t = {},
        n = new Float32Array(8);
    return {
        update: function(r, i, o, a)
        {
            var s = r.morphTargetInfluences,
                c = void 0 === s ? 0 : s.length,
                u = t[i.id];
            if (void 0 === u)
            {
                u = [];
                for (var l = 0; l < c; l++) u[l] = [l, 0];
                t[i.id] = u
            }
            var f = o.morphTargets && i.morphAttributes.position,
                h = o.morphNormals && i.morphAttributes.normal;
            for (l = 0; l < c; l++)
            {
                0 !== (p = u[l])[1] && (f && i.deleteAttribute("morphTarget" + l), h && i.deleteAttribute("morphNormal" + l))
            }
            for (l = 0; l < c; l++)
            {
                (p = u[l])[0] = l, p[1] = s[l]
            }
            u.sort(au);
            var d = 0;
            for (l = 0; l < 8; l++)
            {
                var p;
                if (p = u[l])
                {
                    var m = p[0],
                        v = p[1];
                    if (v)
                    {
                        f && i.setAttribute("morphTarget" + l, f[m]), h && i.setAttribute("morphNormal" + l, h[m]), n[l] = v, d += v;
                        continue
                    }
                }
                n[l] = 0
            }
            var g = i.morphTargetsRelative ? 1 : 1 - d;
            a.getUniforms().setValue(e, "morphTargetBaseInfluence", g), a.getUniforms().setValue(e, "morphTargetInfluences", n)
        }
    }
}

function cu(e, t, n, r)
{
    var i = {};
    return {
        update: function(e)
        {
            var o = r.render.frame,
                a = e.geometry,
                s = t.get(e, a);
            return i[s.id] !== o && (a.isGeometry && s.updateFromObject(e), t.update(s), i[s.id] = o), e.isInstancedMesh && n.update(e.instanceMatrix, 34962), s
        },
        dispose: function()
        {
            i = {}
        }
    }
}

function uu(e, t, n, r, i, o, a, s, c, u)
{
    e = void 0 !== e ? e : [], t = void 0 !== t ? t : 301, a = void 0 !== a ? a : 1022, da.call(this, e, t, n, r, i, o, a, s, c, u), this.flipY = !1
}

function lu(e, t, n, r)
{
    da.call(this, null), this.image = {
        data: e || null,
        width: t || 1,
        height: n || 1,
        depth: r || 1
    }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = !1, this.flipY = !1, this.needsUpdate = !0
}

function fu(e, t, n, r)
{
    da.call(this, null), this.image = {
        data: e || null,
        width: t || 1,
        height: n || 1,
        depth: r || 1
    }, this.magFilter = 1003, this.minFilter = 1003, this.wrapR = 1001, this.generateMipmaps = !1, this.flipY = !1, this.needsUpdate = !0
}
$c.physical = {
    uniforms: Lc([$c.standard.uniforms,
    {
        transparency:
        {
            value: 0
        },
        clearcoat:
        {
            value: 0
        },
        clearcoatRoughness:
        {
            value: 0
        },
        sheen:
        {
            value: new Is(0)
        },
        clearcoatNormalScale:
        {
            value: new ra(1, 1)
        },
        clearcoatNormalMap:
        {
            value: null
        }
    }]),
    vertexShader: Gc.meshphysical_vert,
    fragmentShader: Gc.meshphysical_frag
}, Xc.prototype = Object.create(Rc.prototype), Xc.prototype.constructor = Xc, Jc.prototype = Object.create(sc.prototype), Jc.prototype.constructor = Jc, uu.prototype = Object.create(da.prototype), uu.prototype.constructor = uu, uu.prototype.isCubeTexture = !0, Object.defineProperty(uu.prototype, "images",
{
    get: function()
    {
        return this.image
    },
    set: function(e)
    {
        this.image = e
    }
}), lu.prototype = Object.create(da.prototype), lu.prototype.constructor = lu, lu.prototype.isDataTexture2DArray = !0, fu.prototype = Object.create(da.prototype), fu.prototype.constructor = fu, fu.prototype.isDataTexture3D = !0;
var hu = new da,
    du = new lu,
    pu = new fu,
    mu = new uu,
    vu = [],
    gu = [],
    yu = new Float32Array(16),
    bu = new Float32Array(9),
    wu = new Float32Array(4);

function _u(e, t, n)
{
    var r = e[0];
    if (r <= 0 || r > 0) return e;
    var i = t * n,
        o = vu[i];
    if (void 0 === o && (o = new Float32Array(i), vu[i] = o), 0 !== t)
    {
        r.toArray(o, 0);
        for (var a = 1, s = 0; a !== t; ++a) s += n, e[a].toArray(o, s)
    }
    return o
}

function xu(e, t)
{
    if (e.length !== t.length) return !1;
    for (var n = 0, r = e.length; n < r; n++)
        if (e[n] !== t[n]) return !1;
    return !0
}

function Eu(e, t)
{
    for (var n = 0, r = t.length; n < r; n++) e[n] = t[n]
}

function Su(e, t)
{
    var n = gu[t];
    void 0 === n && (n = new Int32Array(t), gu[t] = n);
    for (var r = 0; r !== t; ++r) n[r] = e.allocateTextureUnit();
    return n
}

function Mu(e, t)
{
    var n = this.cache;
    n[0] !== t && (e.uniform1f(this.addr, t), n[0] = t)
}

function Tu(e, t)
{
    var n = this.cache;
    if (void 0 !== t.x) n[0] === t.x && n[1] === t.y || (e.uniform2f(this.addr, t.x, t.y), n[0] = t.x, n[1] = t.y);
    else
    {
        if (xu(n, t)) return;
        e.uniform2fv(this.addr, t), Eu(n, t)
    }
}

function ku(e, t)
{
    var n = this.cache;
    if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z || (e.uniform3f(this.addr, t.x, t.y, t.z), n[0] = t.x, n[1] = t.y, n[2] = t.z);
    else if (void 0 !== t.r) n[0] === t.r && n[1] === t.g && n[2] === t.b || (e.uniform3f(this.addr, t.r, t.g, t.b), n[0] = t.r, n[1] = t.g, n[2] = t.b);
    else
    {
        if (xu(n, t)) return;
        e.uniform3fv(this.addr, t), Eu(n, t)
    }
}

function Au(e, t)
{
    var n = this.cache;
    if (void 0 !== t.x) n[0] === t.x && n[1] === t.y && n[2] === t.z && n[3] === t.w || (e.uniform4f(this.addr, t.x, t.y, t.z, t.w), n[0] = t.x, n[1] = t.y, n[2] = t.z, n[3] = t.w);
    else
    {
        if (xu(n, t)) return;
        e.uniform4fv(this.addr, t), Eu(n, t)
    }
}

function Cu(e, t)
{
    var n = this.cache,
        r = t.elements;
    if (void 0 === r)
    {
        if (xu(n, t)) return;
        e.uniformMatrix2fv(this.addr, !1, t), Eu(n, t)
    }
    else
    {
        if (xu(n, r)) return;
        wu.set(r), e.uniformMatrix2fv(this.addr, !1, wu), Eu(n, r)
    }
}

function Ou(e, t)
{
    var n = this.cache,
        r = t.elements;
    if (void 0 === r)
    {
        if (xu(n, t)) return;
        e.uniformMatrix3fv(this.addr, !1, t), Eu(n, t)
    }
    else
    {
        if (xu(n, r)) return;
        bu.set(r), e.uniformMatrix3fv(this.addr, !1, bu), Eu(n, r)
    }
}

function Pu(e, t)
{
    var n = this.cache,
        r = t.elements;
    if (void 0 === r)
    {
        if (xu(n, t)) return;
        e.uniformMatrix4fv(this.addr, !1, t), Eu(n, t)
    }
    else
    {
        if (xu(n, r)) return;
        yu.set(r), e.uniformMatrix4fv(this.addr, !1, yu), Eu(n, r)
    }
}

function Ru(e, t, n)
{
    var r = this.cache,
        i = n.allocateTextureUnit();
    r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTexture2D(t || hu, i)
}

function Iu(e, t, n)
{
    var r = this.cache,
        i = n.allocateTextureUnit();
    r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture2DArray(t || du, i)
}

function Nu(e, t, n)
{
    var r = this.cache,
        i = n.allocateTextureUnit();
    r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.setTexture3D(t || pu, i)
}

function Lu(e, t, n)
{
    var r = this.cache,
        i = n.allocateTextureUnit();
    r[0] !== i && (e.uniform1i(this.addr, i), r[0] = i), n.safeSetTextureCube(t || mu, i)
}

function Bu(e, t)
{
    var n = this.cache;
    n[0] !== t && (e.uniform1i(this.addr, t), n[0] = t)
}

function ju(e, t)
{
    var n = this.cache;
    xu(n, t) || (e.uniform2iv(this.addr, t), Eu(n, t))
}

function Fu(e, t)
{
    var n = this.cache;
    xu(n, t) || (e.uniform3iv(this.addr, t), Eu(n, t))
}

function Uu(e, t)
{
    var n = this.cache;
    xu(n, t) || (e.uniform4iv(this.addr, t), Eu(n, t))
}

function Du(e, t)
{
    e.uniform1fv(this.addr, t)
}

function zu(e, t)
{
    e.uniform1iv(this.addr, t)
}

function Hu(e, t)
{
    e.uniform2iv(this.addr, t)
}

function Vu(e, t)
{
    e.uniform3iv(this.addr, t)
}

function Wu(e, t)
{
    e.uniform4iv(this.addr, t)
}

function Gu(e, t)
{
    var n = _u(t, this.size, 2);
    e.uniform2fv(this.addr, n)
}

function qu(e, t)
{
    var n = _u(t, this.size, 3);
    e.uniform3fv(this.addr, n)
}

function $u(e, t)
{
    var n = _u(t, this.size, 4);
    e.uniform4fv(this.addr, n)
}

function Ku(e, t)
{
    var n = _u(t, this.size, 4);
    e.uniformMatrix2fv(this.addr, !1, n)
}

function Yu(e, t)
{
    var n = _u(t, this.size, 9);
    e.uniformMatrix3fv(this.addr, !1, n)
}

function Xu(e, t)
{
    var n = _u(t, this.size, 16);
    e.uniformMatrix4fv(this.addr, !1, n)
}

function Ju(e, t, n)
{
    var r = t.length,
        i = Su(n, r);
    e.uniform1iv(this.addr, i);
    for (var o = 0; o !== r; ++o) n.safeSetTexture2D(t[o] || hu, i[o])
}

function Zu(e, t, n)
{
    var r = t.length,
        i = Su(n, r);
    e.uniform1iv(this.addr, i);
    for (var o = 0; o !== r; ++o) n.safeSetTextureCube(t[o] || mu, i[o])
}

function Qu(e, t, n)
{
    this.id = e, this.addr = n, this.cache = [], this.setValue = function(e)
    {
        switch (e)
        {
            case 5126:
                return Mu;
            case 35664:
                return Tu;
            case 35665:
                return ku;
            case 35666:
                return Au;
            case 35674:
                return Cu;
            case 35675:
                return Ou;
            case 35676:
                return Pu;
            case 35678:
            case 36198:
                return Ru;
            case 35679:
                return Nu;
            case 35680:
                return Lu;
            case 36289:
                return Iu;
            case 5124:
            case 35670:
                return Bu;
            case 35667:
            case 35671:
                return ju;
            case 35668:
            case 35672:
                return Fu;
            case 35669:
            case 35673:
                return Uu
        }
    }(t.type)
}

function el(e, t, n)
{
    this.id = e, this.addr = n, this.cache = [], this.size = t.size, this.setValue = function(e)
    {
        switch (e)
        {
            case 5126:
                return Du;
            case 35664:
                return Gu;
            case 35665:
                return qu;
            case 35666:
                return $u;
            case 35674:
                return Ku;
            case 35675:
                return Yu;
            case 35676:
                return Xu;
            case 35678:
            case 36198:
            case 36298:
            case 36306:
                return Ju;
            case 35680:
            case 36300:
            case 36308:
                return Zu;
            case 5124:
            case 35670:
                return zu;
            case 35667:
            case 35671:
                return Hu;
            case 35668:
            case 35672:
                return Vu;
            case 35669:
            case 35673:
                return Wu
        }
    }(t.type)
}

function tl(e)
{
    this.id = e, this.seq = [], this.map = {}
}
el.prototype.updateCache = function(e)
{
    var t = this.cache;
    e instanceof Float32Array && t.length !== e.length && (this.cache = new Float32Array(e.length)), Eu(t, e)
}, tl.prototype.setValue = function(e, t, n)
{
    for (var r = this.seq, i = 0, o = r.length; i !== o; ++i)
    {
        var a = r[i];
        a.setValue(e, t[a.id], n)
    }
};
var nl = /([\w\d_]+)(\])?(\[|\.)?/g;

function rl(e, t)
{
    e.seq.push(t), e.map[t.id] = t
}

function il(e, t, n)
{
    var r = e.name,
        i = r.length;
    for (nl.lastIndex = 0;;)
    {
        var o = nl.exec(r),
            a = nl.lastIndex,
            s = o[1],
            c = "]" === o[2],
            u = o[3];
        if (c && (s |= 0), void 0 === u || "[" === u && a + 2 === i)
        {
            rl(n, void 0 === u ? new Qu(s, e, t) : new el(s, e, t));
            break
        }
        var l = n.map[s];
        void 0 === l && rl(n, l = new tl(s)), n = l
    }
}

function ol(e, t)
{
    this.seq = [], this.map = {};
    for (var n = e.getProgramParameter(t, 35718), r = 0; r < n; ++r)
    {
        var i = e.getActiveUniform(t, r);
        il(i, e.getUniformLocation(t, i.name), this)
    }
}

function al(e, t, n)
{
    var r = e.createShader(t);
    return e.shaderSource(r, n), e.compileShader(r), r
}
ol.prototype.setValue = function(e, t, n, r)
{
    var i = this.map[t];
    void 0 !== i && i.setValue(e, n, r)
}, ol.prototype.setOptional = function(e, t, n)
{
    var r = t[n];
    void 0 !== r && this.setValue(e, n, r)
}, ol.upload = function(e, t, n, r)
{
    for (var i = 0, o = t.length; i !== o; ++i)
    {
        var a = t[i],
            s = n[a.id];
        !1 !== s.needsUpdate && a.setValue(e, s.value, r)
    }
}, ol.seqWithValue = function(e, t)
{
    for (var n = [], r = 0, i = e.length; r !== i; ++r)
    {
        var o = e[r];
        o.id in t && n.push(o)
    }
    return n
};
var sl = 0;

function cl(e)
{
    switch (e)
    {
        case 3e3:
            return ["Linear", "( value )"];
        case 3001:
            return ["sRGB", "( value )"];
        case 3002:
            return ["RGBE", "( value )"];
        case 3004:
            return ["RGBM", "( value, 7.0 )"];
        case 3005:
            return ["RGBM", "( value, 16.0 )"];
        case 3006:
            return ["RGBD", "( value, 256.0 )"];
        case 3007:
            return ["Gamma", "( value, float( GAMMA_FACTOR ) )"];
        case 3003:
            return ["LogLuv", "( value )"];
        default:
            throw new Error("unsupported encoding: " + e)
    }
}

function ul(e, t, n)
{
    var r = e.getShaderParameter(t, 35713),
        i = e.getShaderInfoLog(t).trim();
    return r && "" === i ? "" : "THREE.WebGLShader: gl.getShaderInfoLog() " + n + "\n" + i + function(e)
    {
        for (var t = e.split("\n"), n = 0; n < t.length; n++) t[n] = n + 1 + ": " + t[n];
        return t.join("\n")
    }(e.getShaderSource(t))
}

function ll(e, t)
{
    var n = cl(t);
    return "vec4 " + e + "( vec4 value ) { return " + n[0] + "ToLinear" + n[1] + "; }"
}

function fl(e, t)
{
    var n;
    switch (t)
    {
        case 1:
            n = "Linear";
            break;
        case 2:
            n = "Reinhard";
            break;
        case 3:
            n = "Uncharted2";
            break;
        case 4:
            n = "OptimizedCineon";
            break;
        case 5:
            n = "ACESFilmic";
            break;
        default:
            throw new Error("unsupported toneMapping: " + t)
    }
    return "vec3 " + e + "( vec3 color ) { return " + n + "ToneMapping( color ); }"
}

function hl(e)
{
    return "" !== e
}

function dl(e, t)
{
    return e.replace(/NUM_DIR_LIGHTS/g, t.numDirLights).replace(/NUM_SPOT_LIGHTS/g, t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, t.numPointLights).replace(/NUM_HEMI_LIGHTS/g, t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, t.numPointLightShadows)
}

function pl(e, t)
{
    return e.replace(/NUM_CLIPPING_PLANES/g, t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, t.numClippingPlanes - t.numClipIntersection)
}
var ml = /^[ \t]*#include +<([\w\d./]+)>/gm;

function vl(e)
{
    return e.replace(ml, gl)
}

function gl(e, t)
{
    var n = Gc[t];
    if (void 0 === n) throw new Error("Can not resolve #include <" + t + ">");
    return vl(n)
}
var yl = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;

function bl(e)
{
    return e.replace(yl, wl)
}

function wl(e, t, n, r)
{
    for (var i = "", o = parseInt(t); o < parseInt(n); o++) i += r.replace(/\[ i \]/g, "[ " + o + " ]").replace(/UNROLLED_LOOP_INDEX/g, o);
    return i
}

function _l(e)
{
    var t = "precision " + e.precision + " float;\nprecision " + e.precision + " int;";
    return "highp" === e.precision ? t += "\n#define HIGH_PRECISION" : "mediump" === e.precision ? t += "\n#define MEDIUM_PRECISION" : "lowp" === e.precision && (t += "\n#define LOW_PRECISION"), t
}

function xl(e, t, n, r, i, o)
{
    var a, s, c, u, l, f = e.getContext(),
        h = r.defines,
        d = i.vertexShader,
        p = i.fragmentShader,
        m = function(e)
        {
            var t = "SHADOWMAP_TYPE_BASIC";
            return 1 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF" : 2 === e.shadowMapType ? t = "SHADOWMAP_TYPE_PCF_SOFT" : 3 === e.shadowMapType && (t = "SHADOWMAP_TYPE_VSM"), t
        }(o),
        v = function(e)
        {
            var t = "ENVMAP_TYPE_CUBE";
            if (e.envMap) switch (e.envMapMode)
            {
                case 301:
                case 302:
                    t = "ENVMAP_TYPE_CUBE";
                    break;
                case 306:
                case 307:
                    t = "ENVMAP_TYPE_CUBE_UV";
                    break;
                case 303:
                case 304:
                    t = "ENVMAP_TYPE_EQUIREC";
                    break;
                case 305:
                    t = "ENVMAP_TYPE_SPHERE"
            }
            return t
        }(o),
        g = function(e)
        {
            var t = "ENVMAP_MODE_REFLECTION";
            if (e.envMap) switch (e.envMapMode)
            {
                case 302:
                case 304:
                    t = "ENVMAP_MODE_REFRACTION"
            }
            return t
        }(o),
        y = function(e)
        {
            var t = "ENVMAP_BLENDING_NONE";
            if (e.envMap) switch (e.combine)
            {
                case 0:
                    t = "ENVMAP_BLENDING_MULTIPLY";
                    break;
                case 1:
                    t = "ENVMAP_BLENDING_MIX";
                    break;
                case 2:
                    t = "ENVMAP_BLENDING_ADD"
            }
            return t
        }(o),
        b = e.gammaFactor > 0 ? e.gammaFactor : 1,
        w = o.isWebGL2 ? "" : function(e, t, n)
        {
            return [(e = e ||
            {}).derivatives || t.envMapCubeUV || t.bumpMap || t.tangentSpaceNormalMap || t.clearcoatNormalMap || t.flatShading || "physical" === t.shaderID ? "#extension GL_OES_standard_derivatives : enable" : "", (e.fragDepth || t.logarithmicDepthBuffer) && n.get("EXT_frag_depth") ? "#extension GL_EXT_frag_depth : enable" : "", e.drawBuffers && n.get("WEBGL_draw_buffers") ? "#extension GL_EXT_draw_buffers : require" : "", (e.shaderTextureLOD || t.envMap) && n.get("EXT_shader_texture_lod") ? "#extension GL_EXT_shader_texture_lod : enable" : ""].filter(hl).join("\n")
        }(r.extensions, o, t),
        _ = function(e)
        {
            var t = [];
            for (var n in e)
            {
                var r = e[n];
                !1 !== r && t.push("#define " + n + " " + r)
            }
            return t.join("\n")
        }(h),
        x = f.createProgram(),
        E = o.numMultiviewViews;
    if (r.isRawShaderMaterial ? ((a = [_].filter(hl).join("\n")).length > 0 && (a += "\n"), (s = [w, _].filter(hl).join("\n")).length > 0 && (s += "\n")) : (a = [_l(o), "#define SHADER_NAME " + i.name, _, o.instancing ? "#define USE_INSTANCING" : "", o.supportsVertexTextures ? "#define VERTEX_TEXTURES" : "", "#define GAMMA_FACTOR " + b, "#define MAX_BONES " + o.maxBones, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp2 ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + g : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.normalMap && o.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", o.normalMap && o.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", o.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", o.displacementMap && o.supportsVertexTextures ? "#define USE_DISPLACEMENTMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.vertexTangents ? "#define USE_TANGENT" : "", o.vertexColors ? "#define USE_COLOR" : "", o.vertexUvs ? "#define USE_UV" : "", o.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.skinning ? "#define USE_SKINNING" : "", o.useVertexTexture ? "#define BONE_TEXTURE" : "", o.morphTargets ? "#define USE_MORPHTARGETS" : "", o.morphNormals && !1 === o.flatShading ? "#define USE_MORPHNORMALS" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + m : "", o.sizeAttenuation ? "#define USE_SIZEATTENUATION" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && (o.isWebGL2 || t.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", "uniform mat4 modelMatrix;", "uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", "#ifdef USE_INSTANCING", " attribute mat4 instanceMatrix;", "#endif", "attribute vec3 position;", "attribute vec3 normal;", "attribute vec2 uv;", "#ifdef USE_TANGENT", "\tattribute vec4 tangent;", "#endif", "#ifdef USE_COLOR", "\tattribute vec3 color;", "#endif", "#ifdef USE_MORPHTARGETS", "\tattribute vec3 morphTarget0;", "\tattribute vec3 morphTarget1;", "\tattribute vec3 morphTarget2;", "\tattribute vec3 morphTarget3;", "\t#ifdef USE_MORPHNORMALS", "\t\tattribute vec3 morphNormal0;", "\t\tattribute vec3 morphNormal1;", "\t\tattribute vec3 morphNormal2;", "\t\tattribute vec3 morphNormal3;", "\t#else", "\t\tattribute vec3 morphTarget4;", "\t\tattribute vec3 morphTarget5;", "\t\tattribute vec3 morphTarget6;", "\t\tattribute vec3 morphTarget7;", "\t#endif", "#endif", "#ifdef USE_SKINNING", "\tattribute vec4 skinIndex;", "\tattribute vec4 skinWeight;", "#endif", "\n"].filter(hl).join("\n"), s = [w, _l(o), "#define SHADER_NAME " + i.name, _, o.alphaTest ? "#define ALPHATEST " + o.alphaTest + (o.alphaTest % 1 ? "" : ".0") : "", "#define GAMMA_FACTOR " + b, o.useFog && o.fog ? "#define USE_FOG" : "", o.useFog && o.fogExp2 ? "#define FOG_EXP2" : "", o.map ? "#define USE_MAP" : "", o.matcap ? "#define USE_MATCAP" : "", o.envMap ? "#define USE_ENVMAP" : "", o.envMap ? "#define " + v : "", o.envMap ? "#define " + g : "", o.envMap ? "#define " + y : "", o.lightMap ? "#define USE_LIGHTMAP" : "", o.aoMap ? "#define USE_AOMAP" : "", o.emissiveMap ? "#define USE_EMISSIVEMAP" : "", o.bumpMap ? "#define USE_BUMPMAP" : "", o.normalMap ? "#define USE_NORMALMAP" : "", o.normalMap && o.objectSpaceNormalMap ? "#define OBJECTSPACE_NORMALMAP" : "", o.normalMap && o.tangentSpaceNormalMap ? "#define TANGENTSPACE_NORMALMAP" : "", o.clearcoatNormalMap ? "#define USE_CLEARCOAT_NORMALMAP" : "", o.specularMap ? "#define USE_SPECULARMAP" : "", o.roughnessMap ? "#define USE_ROUGHNESSMAP" : "", o.metalnessMap ? "#define USE_METALNESSMAP" : "", o.alphaMap ? "#define USE_ALPHAMAP" : "", o.sheen ? "#define USE_SHEEN" : "", o.vertexTangents ? "#define USE_TANGENT" : "", o.vertexColors ? "#define USE_COLOR" : "", o.vertexUvs ? "#define USE_UV" : "", o.uvsVertexOnly ? "#define UVS_VERTEX_ONLY" : "", o.gradientMap ? "#define USE_GRADIENTMAP" : "", o.flatShading ? "#define FLAT_SHADED" : "", o.doubleSided ? "#define DOUBLE_SIDED" : "", o.flipSided ? "#define FLIP_SIDED" : "", o.shadowMapEnabled ? "#define USE_SHADOWMAP" : "", o.shadowMapEnabled ? "#define " + m : "", o.premultipliedAlpha ? "#define PREMULTIPLIED_ALPHA" : "", o.physicallyCorrectLights ? "#define PHYSICALLY_CORRECT_LIGHTS" : "", o.logarithmicDepthBuffer ? "#define USE_LOGDEPTHBUF" : "", o.logarithmicDepthBuffer && (o.isWebGL2 || t.get("EXT_frag_depth")) ? "#define USE_LOGDEPTHBUF_EXT" : "", (r.extensions && r.extensions.shaderTextureLOD || o.envMap) && (o.isWebGL2 || t.get("EXT_shader_texture_lod")) ? "#define TEXTURE_LOD_EXT" : "", "uniform mat4 viewMatrix;", "uniform vec3 cameraPosition;", "uniform bool isOrthographic;", 0 !== o.toneMapping ? "#define TONE_MAPPING" : "", 0 !== o.toneMapping ? Gc.tonemapping_pars_fragment : "", 0 !== o.toneMapping ? fl("toneMapping", o.toneMapping) : "", o.dithering ? "#define DITHERING" : "", o.outputEncoding || o.mapEncoding || o.matcapEncoding || o.envMapEncoding || o.emissiveMapEncoding || o.lightMapEncoding ? Gc.encodings_pars_fragment : "", o.mapEncoding ? ll("mapTexelToLinear", o.mapEncoding) : "", o.matcapEncoding ? ll("matcapTexelToLinear", o.matcapEncoding) : "", o.envMapEncoding ? ll("envMapTexelToLinear", o.envMapEncoding) : "", o.emissiveMapEncoding ? ll("emissiveMapTexelToLinear", o.emissiveMapEncoding) : "", o.lightMapEncoding ? ll("lightMapTexelToLinear", o.lightMapEncoding) : "", o.outputEncoding ? (c = "linearToOutputTexel", u = o.outputEncoding, l = cl(u), "vec4 " + c + "( vec4 value ) { return LinearTo" + l[0] + l[1] + "; }") : "", o.depthPacking ? "#define DEPTH_PACKING " + r.depthPacking : "", "\n"].filter(hl).join("\n")), d = pl(d = dl(d = vl(d), o), o), p = pl(p = dl(p = vl(p), o), o), d = bl(d), p = bl(p), o.isWebGL2 && !r.isRawShaderMaterial)
    {
        var S = !1,
            M = /^\s*#version\s+300\s+es\s*\n/;
        r.isShaderMaterial && null !== d.match(M) && null !== p.match(M) && (S = !0, d = d.replace(M, ""), p = p.replace(M, "")), a = ["#version 300 es\n", "#define attribute in", "#define varying out", "#define texture2D texture"].join("\n") + "\n" + a, s = ["#version 300 es\n", "#define varying in", S ? "" : "out highp vec4 pc_fragColor;", S ? "" : "#define gl_FragColor pc_fragColor", "#define gl_FragDepthEXT gl_FragDepth", "#define texture2D texture", "#define textureCube texture", "#define texture2DProj textureProj", "#define texture2DLodEXT textureLod", "#define texture2DProjLodEXT textureProjLod", "#define textureCubeLodEXT textureLod", "#define texture2DGradEXT textureGrad", "#define texture2DProjGradEXT textureProjGrad", "#define textureCubeGradEXT textureGrad"].join("\n") + "\n" + s, E > 0 && (a = (a = a.replace("#version 300 es\n", ["#version 300 es\n", "#extension GL_OVR_multiview2 : require", "layout(num_views = " + E + ") in;", "#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace(["uniform mat4 modelViewMatrix;", "uniform mat4 projectionMatrix;", "uniform mat4 viewMatrix;", "uniform mat3 normalMatrix;"].join("\n"), ["uniform mat4 modelViewMatrices[" + E + "];", "uniform mat4 projectionMatrices[" + E + "];", "uniform mat4 viewMatrices[" + E + "];", "uniform mat3 normalMatrices[" + E + "];", "#define modelViewMatrix modelViewMatrices[VIEW_ID]", "#define projectionMatrix projectionMatrices[VIEW_ID]", "#define viewMatrix viewMatrices[VIEW_ID]", "#define normalMatrix normalMatrices[VIEW_ID]"].join("\n")), s = (s = s.replace("#version 300 es\n", ["#version 300 es\n", "#extension GL_OVR_multiview2 : require", "#define VIEW_ID gl_ViewID_OVR"].join("\n"))).replace("uniform mat4 viewMatrix;", ["uniform mat4 viewMatrices[" + E + "];", "#define viewMatrix viewMatrices[VIEW_ID]"].join("\n")))
    }
    var T, k, A = s + p,
        C = al(f, 35633, a + d),
        O = al(f, 35632, A);
    if (f.attachShader(x, C), f.attachShader(x, O), void 0 !== r.index0AttributeName ? f.bindAttribLocation(x, 0, r.index0AttributeName) : !0 === o.morphTargets && f.bindAttribLocation(x, 0, "position"), f.linkProgram(x), e.debug.checkShaderErrors)
    {
        var P = f.getProgramInfoLog(x).trim(),
            R = f.getShaderInfoLog(C).trim(),
            I = f.getShaderInfoLog(O).trim(),
            N = !0,
            L = !0;
        if (!1 === f.getProgramParameter(x, 35714))
        {
            N = !1;
            var B = ul(f, C, "vertex"),
                j = ul(f, O, "fragment");
            console.error("THREE.WebGLProgram: shader error: ", f.getError(), "35715", f.getProgramParameter(x, 35715), "gl.getProgramInfoLog", P, B, j)
        }
        else "" !== P ? console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()", P) : "" !== R && "" !== I || (L = !1);
        L && (this.diagnostics = {
            runnable: N,
            material: r,
            programLog: P,
            vertexShader:
            {
                log: R,
                prefix: a
            },
            fragmentShader:
            {
                log: I,
                prefix: s
            }
        })
    }
    return f.deleteShader(C), f.deleteShader(O), this.getUniforms = function()
    {
        return void 0 === T && (T = new ol(f, x)), T
    }, this.getAttributes = function()
    {
        return void 0 === k && (k = function(e, t)
        {
            for (var n = {}, r = e.getProgramParameter(t, 35721), i = 0; i < r; i++)
            {
                var o = e.getActiveAttrib(t, i).name;
                n[o] = e.getAttribLocation(t, o)
            }
            return n
        }(f, x)), k
    }, this.destroy = function()
    {
        f.deleteProgram(x), this.program = void 0
    }, this.name = i.name, this.id = sl++, this.cacheKey = n, this.usedTimes = 1, this.program = x, this.vertexShader = C, this.fragmentShader = O, this.numMultiviewViews = E, this
}

function El(e, t, n)
{
    var r = [],
        i = n.isWebGL2,
        o = n.logarithmicDepthBuffer,
        a = n.floatVertexTextures,
        s = n.precision,
        c = n.maxVertexUniforms,
        u = n.vertexTextures,
        l = {
            MeshDepthMaterial: "depth",
            MeshDistanceMaterial: "distanceRGBA",
            MeshNormalMaterial: "normal",
            MeshBasicMaterial: "basic",
            MeshLambertMaterial: "lambert",
            MeshPhongMaterial: "phong",
            MeshToonMaterial: "toon",
            MeshStandardMaterial: "physical",
            MeshPhysicalMaterial: "physical",
            MeshMatcapMaterial: "matcap",
            LineBasicMaterial: "basic",
            LineDashedMaterial: "dashed",
            PointsMaterial: "points",
            ShadowMaterial: "shadow",
            SpriteMaterial: "sprite"
        },
        f = ["precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing", "numMultiviewViews", "map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV", "lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatNormalMap", "displacementMap", "specularMap", "roughnessMap", "metalnessMap", "gradientMap", "alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2", "flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning", "maxBones", "useVertexTexture", "morphTargets", "morphNormals", "maxMorphTargets", "maxMorphNormals", "premultipliedAlpha", "numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights", "numDirLightShadows", "numPointLightShadows", "numSpotLightShadows", "shadowMapEnabled", "shadowMapType", "toneMapping", "physicallyCorrectLights", "alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering", "sheen"];

    function h(e)
    {
        var t;
        return e ? e.isTexture ? t = e.encoding : e.isWebGLRenderTarget && (console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."), t = e.texture.encoding) : t = 3e3, t
    }
    this.getParameters = function(t, r, f, d, p, m, v)
    {
        var g = d.fog,
            y = t.isMeshStandardMaterial ? d.environment : null,
            b = t.envMap || y,
            w = l[t.type],
            _ = v.isSkinnedMesh ? function(e)
            {
                var t = e.skeleton.bones;
                if (a) return 1024;
                var n = c,
                    r = Math.floor((n - 20) / 4),
                    i = Math.min(r, t.length);
                return i < t.length ? (console.warn("THREE.WebGLRenderer: Skeleton has " + t.length + " bones. This GPU supports " + i + "."), 0) : i
            }(v) : 0;
        null !== t.precision && (s = n.getMaxPrecision(t.precision)) !== t.precision && console.warn("THREE.WebGLProgram.getParameters:", t.precision, "not supported, using", s, "instead.");
        var x = e.getRenderTarget(),
            E = x && x.isWebGLMultiviewRenderTarget ? x.numViews : 0;
        return {
            isWebGL2: i,
            shaderID: w,
            precision: s,
            instancing: !0 === v.isInstancedMesh,
            supportsVertexTextures: u,
            numMultiviewViews: E,
            outputEncoding: null !== x ? h(x.texture) : e.outputEncoding,
            map: !!t.map,
            mapEncoding: h(t.map),
            matcap: !!t.matcap,
            matcapEncoding: h(t.matcap),
            envMap: !!b,
            envMapMode: b && b.mapping,
            envMapEncoding: h(b),
            envMapCubeUV: !!b && (306 === b.mapping || 307 === b.mapping),
            lightMap: !!t.lightMap,
            lightMapEncoding: h(t.lightMap),
            aoMap: !!t.aoMap,
            emissiveMap: !!t.emissiveMap,
            emissiveMapEncoding: h(t.emissiveMap),
            bumpMap: !!t.bumpMap,
            normalMap: !!t.normalMap,
            objectSpaceNormalMap: 1 === t.normalMapType,
            tangentSpaceNormalMap: 0 === t.normalMapType,
            clearcoatNormalMap: !!t.clearcoatNormalMap,
            displacementMap: !!t.displacementMap,
            roughnessMap: !!t.roughnessMap,
            metalnessMap: !!t.metalnessMap,
            specularMap: !!t.specularMap,
            alphaMap: !!t.alphaMap,
            gradientMap: !!t.gradientMap,
            sheen: !!t.sheen,
            combine: t.combine,
            vertexTangents: t.normalMap && t.vertexTangents,
            vertexColors: t.vertexColors,
            vertexUvs: !!(t.map || t.bumpMap || t.normalMap || t.specularMap || t.alphaMap || t.emissiveMap || t.roughnessMap || t.metalnessMap || t.clearcoatNormalMap || t.displacementMap),
            uvsVertexOnly: !(t.map || t.bumpMap || t.normalMap || t.specularMap || t.alphaMap || t.emissiveMap || t.roughnessMap || t.metalnessMap || t.clearcoatNormalMap || !t.displacementMap),
            fog: !!g,
            useFog: t.fog,
            fogExp2: g && g.isFogExp2,
            flatShading: t.flatShading,
            sizeAttenuation: t.sizeAttenuation,
            logarithmicDepthBuffer: o,
            skinning: t.skinning && _ > 0,
            maxBones: _,
            useVertexTexture: a,
            morphTargets: t.morphTargets,
            morphNormals: t.morphNormals,
            maxMorphTargets: e.maxMorphTargets,
            maxMorphNormals: e.maxMorphNormals,
            numDirLights: r.directional.length,
            numPointLights: r.point.length,
            numSpotLights: r.spot.length,
            numRectAreaLights: r.rectArea.length,
            numHemiLights: r.hemi.length,
            numDirLightShadows: r.directionalShadowMap.length,
            numPointLightShadows: r.pointShadowMap.length,
            numSpotLightShadows: r.spotShadowMap.length,
            numClippingPlanes: p,
            numClipIntersection: m,
            dithering: t.dithering,
            shadowMapEnabled: e.shadowMap.enabled && f.length > 0,
            shadowMapType: e.shadowMap.type,
            toneMapping: t.toneMapped ? e.toneMapping : 0,
            physicallyCorrectLights: e.physicallyCorrectLights,
            premultipliedAlpha: t.premultipliedAlpha,
            alphaTest: t.alphaTest,
            doubleSided: 2 === t.side,
            flipSided: 1 === t.side,
            depthPacking: void 0 !== t.depthPacking && t.depthPacking
        }
    }, this.getProgramCacheKey = function(t, n)
    {
        var r = [];
        if (n.shaderID ? r.push(n.shaderID) : (r.push(t.fragmentShader), r.push(t.vertexShader)), void 0 !== t.defines)
            for (var i in t.defines) r.push(i), r.push(t.defines[i]);
        if (void 0 === t.isRawShaderMaterial)
        {
            for (var o = 0; o < f.length; o++) r.push(n[f[o]]);
            r.push(e.outputEncoding), r.push(e.gammaFactor)
        }
        return r.push(t.onBeforeCompile.toString()), r.join()
    }, this.acquireProgram = function(n, i, o, a)
    {
        for (var s, c = 0, u = r.length; c < u; c++)
        {
            var l = r[c];
            if (l.cacheKey === a)
            {
                ++(s = l).usedTimes;
                break
            }
        }
        return void 0 === s && (s = new xl(e, t, a, n, i, o), r.push(s)), s
    }, this.releaseProgram = function(e)
    {
        if (0 == --e.usedTimes)
        {
            var t = r.indexOf(e);
            r[t] = r[r.length - 1], r.pop(), e.destroy()
        }
    }, this.programs = r
}

function Sl()
{
    var e = new WeakMap;
    return {
        get: function(t)
        {
            var n = e.get(t);
            return void 0 === n && (n = {}, e.set(t, n)), n
        },
        remove: function(t)
        {
            e.delete(t)
        },
        update: function(t, n, r)
        {
            e.get(t)[n] = r
        },
        dispose: function()
        {
            e = new WeakMap
        }
    }
}

function Ml(e, t)
{
    return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.program !== t.program ? e.program.id - t.program.id : e.material.id !== t.material.id ? e.material.id - t.material.id : e.z !== t.z ? e.z - t.z : e.id - t.id
}

function Tl(e, t)
{
    return e.groupOrder !== t.groupOrder ? e.groupOrder - t.groupOrder : e.renderOrder !== t.renderOrder ? e.renderOrder - t.renderOrder : e.z !== t.z ? t.z - e.z : e.id - t.id
}

function kl()
{
    var e = [],
        t = 0,
        n = [],
        r = [],
        i = {
            id: -1
        };

    function o(n, r, o, a, s, c)
    {
        var u = e[t];
        return void 0 === u ? (u = {
            id: n.id,
            object: n,
            geometry: r,
            material: o,
            program: o.program || i,
            groupOrder: a,
            renderOrder: n.renderOrder,
            z: s,
            group: c
        }, e[t] = u) : (u.id = n.id, u.object = n, u.geometry = r, u.material = o, u.program = o.program || i, u.groupOrder = a, u.renderOrder = n.renderOrder, u.z = s, u.group = c), t++, u
    }
    return {
        opaque: n,
        transparent: r,
        init: function()
        {
            t = 0, n.length = 0, r.length = 0
        },
        push: function(e, t, i, a, s, c)
        {
            var u = o(e, t, i, a, s, c);
            (!0 === i.transparent ? r : n).push(u)
        },
        unshift: function(e, t, i, a, s, c)
        {
            var u = o(e, t, i, a, s, c);
            (!0 === i.transparent ? r : n).unshift(u)
        },
        sort: function(e, t)
        {
            n.length > 1 && n.sort(e || Ml), r.length > 1 && r.sort(t || Tl)
        }
    }
}

function Al()
{
    var e = new WeakMap;

    function t(n)
    {
        var r = n.target;
        r.removeEventListener("dispose", t), e.delete(r)
    }
    return {
        get: function(n, r)
        {
            var i, o = e.get(n);
            return void 0 === o ? (i = new kl, e.set(n, new WeakMap), e.get(n).set(r, i), n.addEventListener("dispose", t)) : void 0 === (i = o.get(r)) && (i = new kl, o.set(r, i)), i
        },
        dispose: function()
        {
            e = new WeakMap
        }
    }
}

function Cl()
{
    var e = {};
    return {
        get: function(t)
        {
            if (void 0 !== e[t.id]) return e[t.id];
            var n;
            switch (t.type)
            {
                case "DirectionalLight":
                    n = {
                        direction: new sa,
                        color: new Is,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new ra
                    };
                    break;
                case "SpotLight":
                    n = {
                        position: new sa,
                        direction: new sa,
                        color: new Is,
                        distance: 0,
                        coneCos: 0,
                        penumbraCos: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new ra
                    };
                    break;
                case "PointLight":
                    n = {
                        position: new sa,
                        color: new Is,
                        distance: 0,
                        decay: 0,
                        shadow: !1,
                        shadowBias: 0,
                        shadowRadius: 1,
                        shadowMapSize: new ra,
                        shadowCameraNear: 1,
                        shadowCameraFar: 1e3
                    };
                    break;
                case "HemisphereLight":
                    n = {
                        direction: new sa,
                        skyColor: new Is,
                        groundColor: new Is
                    };
                    break;
                case "RectAreaLight":
                    n = {
                        color: new Is,
                        position: new sa,
                        halfWidth: new sa,
                        halfHeight: new sa
                    }
            }
            return e[t.id] = n, n
        }
    }
}
var Ol = 0;

function Pl(e, t)
{
    return (t.castShadow ? 1 : 0) - (e.castShadow ? 1 : 0)
}

function Rl()
{
    for (var e = new Cl, t = {
            version: 0,
            hash:
            {
                directionalLength: -1,
                pointLength: -1,
                spotLength: -1,
                rectAreaLength: -1,
                hemiLength: -1,
                numDirectionalShadows: -1,
                numPointShadows: -1,
                numSpotShadows: -1
            },
            ambient: [0, 0, 0],
            probe: [],
            directional: [],
            directionalShadowMap: [],
            directionalShadowMatrix: [],
            spot: [],
            spotShadowMap: [],
            spotShadowMatrix: [],
            rectArea: [],
            point: [],
            pointShadowMap: [],
            pointShadowMatrix: [],
            hemi: [],
            numDirectionalShadows: -1,
            numPointShadows: -1,
            numSpotShadows: -1
        }, n = 0; n < 9; n++) t.probe.push(new sa);
    var r = new sa,
        i = new Sa,
        o = new Sa;
    return {
        setup: function(n, a, s)
        {
            for (var c = 0, u = 0, l = 0, f = 0; f < 9; f++) t.probe[f].set(0, 0, 0);
            var h = 0,
                d = 0,
                p = 0,
                m = 0,
                v = 0,
                g = 0,
                y = 0,
                b = 0,
                w = s.matrixWorldInverse;
            n.sort(Pl), f = 0;
            for (var _ = n.length; f < _; f++)
            {
                var x = n[f],
                    E = x.color,
                    S = x.intensity,
                    M = x.distance,
                    T = x.shadow && x.shadow.map ? x.shadow.map.texture : null;
                if (x.isAmbientLight) c += E.r * S, u += E.g * S, l += E.b * S;
                else if (x.isLightProbe)
                    for (var k = 0; k < 9; k++) t.probe[k].addScaledVector(x.sh.coefficients[k], S);
                else if (x.isDirectionalLight)
                {
                    if ((C = e.get(x)).color.copy(x.color).multiplyScalar(x.intensity), C.direction.setFromMatrixPosition(x.matrixWorld), r.setFromMatrixPosition(x.target.matrixWorld), C.direction.sub(r), C.direction.transformDirection(w), C.shadow = x.castShadow, x.castShadow)
                    {
                        var A = x.shadow;
                        C.shadowBias = A.bias, C.shadowRadius = A.radius, C.shadowMapSize = A.mapSize, t.directionalShadowMap[h] = T, t.directionalShadowMatrix[h] = x.shadow.matrix, g++
                    }
                    t.directional[h] = C, h++
                }
                else if (x.isSpotLight)
                {
                    if ((C = e.get(x)).position.setFromMatrixPosition(x.matrixWorld), C.position.applyMatrix4(w), C.color.copy(E).multiplyScalar(S), C.distance = M, C.direction.setFromMatrixPosition(x.matrixWorld), r.setFromMatrixPosition(x.target.matrixWorld), C.direction.sub(r), C.direction.transformDirection(w), C.coneCos = Math.cos(x.angle), C.penumbraCos = Math.cos(x.angle * (1 - x.penumbra)), C.decay = x.decay, C.shadow = x.castShadow, x.castShadow)
                    {
                        A = x.shadow;
                        C.shadowBias = A.bias, C.shadowRadius = A.radius, C.shadowMapSize = A.mapSize, t.spotShadowMap[p] = T, t.spotShadowMatrix[p] = x.shadow.matrix, b++
                    }
                    t.spot[p] = C, p++
                }
                else if (x.isRectAreaLight)
                {
                    (C = e.get(x)).color.copy(E).multiplyScalar(S), C.position.setFromMatrixPosition(x.matrixWorld), C.position.applyMatrix4(w), o.identity(), i.copy(x.matrixWorld), i.premultiply(w), o.extractRotation(i), C.halfWidth.set(.5 * x.width, 0, 0), C.halfHeight.set(0, .5 * x.height, 0), C.halfWidth.applyMatrix4(o), C.halfHeight.applyMatrix4(o), t.rectArea[m] = C, m++
                }
                else if (x.isPointLight)
                {
                    if ((C = e.get(x)).position.setFromMatrixPosition(x.matrixWorld), C.position.applyMatrix4(w), C.color.copy(x.color).multiplyScalar(x.intensity), C.distance = x.distance, C.decay = x.decay, C.shadow = x.castShadow, x.castShadow)
                    {
                        A = x.shadow;
                        C.shadowBias = A.bias, C.shadowRadius = A.radius, C.shadowMapSize = A.mapSize, C.shadowCameraNear = A.camera.near, C.shadowCameraFar = A.camera.far, t.pointShadowMap[d] = T, t.pointShadowMatrix[d] = x.shadow.matrix, y++
                    }
                    t.point[d] = C, d++
                }
                else if (x.isHemisphereLight)
                {
                    var C;
                    (C = e.get(x)).direction.setFromMatrixPosition(x.matrixWorld), C.direction.transformDirection(w), C.direction.normalize(), C.skyColor.copy(x.color).multiplyScalar(S), C.groundColor.copy(x.groundColor).multiplyScalar(S), t.hemi[v] = C, v++
                }
            }
            t.ambient[0] = c, t.ambient[1] = u, t.ambient[2] = l;
            var O = t.hash;
            O.directionalLength === h && O.pointLength === d && O.spotLength === p && O.rectAreaLength === m && O.hemiLength === v && O.numDirectionalShadows === g && O.numPointShadows === y && O.numSpotShadows === b || (t.directional.length = h, t.spot.length = p, t.rectArea.length = m, t.point.length = d, t.hemi.length = v, t.directionalShadowMap.length = g, t.pointShadowMap.length = y, t.spotShadowMap.length = b, t.directionalShadowMatrix.length = g, t.pointShadowMatrix.length = y, t.spotShadowMatrix.length = b, O.directionalLength = h, O.pointLength = d, O.spotLength = p, O.rectAreaLength = m, O.hemiLength = v, O.numDirectionalShadows = g, O.numPointShadows = y, O.numSpotShadows = b, t.version = Ol++)
        },
        state: t
    }
}

function Il()
{
    var e = new Rl,
        t = [],
        n = [];
    return {
        init: function()
        {
            t.length = 0, n.length = 0
        },
        state:
        {
            lightsArray: t,
            shadowsArray: n,
            lights: e
        },
        setupLights: function(r)
        {
            e.setup(t, n, r)
        },
        pushLight: function(e)
        {
            t.push(e)
        },
        pushShadow: function(e)
        {
            n.push(e)
        }
    }
}

function Nl()
{
    var e = new WeakMap;

    function t(n)
    {
        var r = n.target;
        r.removeEventListener("dispose", t), e.delete(r)
    }
    return {
        get: function(n, r)
        {
            var i;
            return !1 === e.has(n) ? (i = new Il, e.set(n, new WeakMap), e.get(n).set(r, i), n.addEventListener("dispose", t)) : !1 === e.get(n).has(r) ? (i = new Il, e.get(n).set(r, i)) : i = e.get(n).get(r), i
        },
        dispose: function()
        {
            e = new WeakMap
        }
    }
}

function Ll(e)
{
    Us.call(this), this.type = "MeshDepthMaterial", this.depthPacking = 3200, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.setValues(e)
}

function Bl(e)
{
    Us.call(this), this.type = "MeshDistanceMaterial", this.referencePosition = new sa, this.nearDistance = 1, this.farDistance = 1e3, this.skinning = !1, this.morphTargets = !1, this.map = null, this.alphaMap = null, this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.fog = !1, this.setValues(e)
}
Ll.prototype = Object.create(Us.prototype), Ll.prototype.constructor = Ll, Ll.prototype.isMeshDepthMaterial = !0, Ll.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.depthPacking = e.depthPacking, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this
}, Bl.prototype = Object.create(Us.prototype), Bl.prototype.constructor = Bl, Bl.prototype.isMeshDistanceMaterial = !0, Bl.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.referencePosition.copy(e.referencePosition), this.nearDistance = e.nearDistance, this.farDistance = e.farDistance, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.map = e.map, this.alphaMap = e.alphaMap, this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this
};

function jl(e, t, n)
{
    var r = new Wc,
        i = new ra,
        o = new ra,
        a = new pa,
        s = [],
        c = [],
        u = {},
        l = {
            0: 1,
            1: 0,
            2: 2
        },
        f = new Bc(
        {
            defines:
            {
                SAMPLE_RATE: 2 / 8,
                HALF_SAMPLE_RATE: 1 / 8
            },
            uniforms:
            {
                shadow_pass:
                {
                    value: null
                },
                resolution:
                {
                    value: new ra
                },
                radius:
                {
                    value: 4
                }
            },
            vertexShader: "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",
            fragmentShader: "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"
        }),
        h = f.clone();
    h.defines.HORIZONAL_PASS = 1;
    var d = new sc;
    d.setAttribute("position", new Hs(new Float32Array([-1, -1, .5, 3, -1, .5, -1, 3, .5]), 3));
    var p = new Mc(d, f),
        m = this;

    function v(n, r)
    {
        var i = t.update(p);
        f.uniforms.shadow_pass.value = n.map.texture, f.uniforms.resolution.value = n.mapSize, f.uniforms.radius.value = n.radius, e.setRenderTarget(n.mapPass), e.clear(), e.renderBufferDirect(r, null, i, f, p, null), h.uniforms.shadow_pass.value = n.mapPass.texture, h.uniforms.resolution.value = n.mapSize, h.uniforms.radius.value = n.radius, e.setRenderTarget(n.map), e.clear(), e.renderBufferDirect(r, null, i, h, p, null)
    }

    function g(e, t, n)
    {
        var r = e << 0 | t << 1 | n << 2,
            i = s[r];
        return void 0 === i && (i = new Ll(
        {
            depthPacking: 3201,
            morphTargets: e,
            skinning: t
        }), s[r] = i), i
    }

    function y(e, t, n)
    {
        var r = e << 0 | t << 1 | n << 2,
            i = c[r];
        return void 0 === i && (i = new Bl(
        {
            morphTargets: e,
            skinning: t
        }), c[r] = i), i
    }

    function b(t, n, r, i, o, a)
    {
        var s = t.geometry,
            c = null,
            f = g,
            h = t.customDepthMaterial;
        if (!0 === r.isPointLight && (f = y, h = t.customDistanceMaterial), void 0 === h)
        {
            var d = !1;
            !0 === n.morphTargets && (!0 === s.isBufferGeometry ? d = s.morphAttributes && s.morphAttributes.position && s.morphAttributes.position.length > 0 : !0 === s.isGeometry && (d = s.morphTargets && s.morphTargets.length > 0));
            var p = !1;
            !0 === t.isSkinnedMesh && (!0 === n.skinning ? p = !0 : console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:", t)), c = f(d, p, !0 === t.isInstancedMesh)
        }
        else c = h;
        if (e.localClippingEnabled && !0 === n.clipShadows && 0 !== n.clippingPlanes.length)
        {
            var m = c.uuid,
                v = n.uuid,
                b = u[m];
            void 0 === b && (b = {}, u[m] = b);
            var w = b[v];
            void 0 === w && (w = c.clone(), b[v] = w), c = w
        }
        return c.visible = n.visible, c.wireframe = n.wireframe, c.side = 3 === a ? null !== n.shadowSide ? n.shadowSide : n.side : null !== n.shadowSide ? n.shadowSide : l[n.side], c.clipShadows = n.clipShadows, c.clippingPlanes = n.clippingPlanes, c.clipIntersection = n.clipIntersection, c.wireframeLinewidth = n.wireframeLinewidth, c.linewidth = n.linewidth, !0 === r.isPointLight && !0 === c.isMeshDistanceMaterial && (c.referencePosition.setFromMatrixPosition(r.matrixWorld), c.nearDistance = i, c.farDistance = o), c
    }

    function w(n, i, o, a, s)
    {
        if (!1 !== n.visible)
        {
            if (n.layers.test(i.layers) && (n.isMesh || n.isLine || n.isPoints) && (n.castShadow || n.receiveShadow && 3 === s) && (!n.frustumCulled || r.intersectsObject(n)))
            {
                n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse, n.matrixWorld);
                var c = t.update(n),
                    u = n.material;
                if (Array.isArray(u))
                    for (var l = c.groups, f = 0, h = l.length; f < h; f++)
                    {
                        var d = l[f],
                            p = u[d.materialIndex];
                        if (p && p.visible)
                        {
                            var m = b(n, p, a, o.near, o.far, s);
                            e.renderBufferDirect(o, null, c, m, n, d)
                        }
                    }
                else if (u.visible)
                {
                    m = b(n, u, a, o.near, o.far, s);
                    e.renderBufferDirect(o, null, c, m, n, null)
                }
            }
            for (var v = n.children, g = 0, y = v.length; g < y; g++) w(v[g], i, o, a, s)
        }
    }
    this.enabled = !1, this.autoUpdate = !0, this.needsUpdate = !1, this.type = 1, this.render = function(t, s, c)
    {
        if (!1 !== m.enabled && (!1 !== m.autoUpdate || !1 !== m.needsUpdate) && 0 !== t.length)
        {
            var u = e.getRenderTarget(),
                l = e.getActiveCubeFace(),
                f = e.getActiveMipmapLevel(),
                h = e.state;
            h.setBlending(0), h.buffers.color.setClear(1, 1, 1, 1), h.buffers.depth.setTest(!0), h.setScissorTest(!1);
            for (var d = 0, p = t.length; d < p; d++)
            {
                var g = t[d],
                    y = g.shadow;
                if (void 0 !== y)
                {
                    i.copy(y.mapSize);
                    var b = y.getFrameExtents();
                    if (i.multiply(b), o.copy(y.mapSize), (i.x > n || i.y > n) && (console.warn("THREE.WebGLShadowMap:", g, "has shadow exceeding max texture size, reducing"), i.x > n && (o.x = Math.floor(n / b.x), i.x = o.x * b.x, y.mapSize.x = o.x), i.y > n && (o.y = Math.floor(n / b.y), i.y = o.y * b.y, y.mapSize.y = o.y)), null === y.map && !y.isPointLightShadow && 3 === this.type)
                    {
                        var _ = {
                            minFilter: 1006,
                            magFilter: 1006,
                            format: 1023
                        };
                        y.map = new ma(i.x, i.y, _), y.map.texture.name = g.name + ".shadowMap", y.mapPass = new ma(i.x, i.y, _), y.camera.updateProjectionMatrix()
                    }
                    if (null === y.map)
                    {
                        _ = {
                            minFilter: 1003,
                            magFilter: 1003,
                            format: 1023
                        };
                        y.map = new ma(i.x, i.y, _), y.map.texture.name = g.name + ".shadowMap", y.camera.updateProjectionMatrix()
                    }
                    e.setRenderTarget(y.map), e.clear();
                    for (var x = y.getViewportCount(), E = 0; E < x; E++)
                    {
                        var S = y.getViewport(E);
                        a.set(o.x * S.x, o.y * S.y, o.x * S.z, o.y * S.w), h.viewport(a), y.updateMatrices(g, E), r = y.getFrustum(), w(s, c, y.camera, g, this.type)
                    }
                    y.isPointLightShadow || 3 !== this.type || v(y, c)
                }
                else console.warn("THREE.WebGLShadowMap:", g, "has no shadow.")
            }
            m.needsUpdate = !1, e.setRenderTarget(u, l, f)
        }
    }
}

function Fl(e, t, n)
{
    var r = n.isWebGL2;
    var i = new function()
        {
            var t = !1,
                n = new pa,
                r = null,
                i = new pa(0, 0, 0, 0);
            return {
                setMask: function(n)
                {
                    r === n || t || (e.colorMask(n, n, n, n), r = n)
                },
                setLocked: function(e)
                {
                    t = e
                },
                setClear: function(t, r, o, a, s)
                {
                    !0 === s && (t *= a, r *= a, o *= a), n.set(t, r, o, a), !1 === i.equals(n) && (e.clearColor(t, r, o, a), i.copy(n))
                },
                reset: function()
                {
                    t = !1, r = null, i.set(-1, 0, 0, 0)
                }
            }
        },
        o = new function()
        {
            var t = !1,
                n = null,
                r = null,
                i = null;
            return {
                setTest: function(e)
                {
                    e ? F(2929) : U(2929)
                },
                setMask: function(r)
                {
                    n === r || t || (e.depthMask(r), n = r)
                },
                setFunc: function(t)
                {
                    if (r !== t)
                    {
                        if (t) switch (t)
                        {
                            case 0:
                                e.depthFunc(512);
                                break;
                            case 1:
                                e.depthFunc(519);
                                break;
                            case 2:
                                e.depthFunc(513);
                                break;
                            case 3:
                                e.depthFunc(515);
                                break;
                            case 4:
                                e.depthFunc(514);
                                break;
                            case 5:
                                e.depthFunc(518);
                                break;
                            case 6:
                                e.depthFunc(516);
                                break;
                            case 7:
                                e.depthFunc(517);
                                break;
                            default:
                                e.depthFunc(515)
                        }
                        else e.depthFunc(515);
                        r = t
                    }
                },
                setLocked: function(e)
                {
                    t = e
                },
                setClear: function(t)
                {
                    i !== t && (e.clearDepth(t), i = t)
                },
                reset: function()
                {
                    t = !1, n = null, r = null, i = null
                }
            }
        },
        a = new function()
        {
            var t = !1,
                n = null,
                r = null,
                i = null,
                o = null,
                a = null,
                s = null,
                c = null,
                u = null;
            return {
                setTest: function(e)
                {
                    t || (e ? F(2960) : U(2960))
                },
                setMask: function(r)
                {
                    n === r || t || (e.stencilMask(r), n = r)
                },
                setFunc: function(t, n, a)
                {
                    r === t && i === n && o === a || (e.stencilFunc(t, n, a), r = t, i = n, o = a)
                },
                setOp: function(t, n, r)
                {
                    a === t && s === n && c === r || (e.stencilOp(t, n, r), a = t, s = n, c = r)
                },
                setLocked: function(e)
                {
                    t = e
                },
                setClear: function(t)
                {
                    u !== t && (e.clearStencil(t), u = t)
                },
                reset: function()
                {
                    t = !1, n = null, r = null, i = null, o = null, a = null, s = null, c = null, u = null
                }
            }
        },
        s = e.getParameter(34921),
        c = new Uint8Array(s),
        u = new Uint8Array(s),
        l = new Uint8Array(s),
        f = {},
        h = null,
        d = null,
        p = null,
        m = null,
        v = null,
        g = null,
        y = null,
        b = null,
        w = null,
        _ = !1,
        x = null,
        E = null,
        S = null,
        M = null,
        T = null,
        k = e.getParameter(35661),
        A = !1,
        C = 0,
        O = e.getParameter(7938); - 1 !== O.indexOf("WebGL") ? (C = parseFloat(/^WebGL\ ([0-9])/.exec(O)[1]), A = C >= 1) : -1 !== O.indexOf("OpenGL ES") && (C = parseFloat(/^OpenGL\ ES\ ([0-9])/.exec(O)[1]), A = C >= 2);
    var P = null,
        R = {},
        I = new pa,
        N = new pa;

    function L(t, n, r)
    {
        var i = new Uint8Array(4),
            o = e.createTexture();
        e.bindTexture(t, o), e.texParameteri(t, 10241, 9728), e.texParameteri(t, 10240, 9728);
        for (var a = 0; a < r; a++) e.texImage2D(n + a, 0, 6408, 1, 1, 0, 6408, 5121, i);
        return o
    }
    var B = {};

    function j(n, i)
    {
        (c[n] = 1, 0 === u[n] && (e.enableVertexAttribArray(n), u[n] = 1), l[n] !== i) && ((r ? e : t.get("ANGLE_instanced_arrays"))[r ? "vertexAttribDivisor" : "vertexAttribDivisorANGLE"](n, i), l[n] = i)
    }

    function F(t)
    {
        !0 !== f[t] && (e.enable(t), f[t] = !0)
    }

    function U(t)
    {
        !1 !== f[t] && (e.disable(t), f[t] = !1)
    }
    B[3553] = L(3553, 3553, 1), B[34067] = L(34067, 34069, 6), i.setClear(0, 0, 0, 1), o.setClear(1), a.setClear(0), F(2929), o.setFunc(3), W(!1), G(1), F(2884), V(0);
    var D = {
        100: 32774,
        101: 32778,
        102: 32779
    };
    if (r) D[103] = 32775, D[104] = 32776;
    else
    {
        var z = t.get("EXT_blend_minmax");
        null !== z && (D[103] = z.MIN_EXT, D[104] = z.MAX_EXT)
    }
    var H = {
        200: 0,
        201: 1,
        202: 768,
        204: 770,
        210: 776,
        208: 774,
        206: 772,
        203: 769,
        205: 771,
        209: 775,
        207: 773
    };

    function V(t, n, r, i, o, a, s, c)
    {
        if (0 !== t)
        {
            if (d || (F(3042), d = !0), 5 === t) o = o || n, a = a || r, s = s || i, n === m && o === y || (e.blendEquationSeparate(D[n], D[o]), m = n, y = o), r === v && i === g && a === b && s === w || (e.blendFuncSeparate(H[r], H[i], H[a], H[s]), v = r, g = i, b = a, w = s), p = t, _ = null;
            else if (t !== p || c !== _)
            {
                if (100 === m && 100 === y || (e.blendEquation(32774), m = 100, y = 100), c) switch (t)
                {
                    case 1:
                        e.blendFuncSeparate(1, 771, 1, 771);
                        break;
                    case 2:
                        e.blendFunc(1, 1);
                        break;
                    case 3:
                        e.blendFuncSeparate(0, 0, 769, 771);
                        break;
                    case 4:
                        e.blendFuncSeparate(0, 768, 0, 770);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", t)
                }
                else switch (t)
                {
                    case 1:
                        e.blendFuncSeparate(770, 771, 1, 771);
                        break;
                    case 2:
                        e.blendFunc(770, 1);
                        break;
                    case 3:
                        e.blendFunc(0, 769);
                        break;
                    case 4:
                        e.blendFunc(0, 768);
                        break;
                    default:
                        console.error("THREE.WebGLState: Invalid blending: ", t)
                }
                v = null, g = null, b = null, w = null, p = t, _ = c
            }
        }
        else d && (U(3042), d = !1)
    }

    function W(t)
    {
        x !== t && (t ? e.frontFace(2304) : e.frontFace(2305), x = t)
    }

    function G(t)
    {
        0 !== t ? (F(2884), t !== E && (1 === t ? e.cullFace(1029) : 2 === t ? e.cullFace(1028) : e.cullFace(1032))) : U(2884), E = t
    }

    function q(t, n, r)
    {
        t ? (F(32823), M === n && T === r || (e.polygonOffset(n, r), M = n, T = r)) : U(32823)
    }

    function $(t)
    {
        void 0 === t && (t = 33984 + k - 1), P !== t && (e.activeTexture(t), P = t)
    }
    return {
        buffers:
        {
            color: i,
            depth: o,
            stencil: a
        },
        initAttributes: function()
        {
            for (var e = 0, t = c.length; e < t; e++) c[e] = 0
        },
        enableAttribute: function(e)
        {
            j(e, 0)
        },
        enableAttributeAndDivisor: j,
        disableUnusedAttributes: function()
        {
            for (var t = 0, n = u.length; t !== n; ++t) u[t] !== c[t] && (e.disableVertexAttribArray(t), u[t] = 0)
        },
        enable: F,
        disable: U,
        useProgram: function(t)
        {
            return h !== t && (e.useProgram(t), h = t, !0)
        },
        setBlending: V,
        setMaterial: function(e, t)
        {
            2 === e.side ? U(2884) : F(2884);
            var n = 1 === e.side;
            t && (n = !n), W(n), 1 === e.blending && !1 === e.transparent ? V(0) : V(e.blending, e.blendEquation, e.blendSrc, e.blendDst, e.blendEquationAlpha, e.blendSrcAlpha, e.blendDstAlpha, e.premultipliedAlpha), o.setFunc(e.depthFunc), o.setTest(e.depthTest), o.setMask(e.depthWrite), i.setMask(e.colorWrite);
            var r = e.stencilWrite;
            a.setTest(r), r && (a.setMask(e.stencilWriteMask), a.setFunc(e.stencilFunc, e.stencilRef, e.stencilFuncMask), a.setOp(e.stencilFail, e.stencilZFail, e.stencilZPass)), q(e.polygonOffset, e.polygonOffsetFactor, e.polygonOffsetUnits)
        },
        setFlipSided: W,
        setCullFace: G,
        setLineWidth: function(t)
        {
            t !== S && (A && e.lineWidth(t), S = t)
        },
        setPolygonOffset: q,
        setScissorTest: function(e)
        {
            e ? F(3089) : U(3089)
        },
        activeTexture: $,
        bindTexture: function(t, n)
        {
            null === P && $();
            var r = R[P];
            void 0 === r && (r = {
                type: void 0,
                texture: void 0
            }, R[P] = r), r.type === t && r.texture === n || (e.bindTexture(t, n || B[t]), r.type = t, r.texture = n)
        },
        unbindTexture: function()
        {
            var t = R[P];
            void 0 !== t && void 0 !== t.type && (e.bindTexture(t.type, null), t.type = void 0, t.texture = void 0)
        },
        compressedTexImage2D: function()
        {
            try
            {
                e.compressedTexImage2D.apply(e, arguments)
            }
            catch (e)
            {
                console.error("THREE.WebGLState:", e)
            }
        },
        texImage2D: function()
        {
            try
            {
                e.texImage2D.apply(e, arguments)
            }
            catch (e)
            {
                console.error("THREE.WebGLState:", e)
            }
        },
        texImage3D: function()
        {
            try
            {
                e.texImage3D.apply(e, arguments)
            }
            catch (e)
            {
                console.error("THREE.WebGLState:", e)
            }
        },
        scissor: function(t)
        {
            !1 === I.equals(t) && (e.scissor(t.x, t.y, t.z, t.w), I.copy(t))
        },
        viewport: function(t)
        {
            !1 === N.equals(t) && (e.viewport(t.x, t.y, t.z, t.w), N.copy(t))
        },
        reset: function()
        {
            for (var t = 0; t < u.length; t++) 1 === u[t] && (e.disableVertexAttribArray(t), u[t] = 0);
            f = {}, P = null, R = {}, h = null, p = null, x = null, E = null, i.reset(), o.reset(), a.reset()
        }
    }
}

function Ul(e, t, n, r, i, o, a)
{
    var s, c = i.isWebGL2,
        u = i.maxTextures,
        l = i.maxCubemapSize,
        f = i.maxTextureSize,
        h = i.maxSamples,
        d = new WeakMap,
        p = !1;
    try
    {
        p = "undefined" != typeof OffscreenCanvas && null !== new OffscreenCanvas(1, 1).getContext("2d")
    }
    catch (e)
    {}

    function m(e, t)
    {
        return p ? new OffscreenCanvas(e, t) : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas")
    }

    function v(e, t, n, r)
    {
        var i = 1;
        if ((e.width > r || e.height > r) && (i = r / Math.max(e.width, e.height)), i < 1 || !0 === t)
        {
            if ("undefined" != typeof HTMLImageElement && e instanceof HTMLImageElement || "undefined" != typeof HTMLCanvasElement && e instanceof HTMLCanvasElement || "undefined" != typeof ImageBitmap && e instanceof ImageBitmap)
            {
                var o = t ? na.floorPowerOfTwo : Math.floor,
                    a = o(i * e.width),
                    c = o(i * e.height);
                void 0 === s && (s = m(a, c));
                var u = n ? m(a, c) : s;
                return u.width = a, u.height = c, u.getContext("2d").drawImage(e, 0, 0, a, c), console.warn("THREE.WebGLRenderer: Texture has been resized from (" + e.width + "x" + e.height + ") to (" + a + "x" + c + ")."), u
            }
            return "data" in e && console.warn("THREE.WebGLRenderer: Image in DataTexture is too big (" + e.width + "x" + e.height + ")."), e
        }
        return e
    }

    function g(e)
    {
        return na.isPowerOfTwo(e.width) && na.isPowerOfTwo(e.height)
    }

    function y(e, t)
    {
        return e.generateMipmaps && t && 1003 !== e.minFilter && 1006 !== e.minFilter
    }

    function b(t, n, i, o)
    {
        e.generateMipmap(t), r.get(n).__maxMipLevel = Math.log(Math.max(i, o)) * Math.LOG2E
    }

    function w(n, r, i)
    {
        if (!1 === c) return r;
        if (null !== n)
        {
            if (void 0 !== e[n]) return e[n];
            console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '" + n + "'")
        }
        var o = r;
        return 6403 === r && (5126 === i && (o = 33326), 5131 === i && (o = 33325), 5121 === i && (o = 33321)), 6407 === r && (5126 === i && (o = 34837), 5131 === i && (o = 34843), 5121 === i && (o = 32849)), 6408 === r && (5126 === i && (o = 34836), 5131 === i && (o = 34842), 5121 === i && (o = 32856)), 33325 === o || 33326 === o || 34842 === o || 34836 === o ? t.get("EXT_color_buffer_float") : 34843 !== o && 34837 !== o || console.warn("THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead."), o
    }

    function _(e)
    {
        return 1003 === e || 1004 === e || 1005 === e ? 9728 : 9729
    }

    function x(t)
    {
        var n = t.target;
        n.removeEventListener("dispose", x),
            function(t)
            {
                var n = r.get(t);
                if (void 0 === n.__webglInit) return;
                e.deleteTexture(n.__webglTexture), r.remove(t)
            }(n), n.isVideoTexture && d.delete(n), a.memory.textures--
    }

    function E(t)
    {
        var n = t.target;
        n.removeEventListener("dispose", E),
            function(t)
            {
                var n = r.get(t),
                    i = r.get(t.texture);
                if (!t) return;
                void 0 !== i.__webglTexture && e.deleteTexture(i.__webglTexture);
                t.depthTexture && t.depthTexture.dispose();
                if (t.isWebGLRenderTargetCube)
                    for (var o = 0; o < 6; o++) e.deleteFramebuffer(n.__webglFramebuffer[o]), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer[o]);
                else e.deleteFramebuffer(n.__webglFramebuffer), n.__webglDepthbuffer && e.deleteRenderbuffer(n.__webglDepthbuffer);
                if (t.isWebGLMultiviewRenderTarget)
                {
                    e.deleteTexture(n.__webglColorTexture), e.deleteTexture(n.__webglDepthStencilTexture), a.memory.textures -= 2;
                    o = 0;
                    for (var s = n.__webglViewFramebuffers.length; o < s; o++) e.deleteFramebuffer(n.__webglViewFramebuffers[o])
                }
                r.remove(t.texture), r.remove(t)
            }(n), a.memory.textures--
    }
    var S = 0;

    function M(e, t)
    {
        var i = r.get(e);
        if (e.isVideoTexture && function(e)
            {
                var t = a.render.frame;
                d.get(e) !== t && (d.set(e, t), e.update())
            }(e), e.version > 0 && i.__version !== e.version)
        {
            var o = e.image;
            if (void 0 === o) console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");
            else
            {
                if (!1 !== o.complete) return void R(i, e, t);
                console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")
            }
        }
        n.activeTexture(33984 + t), n.bindTexture(3553, i.__webglTexture)
    }

    function T(t, i)
    {
        if (6 === t.image.length)
        {
            var a = r.get(t);
            if (t.version > 0 && a.__version !== t.version)
            {
                P(a, t), n.activeTexture(33984 + i), n.bindTexture(34067, a.__webglTexture), e.pixelStorei(37440, t.flipY);
                for (var s = t && t.isCompressedTexture, u = t.image[0] && t.image[0].isDataTexture, f = [], h = 0; h < 6; h++) f[h] = s || u ? u ? t.image[h].image : t.image[h] : v(t.image[h], !1, !0, l);
                var d, p = f[0],
                    m = g(p) || c,
                    _ = o.convert(t.format),
                    x = o.convert(t.type),
                    E = w(t.internalFormat, _, x);
                if (O(34067, t, m), s)
                {
                    for (h = 0; h < 6; h++)
                    {
                        d = f[h].mipmaps;
                        for (var S = 0; S < d.length; S++)
                        {
                            var M = d[S];
                            1023 !== t.format && 1022 !== t.format ? null !== _ ? n.compressedTexImage2D(34069 + h, S, E, M.width, M.height, 0, M.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()") : n.texImage2D(34069 + h, S, E, M.width, M.height, 0, _, x, M.data)
                        }
                    }
                    a.__maxMipLevel = d.length - 1
                }
                else
                {
                    d = t.mipmaps;
                    for (h = 0; h < 6; h++)
                        if (u)
                        {
                            n.texImage2D(34069 + h, 0, E, f[h].width, f[h].height, 0, _, x, f[h].data);
                            for (S = 0; S < d.length; S++)
                            {
                                var T = (M = d[S]).image[h].image;
                                n.texImage2D(34069 + h, S + 1, E, T.width, T.height, 0, _, x, T.data)
                            }
                        }
                    else
                    {
                        n.texImage2D(34069 + h, 0, E, _, x, f[h]);
                        for (S = 0; S < d.length; S++)
                        {
                            M = d[S];
                            n.texImage2D(34069 + h, S + 1, E, _, x, M.image[h])
                        }
                    }
                    a.__maxMipLevel = d.length
                }
                y(t, m) && b(34067, t, p.width, p.height), a.__version = t.version, t.onUpdate && t.onUpdate(t)
            }
            else n.activeTexture(33984 + i), n.bindTexture(34067, a.__webglTexture)
        }
    }

    function k(e, t)
    {
        n.activeTexture(33984 + t), n.bindTexture(34067, r.get(e).__webglTexture)
    }
    var A = {
            1e3: 10497,
            1001: 33071,
            1002: 33648
        },
        C = {
            1003: 9728,
            1004: 9984,
            1005: 9986,
            1006: 9729,
            1007: 9985,
            1008: 9987
        };

    function O(n, o, a)
    {
        a ? (e.texParameteri(n, 10242, A[o.wrapS]), e.texParameteri(n, 10243, A[o.wrapT]), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, A[o.wrapR]), e.texParameteri(n, 10240, C[o.magFilter]), e.texParameteri(n, 10241, C[o.minFilter])) : (e.texParameteri(n, 10242, 33071), e.texParameteri(n, 10243, 33071), 32879 !== n && 35866 !== n || e.texParameteri(n, 32882, 33071), 1001 === o.wrapS && 1001 === o.wrapT || console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."), e.texParameteri(n, 10240, _(o.magFilter)), e.texParameteri(n, 10241, _(o.minFilter)), 1003 !== o.minFilter && 1006 !== o.minFilter && console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));
        var s = t.get("EXT_texture_filter_anisotropic");
        if (s)
        {
            if (1015 === o.type && null === t.get("OES_texture_float_linear")) return;
            if (1016 === o.type && null === (c || t.get("OES_texture_half_float_linear"))) return;
            (o.anisotropy > 1 || r.get(o).__currentAnisotropy) && (e.texParameterf(n, s.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(o.anisotropy, i.getMaxAnisotropy())), r.get(o).__currentAnisotropy = o.anisotropy)
        }
    }

    function P(t, n)
    {
        void 0 === t.__webglInit && (t.__webglInit = !0, n.addEventListener("dispose", x), t.__webglTexture = e.createTexture(), a.memory.textures++)
    }

    function R(t, r, i)
    {
        var a = 3553;
        r.isDataTexture2DArray && (a = 35866), r.isDataTexture3D && (a = 32879), P(t, r), n.activeTexture(33984 + i), n.bindTexture(a, t.__webglTexture), e.pixelStorei(37440, r.flipY), e.pixelStorei(37441, r.premultiplyAlpha), e.pixelStorei(3317, r.unpackAlignment);
        var s = function(e)
            {
                return !c && (1001 !== e.wrapS || 1001 !== e.wrapT || 1003 !== e.minFilter && 1006 !== e.minFilter)
            }(r) && !1 === g(r.image),
            u = v(r.image, s, !1, f),
            l = g(u) || c,
            h = o.convert(r.format),
            d = o.convert(r.type),
            p = w(r.internalFormat, h, d);
        O(a, r, l);
        var m, _ = r.mipmaps;
        if (r.isDepthTexture)
        {
            if (p = 6402, 1015 === r.type)
            {
                if (!1 === c) throw new Error("Float Depth Texture only supported in WebGL2.0");
                p = 36012
            }
            else c && (p = 33189);
            1026 === r.format && 6402 === p && 1012 !== r.type && 1014 !== r.type && (console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."), r.type = 1012, d = o.convert(r.type)), 1027 === r.format && (p = 34041, 1020 !== r.type && (console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."), r.type = 1020, d = o.convert(r.type))), n.texImage2D(3553, 0, p, u.width, u.height, 0, h, d, null)
        }
        else if (r.isDataTexture)
            if (_.length > 0 && l)
            {
                for (var x = 0, E = _.length; x < E; x++) m = _[x], n.texImage2D(3553, x, p, m.width, m.height, 0, h, d, m.data);
                r.generateMipmaps = !1, t.__maxMipLevel = _.length - 1
            }
        else n.texImage2D(3553, 0, p, u.width, u.height, 0, h, d, u.data), t.__maxMipLevel = 0;
        else if (r.isCompressedTexture)
        {
            for (x = 0, E = _.length; x < E; x++) m = _[x], 1023 !== r.format && 1022 !== r.format ? null !== h ? n.compressedTexImage2D(3553, x, p, m.width, m.height, 0, m.data) : console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()") : n.texImage2D(3553, x, p, m.width, m.height, 0, h, d, m.data);
            t.__maxMipLevel = _.length - 1
        }
        else if (r.isDataTexture2DArray) n.texImage3D(35866, 0, p, u.width, u.height, u.depth, 0, h, d, u.data), t.__maxMipLevel = 0;
        else if (r.isDataTexture3D) n.texImage3D(32879, 0, p, u.width, u.height, u.depth, 0, h, d, u.data), t.__maxMipLevel = 0;
        else if (_.length > 0 && l)
        {
            for (x = 0, E = _.length; x < E; x++) m = _[x], n.texImage2D(3553, x, p, h, d, m);
            r.generateMipmaps = !1, t.__maxMipLevel = _.length - 1
        }
        else n.texImage2D(3553, 0, p, h, d, u), t.__maxMipLevel = 0;
        y(r, l) && b(a, r, u.width, u.height), t.__version = r.version, r.onUpdate && r.onUpdate(r)
    }

    function I(t, i, a, s)
    {
        var c = o.convert(i.texture.format),
            u = o.convert(i.texture.type),
            l = w(i.texture.internalFormat, c, u);
        n.texImage2D(s, 0, l, i.width, i.height, 0, c, u, null), e.bindFramebuffer(36160, t), e.framebufferTexture2D(36160, a, s, r.get(i.texture).__webglTexture, 0), e.bindFramebuffer(36160, null)
    }

    function N(t, n, r)
    {
        if (e.bindRenderbuffer(36161, t), n.depthBuffer && !n.stencilBuffer)
        {
            if (r)
            {
                var i = B(n);
                e.renderbufferStorageMultisample(36161, i, 33189, n.width, n.height)
            }
            else e.renderbufferStorage(36161, 33189, n.width, n.height);
            e.framebufferRenderbuffer(36160, 36096, 36161, t)
        }
        else if (n.depthBuffer && n.stencilBuffer)
        {
            if (r)
            {
                i = B(n);
                e.renderbufferStorageMultisample(36161, i, 35056, n.width, n.height)
            }
            else e.renderbufferStorage(36161, 34041, n.width, n.height);
            e.framebufferRenderbuffer(36160, 33306, 36161, t)
        }
        else
        {
            var a = o.convert(n.texture.format),
                s = o.convert(n.texture.type),
                c = w(n.texture.internalFormat, a, s);
            if (r)
            {
                i = B(n);
                e.renderbufferStorageMultisample(36161, i, c, n.width, n.height)
            }
            else e.renderbufferStorage(36161, c, n.width, n.height)
        }
        e.bindRenderbuffer(36161, null)
    }

    function L(t)
    {
        var n = r.get(t),
            i = !0 === t.isWebGLRenderTargetCube;
        if (t.depthTexture)
        {
            if (i) throw new Error("target.depthTexture not supported in Cube render targets");
            ! function(t, n)
            {
                if (n && n.isWebGLRenderTargetCube) throw new Error("Depth Texture with cube render targets is not supported");
                if (e.bindFramebuffer(36160, t), !n.depthTexture || !n.depthTexture.isDepthTexture) throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");
                r.get(n.depthTexture).__webglTexture && n.depthTexture.image.width === n.width && n.depthTexture.image.height === n.height || (n.depthTexture.image.width = n.width, n.depthTexture.image.height = n.height, n.depthTexture.needsUpdate = !0), M(n.depthTexture, 0);
                var i = r.get(n.depthTexture).__webglTexture;
                if (1026 === n.depthTexture.format) e.framebufferTexture2D(36160, 36096, 3553, i, 0);
                else
                {
                    if (1027 !== n.depthTexture.format) throw new Error("Unknown depthTexture format");
                    e.framebufferTexture2D(36160, 33306, 3553, i, 0)
                }
            }(n.__webglFramebuffer, t)
        }
        else if (i)
        {
            n.__webglDepthbuffer = [];
            for (var o = 0; o < 6; o++) e.bindFramebuffer(36160, n.__webglFramebuffer[o]), n.__webglDepthbuffer[o] = e.createRenderbuffer(), N(n.__webglDepthbuffer[o], t)
        }
        else e.bindFramebuffer(36160, n.__webglFramebuffer), n.__webglDepthbuffer = e.createRenderbuffer(), N(n.__webglDepthbuffer, t);
        e.bindFramebuffer(36160, null)
    }

    function B(e)
    {
        return c && e.isWebGLMultisampleRenderTarget ? Math.min(h, e.samples) : 0
    }
    var j = !1,
        F = !1;
    this.allocateTextureUnit = function()
    {
        var e = S;
        return e >= u && console.warn("THREE.WebGLTextures: Trying to use " + e + " texture units while this GPU supports only " + u), S += 1, e
    }, this.resetTextureUnits = function()
    {
        S = 0
    }, this.setTexture2D = M, this.setTexture2DArray = function(e, t)
    {
        var i = r.get(e);
        e.version > 0 && i.__version !== e.version ? R(i, e, t) : (n.activeTexture(33984 + t), n.bindTexture(35866, i.__webglTexture))
    }, this.setTexture3D = function(e, t)
    {
        var i = r.get(e);
        e.version > 0 && i.__version !== e.version ? R(i, e, t) : (n.activeTexture(33984 + t), n.bindTexture(32879, i.__webglTexture))
    }, this.setTextureCube = T, this.setTextureCubeDynamic = k, this.setupRenderTarget = function(i)
    {
        var s = r.get(i),
            u = r.get(i.texture);
        i.addEventListener("dispose", E), u.__webglTexture = e.createTexture(), a.memory.textures++;
        var l = !0 === i.isWebGLRenderTargetCube,
            f = !0 === i.isWebGLMultisampleRenderTarget,
            h = !0 === i.isWebGLMultiviewRenderTarget,
            d = g(i) || c;
        if (l)
        {
            s.__webglFramebuffer = [];
            for (var p = 0; p < 6; p++) s.__webglFramebuffer[p] = e.createFramebuffer()
        }
        else if (s.__webglFramebuffer = e.createFramebuffer(), f)
            if (c)
            {
                s.__webglMultisampledFramebuffer = e.createFramebuffer(), s.__webglColorRenderbuffer = e.createRenderbuffer(), e.bindRenderbuffer(36161, s.__webglColorRenderbuffer);
                var m = o.convert(i.texture.format),
                    v = o.convert(i.texture.type),
                    _ = w(i.texture.internalFormat, m, v),
                    x = B(i);
                e.renderbufferStorageMultisample(36161, x, _, i.width, i.height), e.bindFramebuffer(36160, s.__webglMultisampledFramebuffer), e.framebufferRenderbuffer(36160, 36064, 36161, s.__webglColorRenderbuffer), e.bindRenderbuffer(36161, null), i.depthBuffer && (s.__webglDepthRenderbuffer = e.createRenderbuffer(), N(s.__webglDepthRenderbuffer, i, !0)), e.bindFramebuffer(36160, null)
            }
        else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");
        else if (h)
        {
            var S = i.width,
                M = i.height,
                T = i.numViews;
            e.bindFramebuffer(36160, s.__webglFramebuffer);
            var k = t.get("OVR_multiview2");
            a.memory.textures += 2;
            var A = e.createTexture();
            e.bindTexture(35866, A), e.texParameteri(35866, 10240, 9728), e.texParameteri(35866, 10241, 9728), e.texImage3D(35866, 0, 32856, S, M, T, 0, 6408, 5121, null), k.framebufferTextureMultiviewOVR(36160, 36064, A, 0, 0, T);
            var C = e.createTexture();
            e.bindTexture(35866, C), e.texParameteri(35866, 10240, 9728), e.texParameteri(35866, 10241, 9728), e.texImage3D(35866, 0, 35056, S, M, T, 0, 34041, 34042, null), k.framebufferTextureMultiviewOVR(36160, 33306, C, 0, 0, T);
            var P = new Array(T);
            for (p = 0; p < T; ++p) P[p] = e.createFramebuffer(), e.bindFramebuffer(36160, P[p]), e.framebufferTextureLayer(36160, 36064, A, 0, p);
            s.__webglColorTexture = A, s.__webglDepthStencilTexture = C, s.__webglViewFramebuffers = P, e.bindFramebuffer(36160, null), e.bindTexture(35866, null)
        }
        if (l)
        {
            n.bindTexture(34067, u.__webglTexture), O(34067, i.texture, d);
            for (p = 0; p < 6; p++) I(s.__webglFramebuffer[p], i, 36064, 34069 + p);
            y(i.texture, d) && b(34067, i.texture, i.width, i.height), n.bindTexture(34067, null)
        }
        else h || (n.bindTexture(3553, u.__webglTexture), O(3553, i.texture, d), I(s.__webglFramebuffer, i, 36064, 3553), y(i.texture, d) && b(3553, i.texture, i.width, i.height), n.bindTexture(3553, null));
        i.depthBuffer && L(i)
    }, this.updateRenderTargetMipmap = function(e)
    {
        var t = e.texture;
        if (y(t, g(e) || c))
        {
            var i = e.isWebGLRenderTargetCube ? 34067 : 3553,
                o = r.get(t).__webglTexture;
            n.bindTexture(i, o), b(i, t, e.width, e.height), n.bindTexture(i, null)
        }
    }, this.updateMultisampleRenderTarget = function(t)
    {
        if (t.isWebGLMultisampleRenderTarget)
            if (c)
            {
                var n = r.get(t);
                e.bindFramebuffer(36008, n.__webglMultisampledFramebuffer), e.bindFramebuffer(36009, n.__webglFramebuffer);
                var i = t.width,
                    o = t.height,
                    a = 16384;
                t.depthBuffer && (a |= 256), t.stencilBuffer && (a |= 1024), e.blitFramebuffer(0, 0, i, o, 0, 0, i, o, a, 9728)
            }
        else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")
    }, this.safeSetTexture2D = function(e, t)
    {
        e && e.isWebGLRenderTarget && (!1 === j && (console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."), j = !0), e = e.texture), M(e, t)
    }, this.safeSetTextureCube = function(e, t)
    {
        e && e.isWebGLRenderTargetCube && (!1 === F && (console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."), F = !0), e = e.texture), e && e.isCubeTexture || Array.isArray(e.image) && 6 === e.image.length ? T(e, t) : k(e, t)
    }
}

function Dl(e, t, n)
{
    var r = n.isWebGL2;
    return {
        convert: function(e)
        {
            var n;
            if (1009 === e) return 5121;
            if (1017 === e) return 32819;
            if (1018 === e) return 32820;
            if (1019 === e) return 33635;
            if (1010 === e) return 5120;
            if (1011 === e) return 5122;
            if (1012 === e) return 5123;
            if (1013 === e) return 5124;
            if (1014 === e) return 5125;
            if (1015 === e) return 5126;
            if (1016 === e) return r ? 5131 : null !== (n = t.get("OES_texture_half_float")) ? n.HALF_FLOAT_OES : null;
            if (1021 === e) return 6406;
            if (1022 === e) return 6407;
            if (1023 === e) return 6408;
            if (1024 === e) return 6409;
            if (1025 === e) return 6410;
            if (1026 === e) return 6402;
            if (1027 === e) return 34041;
            if (1028 === e) return 6403;
            if (1029 === e) return 36244;
            if (1030 === e) return 33319;
            if (1031 === e) return 33320;
            if (1032 === e) return 36248;
            if (1033 === e) return 36249;
            if (33776 === e || 33777 === e || 33778 === e || 33779 === e)
            {
                if (null === (n = t.get("WEBGL_compressed_texture_s3tc"))) return null;
                if (33776 === e) return n.COMPRESSED_RGB_S3TC_DXT1_EXT;
                if (33777 === e) return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;
                if (33778 === e) return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;
                if (33779 === e) return n.COMPRESSED_RGBA_S3TC_DXT5_EXT
            }
            if (35840 === e || 35841 === e || 35842 === e || 35843 === e)
            {
                if (null === (n = t.get("WEBGL_compressed_texture_pvrtc"))) return null;
                if (35840 === e) return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;
                if (35841 === e) return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;
                if (35842 === e) return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;
                if (35843 === e) return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG
            }
            return 36196 === e ? null !== (n = t.get("WEBGL_compressed_texture_etc1")) ? n.COMPRESSED_RGB_ETC1_WEBGL : null : 37808 === e || 37809 === e || 37810 === e || 37811 === e || 37812 === e || 37813 === e || 37814 === e || 37815 === e || 37816 === e || 37817 === e || 37818 === e || 37819 === e || 37820 === e || 37821 === e ? null !== (n = t.get("WEBGL_compressed_texture_astc")) ? e : null : 1020 === e ? r ? 34042 : null !== (n = t.get("WEBGL_depth_texture")) ? n.UNSIGNED_INT_24_8_WEBGL : null : void 0
        }
    }
}

function zl(e, t, n, r)
{
    ma.call(this, e, t, r), this.depthBuffer = !1, this.stencilBuffer = !1, this.numViews = n
}

function Hl(e, t)
{
    var n, r, i, o, a, s, c, u = e.extensions,
        l = e.properties,
        f = 0;

    function h(e)
    {
        return e.isArrayCamera ? e.cameras : (a[0] = e, a)
    }
    this.isAvailable = function()
    {
        if (void 0 === c)
        {
            var e = u.get("OVR_multiview2");
            if (c = null !== e && !1 === t.getContextAttributes().antialias)
            {
                f = t.getParameter(e.MAX_VIEWS_OVR), n = new zl(0, 0, 2), s = new ra, o = [], i = [], a = [];
                for (var r = 0; r < f; r++) o[r] = new Sa, i[r] = new la
            }
        }
        return c
    }, this.attachCamera = function(t)
    {
        !1 !== function(e)
        {
            if (void 0 === e.isArrayCamera) return !0;
            var t = e.cameras;
            if (t.length > f) return !1;
            for (var n = 1, r = t.length; n < r; n++)
                if (t[0].viewport.z !== t[n].viewport.z || t[0].viewport.w !== t[n].viewport.w) return !1;
            return !0
        }(t) && (r = e.getRenderTarget(), function(t)
        {
            if (r ? s.set(r.width, r.height) : e.getDrawingBufferSize(s), t.isArrayCamera)
            {
                var i = t.cameras[0].viewport;
                n.setSize(i.z, i.w), n.setNumViews(t.cameras.length)
            }
            else n.setSize(s.x, s.y), n.setNumViews(2)
        }(t), e.setRenderTarget(n))
    }, this.detachCamera = function(i)
    {
        n === e.getRenderTarget() && (e.setRenderTarget(r), function(e)
        {
            var r = n,
                i = r.numViews,
                o = l.get(r).__webglViewFramebuffers,
                a = r.width,
                c = r.height;
            if (e.isArrayCamera)
                for (var u = 0; u < i; u++)
                {
                    var f = e.cameras[u].viewport,
                        h = f.x,
                        d = f.y,
                        p = h + f.z,
                        m = d + f.w;
                    t.bindFramebuffer(36008, o[u]), t.blitFramebuffer(0, 0, a, c, h, d, p, m, 16384, 9728)
                }
            else t.bindFramebuffer(36008, o[0]), t.blitFramebuffer(0, 0, a, c, 0, 0, s.x, s.y, 16384, 9728)
        }(i))
    }, this.updateCameraProjectionMatricesUniform = function(e, n)
    {
        for (var r = h(e), i = 0; i < r.length; i++) o[i].copy(r[i].projectionMatrix);
        n.setValue(t, "projectionMatrices", o)
    }, this.updateCameraViewMatricesUniform = function(e, n)
    {
        for (var r = h(e), i = 0; i < r.length; i++) o[i].copy(r[i].matrixWorldInverse);
        n.setValue(t, "viewMatrices", o)
    }, this.updateObjectMatricesUniforms = function(e, n, r)
    {
        for (var a = h(n), s = 0; s < a.length; s++) o[s].multiplyMatrices(a[s].matrixWorldInverse, e.matrixWorld), i[s].getNormalMatrix(o[s]);
        r.setValue(t, "modelViewMatrices", o), r.setValue(t, "normalMatrices", i)
    }
}

function Vl(e)
{
    Fc.call(this), this.cameras = e || []
}

function Wl()
{
    Ha.call(this), this.type = "Group"
}

function Gl(e, t)
{
    var n = this,
        r = null,
        i = null,
        o = "local-floor",
        a = null,
        s = [],
        c = new Map,
        u = new Fc;
    u.layers.enable(1), u.viewport = new pa;
    var l = new Fc;
    l.layers.enable(2), l.viewport = new pa;
    var f = new Vl([u, l]);

    function h(e)
    {
        var t = c.get(e.inputSource);
        t && t.dispatchEvent(
        {
            type: e.type
        })
    }

    function d()
    {
        c.forEach((function(e, t)
        {
            e.dispatchEvent(
            {
                type: "disconnected",
                data: t
            }), e.visible = !1
        })), c.clear(), e.setFramebuffer(null), e.setRenderTarget(e.getRenderTarget()), w.stop(), n.dispatchEvent(
        {
            type: "sessionend"
        }), n.isPresenting = !1
    }

    function p(e)
    {
        i = e, w.setContext(r), w.start(), n.dispatchEvent(
        {
            type: "sessionstart"
        }), n.isPresenting = !0
    }

    function m(e)
    {
        for (var t = r.inputSources, n = 0; n < s.length; n++) c.set(t[n], s[n]);
        for (n = 0; n < e.removed.length; n++)
        {
            var i = e.removed[n];
            (o = c.get(i)) && (o.dispatchEvent(
            {
                type: "disconnected",
                data: i
            }), c.delete(i))
        }
        for (n = 0; n < e.added.length; n++)
        {
            var o;
            i = e.added[n];
            (o = c.get(i)) && o.dispatchEvent(
            {
                type: "connected",
                data: i
            })
        }
    }
    f.layers.enable(1), f.layers.enable(2), this.enabled = !1, this.isPresenting = !1, this.getController = function(e)
    {
        var t = s[e];
        return void 0 === t && ((t = new Wl).matrixAutoUpdate = !1, t.visible = !1, s[e] = t), t
    }, this.setFramebufferScaleFactor = function() {}, this.setReferenceSpaceType = function(e)
    {
        o = e
    }, this.getReferenceSpace = function()
    {
        return i
    }, this.getSession = function()
    {
        return r
    }, this.setSession = function(e)
    {
        if (null !== (r = e))
        {
            r.addEventListener("select", h), r.addEventListener("selectstart", h), r.addEventListener("selectend", h), r.addEventListener("squeeze", h), r.addEventListener("squeezestart", h), r.addEventListener("squeezeend", h), r.addEventListener("end", d);
            var n = t.getContextAttributes(),
                i = {
                    antialias: n.antialias,
                    alpha: n.alpha,
                    depth: n.depth,
                    stencil: n.stencil
                },
                a = new XRWebGLLayer(r, t, i);
            r.updateRenderState(
            {
                baseLayer: a
            }), r.requestReferenceSpace(o).then(p), r.addEventListener("inputsourceschange", m)
        }
    };
    var v = new sa,
        g = new sa;

    function y(e, t)
    {
        null === t ? e.matrixWorld.copy(e.matrix) : e.matrixWorld.multiplyMatrices(t.matrixWorld, e.matrix), e.matrixWorldInverse.getInverse(e.matrixWorld)
    }
    this.getCamera = function(e)
    {
        var t = e.parent,
            n = f.cameras;
        y(f, t);
        for (var r = 0; r < n.length; r++) y(n[r], t);
        e.matrixWorld.copy(f.matrixWorld);
        for (var i = e.children, o = (r = 0, i.length); r < o; r++) i[r].updateMatrixWorld(!0);
        return function(e, t, n)
        {
            v.setFromMatrixPosition(t.matrixWorld), g.setFromMatrixPosition(n.matrixWorld);
            var r = v.distanceTo(g),
                i = t.projectionMatrix.elements,
                o = n.projectionMatrix.elements,
                a = i[14] / (i[10] - 1),
                s = i[14] / (i[10] + 1),
                c = (i[9] + 1) / i[5],
                u = (i[9] - 1) / i[5],
                l = (i[8] - 1) / i[0],
                f = (o[8] + 1) / o[0],
                h = a * l,
                d = a * f,
                p = r / (-l + f),
                m = p * -l;
            t.matrixWorld.decompose(e.position, e.quaternion, e.scale), e.translateX(m), e.translateZ(p), e.matrixWorld.compose(e.position, e.quaternion, e.scale), e.matrixWorldInverse.getInverse(e.matrixWorld);
            var y = a + p,
                b = s + p,
                w = h - m,
                _ = d + (r - m),
                x = c * s / b * y,
                E = u * s / b * y;
            e.projectionMatrix.makePerspective(w, _, x, E, y, b)
        }(f, u, l), f
    };
    var b = null;
    var w = new Kc;
    w.setAnimationLoop((function(t, n)
    {
        if (null !== (a = n.getViewerPose(i)))
        {
            var o = a.views,
                c = r.renderState.baseLayer;
            e.setFramebuffer(c.framebuffer);
            for (var u = 0; u < o.length; u++)
            {
                var l = o[u],
                    h = c.getViewport(l),
                    d = l.transform.inverse.matrix,
                    p = f.cameras[u];
                p.matrix.fromArray(d).getInverse(p.matrix), p.projectionMatrix.fromArray(l.projectionMatrix), p.viewport.set(h.x, h.y, h.width, h.height), 0 === u && f.matrix.copy(p.matrix)
            }
        }
        var m = r.inputSources;
        for (u = 0; u < s.length; u++)
        {
            var v = s[u],
                g = m[u];
            if (g)
            {
                var y = n.getPose(g.targetRaySpace, i);
                if (null !== y)
                {
                    v.matrix.fromArray(y.transform.matrix), v.matrix.decompose(v.position, v.rotation, v.scale), v.visible = !0;
                    continue
                }
            }
            v.visible = !1
        }
        b && b(t, n)
    })), this.setAnimationLoop = function(e)
    {
        b = e
    }, this.dispose = function() {}
}

function ql(e)
{
    var t = void 0 !== (e = e ||
        {}).canvas ? e.canvas : document.createElementNS("http://www.w3.org/1999/xhtml", "canvas"),
        n = void 0 !== e.context ? e.context : null,
        r = void 0 !== e.alpha && e.alpha,
        i = void 0 === e.depth || e.depth,
        o = void 0 === e.stencil || e.stencil,
        a = void 0 !== e.antialias && e.antialias,
        s = void 0 === e.premultipliedAlpha || e.premultipliedAlpha,
        c = void 0 !== e.preserveDrawingBuffer && e.preserveDrawingBuffer,
        u = void 0 !== e.powerPreference ? e.powerPreference : "default",
        l = void 0 !== e.failIfMajorPerformanceCaveat && e.failIfMajorPerformanceCaveat,
        f = null,
        h = null;
    this.domElement = t, this.debug = {
        checkShaderErrors: !0
    }, this.autoClear = !0, this.autoClearColor = !0, this.autoClearDepth = !0, this.autoClearStencil = !0, this.sortObjects = !0, this.clippingPlanes = [], this.localClippingEnabled = !1, this.gammaFactor = 2, this.outputEncoding = 3e3, this.physicallyCorrectLights = !1, this.toneMapping = 1, this.toneMappingExposure = 1, this.toneMappingWhitePoint = 1, this.maxMorphTargets = 8, this.maxMorphNormals = 4;
    var d, p, m, v, g, y, b, w, _, x, E, S, M, T, k, A, C, O, P = this,
        R = !1,
        I = null,
        N = 0,
        L = 0,
        B = null,
        j = null,
        F = -1,
        U = {
            geometry: null,
            program: null,
            wireframe: !1
        },
        D = null,
        z = null,
        H = new pa,
        V = new pa,
        W = null,
        G = t.width,
        q = t.height,
        $ = 1,
        K = null,
        Y = null,
        X = new pa(0, 0, G, q),
        J = new pa(0, 0, G, q),
        Z = !1,
        Q = new Wc,
        ee = new tu,
        te = !1,
        ne = !1,
        re = new Sa,
        ie = new sa;

    function oe()
    {
        return null === B ? $ : 1
    }
    try
    {
        var ae = {
            alpha: r,
            depth: i,
            stencil: o,
            antialias: a,
            premultipliedAlpha: s,
            preserveDrawingBuffer: c,
            powerPreference: u,
            failIfMajorPerformanceCaveat: l,
            xrCompatible: !0
        };
        if (t.addEventListener("webglcontextlost", fe, !1), t.addEventListener("webglcontextrestored", he, !1), null === (d = n || t.getContext("webgl", ae) || t.getContext("experimental-webgl", ae))) throw null !== t.getContext("webgl") ? new Error("Error creating WebGL context with your selected attributes.") : new Error("Error creating WebGL context.");
        void 0 === d.getShaderPrecisionFormat && (d.getShaderPrecisionFormat = function()
        {
            return {
                rangeMin: 1,
                rangeMax: 1,
                precision: 1
            }
        })
    }
    catch (e)
    {
        throw console.error("THREE.WebGLRenderer: " + e.message), e
    }

    function se()
    {
        p = new nu(d), !1 === (m = new eu(d, p, e)).isWebGL2 && (p.get("WEBGL_depth_texture"), p.get("OES_texture_float"), p.get("OES_texture_half_float"), p.get("OES_texture_half_float_linear"), p.get("OES_standard_derivatives"), p.get("OES_element_index_uint"), p.get("ANGLE_instanced_arrays")), p.get("OES_texture_float_linear"), O = new Dl(d, p, m), (v = new Fl(d, p, m)).scissor(V.copy(J).multiplyScalar($).floor()), v.viewport(H.copy(X).multiplyScalar($).floor()), g = new ou(d), y = new Sl, b = new Ul(d, p, v, y, m, O, g), w = new Yc(d), _ = new ru(d, w, g), x = new cu(d, _, w, g), k = new su(d), E = new El(P, p, m), S = new Al, M = new Nl, T = new Zc(P, v, x, s), A = new Qc(d, p, g, m), C = new iu(d, p, g, m), g.programs = E.programs, P.capabilities = m, P.extensions = p, P.properties = y, P.renderLists = S, P.state = v, P.info = g
    }
    se();
    var ce = new Gl(P, d);
    this.xr = ce;
    var ue = new Hl(P, d),
        le = new jl(P, x, m.maxTextureSize);

    function fe(e)
    {
        e.preventDefault(), console.log("THREE.WebGLRenderer: Context Lost."), R = !0
    }

    function he()
    {
        console.log("THREE.WebGLRenderer: Context Restored."), R = !1, se()
    }

    function de(e)
    {
        var t = e.target;
        t.removeEventListener("dispose", de),
            function(e)
            {
                pe(e), y.remove(e)
            }(t)
    }

    function pe(e)
    {
        var t = y.get(e).program;
        e.program = void 0, void 0 !== t && E.releaseProgram(t)
    }
    this.shadowMap = le, this.getContext = function()
    {
        return d
    }, this.getContextAttributes = function()
    {
        return d.getContextAttributes()
    }, this.forceContextLoss = function()
    {
        var e = p.get("WEBGL_lose_context");
        e && e.loseContext()
    }, this.forceContextRestore = function()
    {
        var e = p.get("WEBGL_lose_context");
        e && e.restoreContext()
    }, this.getPixelRatio = function()
    {
        return $
    }, this.setPixelRatio = function(e)
    {
        void 0 !== e && ($ = e, this.setSize(G, q, !1))
    }, this.getSize = function(e)
    {
        return void 0 === e && (console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"), e = new ra), e.set(G, q)
    }, this.setSize = function(e, n, r)
    {
        ce.isPresenting ? console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.") : (G = e, q = n, t.width = Math.floor(e * $), t.height = Math.floor(n * $), !1 !== r && (t.style.width = e + "px", t.style.height = n + "px"), this.setViewport(0, 0, e, n))
    }, this.getDrawingBufferSize = function(e)
    {
        return void 0 === e && (console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"), e = new ra), e.set(G * $, q * $).floor()
    }, this.setDrawingBufferSize = function(e, n, r)
    {
        G = e, q = n, $ = r, t.width = Math.floor(e * r), t.height = Math.floor(n * r), this.setViewport(0, 0, e, n)
    }, this.getCurrentViewport = function(e)
    {
        return void 0 === e && (console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"), e = new pa), e.copy(H)
    }, this.getViewport = function(e)
    {
        return e.copy(X)
    }, this.setViewport = function(e, t, n, r)
    {
        e.isVector4 ? X.set(e.x, e.y, e.z, e.w) : X.set(e, t, n, r), v.viewport(H.copy(X).multiplyScalar($).floor())
    }, this.getScissor = function(e)
    {
        return e.copy(J)
    }, this.setScissor = function(e, t, n, r)
    {
        e.isVector4 ? J.set(e.x, e.y, e.z, e.w) : J.set(e, t, n, r), v.scissor(V.copy(J).multiplyScalar($).floor())
    }, this.getScissorTest = function()
    {
        return Z
    }, this.setScissorTest = function(e)
    {
        v.setScissorTest(Z = e)
    }, this.setOpaqueSort = function(e)
    {
        K = e
    }, this.setTransparentSort = function(e)
    {
        Y = e
    }, this.getClearColor = function()
    {
        return T.getClearColor()
    }, this.setClearColor = function()
    {
        T.setClearColor.apply(T, arguments)
    }, this.getClearAlpha = function()
    {
        return T.getClearAlpha()
    }, this.setClearAlpha = function()
    {
        T.setClearAlpha.apply(T, arguments)
    }, this.clear = function(e, t, n)
    {
        var r = 0;
        (void 0 === e || e) && (r |= 16384), (void 0 === t || t) && (r |= 256), (void 0 === n || n) && (r |= 1024), d.clear(r)
    }, this.clearColor = function()
    {
        this.clear(!0, !1, !1)
    }, this.clearDepth = function()
    {
        this.clear(!1, !0, !1)
    }, this.clearStencil = function()
    {
        this.clear(!1, !1, !0)
    }, this.dispose = function()
    {
        t.removeEventListener("webglcontextlost", fe, !1), t.removeEventListener("webglcontextrestored", he, !1), S.dispose(), M.dispose(), y.dispose(), x.dispose(), ce.dispose(), ge.stop()
    }, this.renderBufferImmediate = function(e, t)
    {
        v.initAttributes();
        var n = y.get(e);
        e.hasPositions && !n.position && (n.position = d.createBuffer()), e.hasNormals && !n.normal && (n.normal = d.createBuffer()), e.hasUvs && !n.uv && (n.uv = d.createBuffer()), e.hasColors && !n.color && (n.color = d.createBuffer());
        var r = t.getAttributes();
        e.hasPositions && (d.bindBuffer(34962, n.position), d.bufferData(34962, e.positionArray, 35048), v.enableAttribute(r.position), d.vertexAttribPointer(r.position, 3, 5126, !1, 0, 0)), e.hasNormals && (d.bindBuffer(34962, n.normal), d.bufferData(34962, e.normalArray, 35048), v.enableAttribute(r.normal), d.vertexAttribPointer(r.normal, 3, 5126, !1, 0, 0)), e.hasUvs && (d.bindBuffer(34962, n.uv), d.bufferData(34962, e.uvArray, 35048), v.enableAttribute(r.uv), d.vertexAttribPointer(r.uv, 2, 5126, !1, 0, 0)), e.hasColors && (d.bindBuffer(34962, n.color), d.bufferData(34962, e.colorArray, 35048), v.enableAttribute(r.color), d.vertexAttribPointer(r.color, 3, 5126, !1, 0, 0)), v.disableUnusedAttributes(), d.drawArrays(4, 0, e.count), e.count = 0
    };
    var me = new Va;
    this.renderBufferDirect = function(e, t, n, r, i, o)
    {
        null === t && (t = me);
        var a = i.isMesh && i.matrixWorld.determinant() < 0,
            s = xe(e, t, r, i);
        v.setMaterial(r, a);
        var c = !1;
        U.geometry === n.id && U.program === s.id && U.wireframe === (!0 === r.wireframe) || (U.geometry = n.id, U.program = s.id, U.wireframe = !0 === r.wireframe, c = !0), (r.morphTargets || r.morphNormals) && (k.update(i, n, r, s), c = !0);
        var u = n.index,
            l = n.attributes.position;
        if (null === u)
        {
            if (void 0 === l || 0 === l.count) return
        }
        else if (0 === u.count) return;
        var f, h = 1;
        !0 === r.wireframe && (u = _.getWireframeAttribute(n), h = 2);
        var g = A;
        null !== u && (f = w.get(u), (g = C).setIndex(f)), c && (! function(e, t, n, r)
        {
            if (!1 === m.isWebGL2 && (e.isInstancedMesh || t.isInstancedBufferGeometry) && null === p.get("ANGLE_instanced_arrays")) return;
            v.initAttributes();
            var i = t.attributes,
                o = r.getAttributes(),
                a = n.defaultAttributeValues;
            for (var s in o)
            {
                var c = o[s];
                if (c >= 0)
                {
                    var u = i[s];
                    if (void 0 !== u)
                    {
                        var l = u.normalized,
                            f = u.itemSize;
                        if (void 0 === (E = w.get(u))) continue;
                        var h = E.buffer,
                            g = E.type,
                            y = E.bytesPerElement;
                        if (u.isInterleavedBufferAttribute)
                        {
                            var b = u.data,
                                _ = b.stride,
                                x = u.offset;
                            b && b.isInstancedInterleavedBuffer ? (v.enableAttributeAndDivisor(c, b.meshPerAttribute), void 0 === t.maxInstancedCount && (t.maxInstancedCount = b.meshPerAttribute * b.count)) : v.enableAttribute(c), d.bindBuffer(34962, h), d.vertexAttribPointer(c, f, g, l, _ * y, x * y)
                        }
                        else u.isInstancedBufferAttribute ? (v.enableAttributeAndDivisor(c, u.meshPerAttribute), void 0 === t.maxInstancedCount && (t.maxInstancedCount = u.meshPerAttribute * u.count)) : v.enableAttribute(c), d.bindBuffer(34962, h), d.vertexAttribPointer(c, f, g, l, 0, 0)
                    }
                    else if ("instanceMatrix" === s)
                    {
                        var E;
                        if (void 0 === (E = w.get(e.instanceMatrix))) continue;
                        h = E.buffer, g = E.type;
                        v.enableAttributeAndDivisor(c + 0, 1), v.enableAttributeAndDivisor(c + 1, 1), v.enableAttributeAndDivisor(c + 2, 1), v.enableAttributeAndDivisor(c + 3, 1), d.bindBuffer(34962, h), d.vertexAttribPointer(c + 0, 4, g, !1, 64, 0), d.vertexAttribPointer(c + 1, 4, g, !1, 64, 16), d.vertexAttribPointer(c + 2, 4, g, !1, 64, 32), d.vertexAttribPointer(c + 3, 4, g, !1, 64, 48)
                    }
                    else if (void 0 !== a)
                    {
                        var S = a[s];
                        if (void 0 !== S) switch (S.length)
                        {
                            case 2:
                                d.vertexAttrib2fv(c, S);
                                break;
                            case 3:
                                d.vertexAttrib3fv(c, S);
                                break;
                            case 4:
                                d.vertexAttrib4fv(c, S);
                                break;
                            default:
                                d.vertexAttrib1fv(c, S)
                        }
                    }
                }
            }
            v.disableUnusedAttributes()
        }(i, n, r, s), null !== u && d.bindBuffer(34963, f.buffer));
        var y = null !== u ? u.count : l.count,
            b = n.drawRange.start * h,
            x = n.drawRange.count * h,
            E = null !== o ? o.start * h : 0,
            S = null !== o ? o.count * h : 1 / 0,
            M = Math.max(b, E),
            T = Math.min(y, b + x, E + S) - 1,
            O = Math.max(0, T - M + 1);
        if (0 !== O)
        {
            if (i.isMesh) !0 === r.wireframe ? (v.setLineWidth(r.wireframeLinewidth * oe()), g.setMode(1)) : g.setMode(4);
            else if (i.isLine)
            {
                var P = r.linewidth;
                void 0 === P && (P = 1), v.setLineWidth(P * oe()), i.isLineSegments ? g.setMode(1) : i.isLineLoop ? g.setMode(2) : g.setMode(3)
            }
            else i.isPoints ? g.setMode(0) : i.isSprite && g.setMode(4);
            i.isInstancedMesh ? g.renderInstances(n, M, O, i.count) : n.isInstancedBufferGeometry ? g.renderInstances(n, M, O, n.maxInstancedCount) : g.render(M, O)
        }
    }, this.compile = function(e, t)
    {
        (h = M.get(e, t)).init(), e.traverse((function(e)
        {
            e.isLight && (h.pushLight(e), e.castShadow && h.pushShadow(e))
        })), h.setupLights(t), e.traverse((function(t)
        {
            if (t.material)
                if (Array.isArray(t.material))
                    for (var n = 0; n < t.material.length; n++) _e(t.material[n], e, t);
                else _e(t.material, e, t)
        }))
    };
    var ve = null;
    var ge = new Kc;

    function ye(e, t, n, r)
    {
        if (!1 !== e.visible)
        {
            if (e.layers.test(t.layers))
                if (e.isGroup) n = e.renderOrder;
                else if (e.isLOD) !0 === e.autoUpdate && e.update(t);
            else if (e.isLight) h.pushLight(e), e.castShadow && h.pushShadow(e);
            else if (e.isSprite)
            {
                if (!e.frustumCulled || Q.intersectsSprite(e))
                {
                    r && ie.setFromMatrixPosition(e.matrixWorld).applyMatrix4(re);
                    var i = x.update(e);
                    (o = e.material).visible && f.push(e, i, o, n, ie.z, null)
                }
            }
            else if (e.isImmediateRenderObject) r && ie.setFromMatrixPosition(e.matrixWorld).applyMatrix4(re), f.push(e, null, e.material, n, ie.z, null);
            else if ((e.isMesh || e.isLine || e.isPoints) && (e.isSkinnedMesh && e.skeleton.frame !== g.render.frame && (e.skeleton.update(), e.skeleton.frame = g.render.frame), !e.frustumCulled || Q.intersectsObject(e)))
            {
                r && ie.setFromMatrixPosition(e.matrixWorld).applyMatrix4(re);
                i = x.update(e);
                var o = e.material;
                if (Array.isArray(o))
                    for (var a = i.groups, s = 0, c = a.length; s < c; s++)
                    {
                        var u = a[s],
                            l = o[u.materialIndex];
                        l && l.visible && f.push(e, i, l, n, ie.z, u)
                    }
                else o.visible && f.push(e, i, o, n, ie.z, null)
            }
            var d = e.children;
            for (s = 0, c = d.length; s < c; s++) ye(d[s], t, n, r)
        }
    }

    function be(e, t, n, r)
    {
        for (var i = 0, o = e.length; i < o; i++)
        {
            var a = e[i],
                s = a.object,
                c = a.geometry,
                u = void 0 === r ? a.material : r,
                l = a.group;
            if (n.isArrayCamera)
                if (z = n, ce.enabled && ue.isAvailable()) we(s, t, n, c, u, l);
                else
                    for (var f = n.cameras, d = 0, p = f.length; d < p; d++)
                    {
                        var m = f[d];
                        s.layers.test(m.layers) && (v.viewport(H.copy(m.viewport)), h.setupLights(m), we(s, t, m, c, u, l))
                    }
            else z = null, we(s, t, n, c, u, l)
        }
    }

    function we(e, t, n, r, i, o)
    {
        if (e.onBeforeRender(P, t, n, r, i, o), h = M.get(t, z || n), e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse, e.matrixWorld), e.normalMatrix.getNormalMatrix(e.modelViewMatrix), e.isImmediateRenderObject)
        {
            var a = xe(n, t, i, e);
            v.setMaterial(i), U.geometry = null, U.program = null, U.wireframe = !1,
                function(e, t)
                {
                    e.render((function(e)
                    {
                        P.renderBufferImmediate(e, t)
                    }))
                }(e, a)
        }
        else P.renderBufferDirect(n, t, r, i, e, o);
        e.onAfterRender(P, t, n, r, i, o), h = M.get(t, z || n)
    }

    function _e(e, t, n)
    {
        var r = y.get(e),
            i = h.state.lights,
            o = h.state.shadowsArray,
            a = i.state.version,
            s = E.getParameters(e, i.state, o, t, ee.numPlanes, ee.numIntersection, n),
            c = E.getProgramCacheKey(e, s),
            u = r.program,
            l = !0;
        if (void 0 === u) e.addEventListener("dispose", de);
        else if (u.cacheKey !== c) pe(e);
        else if (r.lightsStateVersion !== a) r.lightsStateVersion = a, l = !1;
        else
        {
            if (void 0 !== s.shaderID) return;
            l = !1
        }
        if (l)
        {
            if (s.shaderID)
            {
                var f = $c[s.shaderID];
                r.shader = {
                    name: e.type,
                    uniforms: Nc(f.uniforms),
                    vertexShader: f.vertexShader,
                    fragmentShader: f.fragmentShader
                }
            }
            else r.shader = {
                name: e.type,
                uniforms: e.uniforms,
                vertexShader: e.vertexShader,
                fragmentShader: e.fragmentShader
            };
            e.onBeforeCompile(r.shader, P), c = E.getProgramCacheKey(e, s), u = E.acquireProgram(e, r.shader, s, c), r.program = u, r.environment = e.isMeshStandardMaterial ? t.environment : null, r.outputEncoding = P.outputEncoding, e.program = u
        }
        var d = u.getAttributes();
        if (e.morphTargets)
        {
            e.numSupportedMorphTargets = 0;
            for (var p = 0; p < P.maxMorphTargets; p++) d["morphTarget" + p] >= 0 && e.numSupportedMorphTargets++
        }
        if (e.morphNormals)
        {
            e.numSupportedMorphNormals = 0;
            for (p = 0; p < P.maxMorphNormals; p++) d["morphNormal" + p] >= 0 && e.numSupportedMorphNormals++
        }
        var m = r.shader.uniforms;
        (e.isShaderMaterial || e.isRawShaderMaterial) && !0 !== e.clipping || (r.numClippingPlanes = ee.numPlanes, r.numIntersection = ee.numIntersection, m.clippingPlanes = ee.uniform), r.fog = t.fog, r.needsLights = function(e)
        {
            return e.isMeshLambertMaterial || e.isMeshToonMaterial || e.isMeshPhongMaterial || e.isMeshStandardMaterial || e.isShadowMaterial || e.isShaderMaterial && !0 === e.lights
        }(e), r.lightsStateVersion = a, r.needsLights && (m.ambientLightColor.value = i.state.ambient, m.lightProbe.value = i.state.probe, m.directionalLights.value = i.state.directional, m.spotLights.value = i.state.spot, m.rectAreaLights.value = i.state.rectArea, m.pointLights.value = i.state.point, m.hemisphereLights.value = i.state.hemi, m.directionalShadowMap.value = i.state.directionalShadowMap, m.directionalShadowMatrix.value = i.state.directionalShadowMatrix, m.spotShadowMap.value = i.state.spotShadowMap, m.spotShadowMatrix.value = i.state.spotShadowMatrix, m.pointShadowMap.value = i.state.pointShadowMap, m.pointShadowMatrix.value = i.state.pointShadowMatrix);
        var v = r.program.getUniforms(),
            g = ol.seqWithValue(v.seq, m);
        r.uniformsList = g
    }

    function xe(e, t, n, r)
    {
        b.resetTextureUnits();
        var i = t.fog,
            o = n.isMeshStandardMaterial ? t.environment : null,
            a = y.get(n),
            s = h.state.lights;
        if (te && (ne || e !== D))
        {
            var c = e === D && n.id === F;
            ee.setState(n.clippingPlanes, n.clipIntersection, n.clipShadows, e, a, c)
        }
        n.version === a.__version && (void 0 === a.program || n.fog && a.fog !== i || a.environment !== o || a.needsLights && a.lightsStateVersion !== s.state.version ? n.needsUpdate = !0 : void 0 === a.numClippingPlanes || a.numClippingPlanes === ee.numPlanes && a.numIntersection === ee.numIntersection ? a.outputEncoding !== P.outputEncoding && (n.needsUpdate = !0) : n.needsUpdate = !0), n.version !== a.__version && (_e(n, t, r), a.__version = n.version);
        var u, l, f = !1,
            p = !1,
            g = !1,
            w = a.program,
            _ = w.getUniforms(),
            x = a.shader.uniforms;
        if (v.useProgram(w.program) && (f = !0, p = !0, g = !0), n.id !== F && (F = n.id, p = !0), f || D !== e)
        {
            if (w.numMultiviewViews > 0 ? ue.updateCameraProjectionMatricesUniform(e, _) : _.setValue(d, "projectionMatrix", e.projectionMatrix), m.logarithmicDepthBuffer && _.setValue(d, "logDepthBufFC", 2 / (Math.log(e.far + 1) / Math.LN2)), D !== e && (D = e, p = !0, g = !0), n.isShaderMaterial || n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshStandardMaterial || n.envMap)
            {
                var E = _.map.cameraPosition;
                void 0 !== E && E.setValue(d, ie.setFromMatrixPosition(e.matrixWorld))
            }(n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial) && _.setValue(d, "isOrthographic", !0 === e.isOrthographicCamera), (n.isMeshPhongMaterial || n.isMeshToonMaterial || n.isMeshLambertMaterial || n.isMeshBasicMaterial || n.isMeshStandardMaterial || n.isShaderMaterial || n.skinning) && (w.numMultiviewViews > 0 ? ue.updateCameraViewMatricesUniform(e, _) : _.setValue(d, "viewMatrix", e.matrixWorldInverse))
        }
        if (n.skinning)
        {
            _.setOptional(d, r, "bindMatrix"), _.setOptional(d, r, "bindMatrixInverse");
            var S = r.skeleton;
            if (S)
            {
                var M = S.bones;
                if (m.floatVertexTextures)
                {
                    if (void 0 === S.boneTexture)
                    {
                        var T = Math.sqrt(4 * M.length);
                        T = na.ceilPowerOfTwo(T), T = Math.max(T, 4);
                        var k = new Float32Array(T * T * 4);
                        k.set(S.boneMatrices);
                        var A = new zc(k, T, T, 1023, 1015);
                        S.boneMatrices = k, S.boneTexture = A, S.boneTextureSize = T
                    }
                    _.setValue(d, "boneTexture", S.boneTexture, b), _.setValue(d, "boneTextureSize", S.boneTextureSize)
                }
                else _.setOptional(d, S, "boneMatrices")
            }
        }
        return (p || a.receiveShadow !== r.receiveShadow) && (a.receiveShadow = r.receiveShadow, _.setValue(d, "receiveShadow", r.receiveShadow)), p && (_.setValue(d, "toneMappingExposure", P.toneMappingExposure), _.setValue(d, "toneMappingWhitePoint", P.toneMappingWhitePoint), a.needsLights && (l = g, (u = x).ambientLightColor.needsUpdate = l, u.lightProbe.needsUpdate = l, u.directionalLights.needsUpdate = l, u.pointLights.needsUpdate = l, u.spotLights.needsUpdate = l, u.rectAreaLights.needsUpdate = l, u.hemisphereLights.needsUpdate = l), i && n.fog && function(e, t)
        {
            e.fogColor.value.copy(t.color), t.isFog ? (e.fogNear.value = t.near, e.fogFar.value = t.far) : t.isFogExp2 && (e.fogDensity.value = t.density)
        }(x, i), n.isMeshBasicMaterial ? Ee(x, n) : n.isMeshLambertMaterial ? (Ee(x, n), function(e, t)
        {
            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap)
        }(x, n)) : n.isMeshToonMaterial ? (Ee(x, n), function(e, t)
        {
            e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 1e-4), t.gradientMap && (e.gradientMap.value = t.gradientMap);
            t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
        }(x, n)) : n.isMeshPhongMaterial ? (Ee(x, n), function(e, t)
        {
            e.specular.value.copy(t.specular), e.shininess.value = Math.max(t.shininess, 1e-4), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap);
            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
        }(x, n)) : n.isMeshStandardMaterial ? (Ee(x, n, o), n.isMeshPhysicalMaterial ? function(e, t, n)
        {
            Se(e, t, n), e.reflectivity.value = t.reflectivity, e.clearcoat.value = t.clearcoat, e.clearcoatRoughness.value = t.clearcoatRoughness, t.sheen && e.sheen.value.copy(t.sheen);
            t.clearcoatNormalMap && (e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale), e.clearcoatNormalMap.value = t.clearcoatNormalMap, 1 === t.side && e.clearcoatNormalScale.value.negate());
            e.transparency.value = t.transparency
        }(x, n, o) : Se(x, n, o)) : n.isMeshMatcapMaterial ? (Ee(x, n), function(e, t)
        {
            t.matcap && (e.matcap.value = t.matcap);
            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
        }(x, n)) : n.isMeshDepthMaterial ? (Ee(x, n), function(e, t)
        {
            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
        }(x, n)) : n.isMeshDistanceMaterial ? (Ee(x, n), function(e, t)
        {
            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias);
            e.referencePosition.value.copy(t.referencePosition), e.nearDistance.value = t.nearDistance, e.farDistance.value = t.farDistance
        }(x, n)) : n.isMeshNormalMaterial ? (Ee(x, n), function(e, t)
        {
            t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1));
            t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate());
            t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias)
        }(x, n)) : n.isLineBasicMaterial ? (function(e, t)
        {
            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity
        }(x, n), n.isLineDashedMaterial && function(e, t)
        {
            e.dashSize.value = t.dashSize, e.totalSize.value = t.dashSize + t.gapSize, e.scale.value = t.scale
        }(x, n)) : n.isPointsMaterial ? function(e, t)
        {
            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.size.value = t.size * $, e.scale.value = .5 * q, t.map && (e.map.value = t.map);
            t.alphaMap && (e.alphaMap.value = t.alphaMap);
            var n;
            t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
            void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix))
        }(x, n) : n.isSpriteMaterial ? function(e, t)
        {
            e.diffuse.value.copy(t.color), e.opacity.value = t.opacity, e.rotation.value = t.rotation, t.map && (e.map.value = t.map);
            t.alphaMap && (e.alphaMap.value = t.alphaMap);
            var n;
            t.map ? n = t.map : t.alphaMap && (n = t.alphaMap);
            void 0 !== n && (!0 === n.matrixAutoUpdate && n.updateMatrix(), e.uvTransform.value.copy(n.matrix))
        }(x, n) : n.isShadowMaterial && (x.color.value.copy(n.color), x.opacity.value = n.opacity), void 0 !== x.ltc_1 && (x.ltc_1.value = qc.LTC_1), void 0 !== x.ltc_2 && (x.ltc_2.value = qc.LTC_2), ol.upload(d, a.uniformsList, x, b), n.isShaderMaterial && (n.uniformsNeedUpdate = !1)), n.isShaderMaterial && !0 === n.uniformsNeedUpdate && (ol.upload(d, a.uniformsList, x, b), n.uniformsNeedUpdate = !1), n.isSpriteMaterial && _.setValue(d, "center", r.center), w.numMultiviewViews > 0 ? ue.updateObjectMatricesUniforms(r, e, _) : (_.setValue(d, "modelViewMatrix", r.modelViewMatrix), _.setValue(d, "normalMatrix", r.normalMatrix)), _.setValue(d, "modelMatrix", r.matrixWorld), w
    }

    function Ee(e, t, n)
    {
        e.opacity.value = t.opacity, t.color && e.diffuse.value.copy(t.color), t.emissive && e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity), t.map && (e.map.value = t.map), t.alphaMap && (e.alphaMap.value = t.alphaMap), t.specularMap && (e.specularMap.value = t.specularMap);
        var r, i, o = t.envMap || n;
        o && (e.envMap.value = o, e.flipEnvMap.value = o.isCubeTexture ? -1 : 1, e.reflectivity.value = t.reflectivity, e.refractionRatio.value = t.refractionRatio, e.maxMipLevel.value = y.get(o).__maxMipLevel), t.lightMap && (e.lightMap.value = t.lightMap, e.lightMapIntensity.value = t.lightMapIntensity), t.aoMap && (e.aoMap.value = t.aoMap, e.aoMapIntensity.value = t.aoMapIntensity), t.map ? r = t.map : t.specularMap ? r = t.specularMap : t.displacementMap ? r = t.displacementMap : t.normalMap ? r = t.normalMap : t.bumpMap ? r = t.bumpMap : t.roughnessMap ? r = t.roughnessMap : t.metalnessMap ? r = t.metalnessMap : t.alphaMap ? r = t.alphaMap : t.emissiveMap && (r = t.emissiveMap), void 0 !== r && (r.isWebGLRenderTarget && (r = r.texture), !0 === r.matrixAutoUpdate && r.updateMatrix(), e.uvTransform.value.copy(r.matrix)), t.aoMap ? i = t.aoMap : t.lightMap && (i = t.lightMap), void 0 !== i && (i.isWebGLRenderTarget && (i = i.texture), !0 === i.matrixAutoUpdate && i.updateMatrix(), e.uv2Transform.value.copy(i.matrix))
    }

    function Se(e, t, n)
    {
        e.roughness.value = t.roughness, e.metalness.value = t.metalness, t.roughnessMap && (e.roughnessMap.value = t.roughnessMap), t.metalnessMap && (e.metalnessMap.value = t.metalnessMap), t.emissiveMap && (e.emissiveMap.value = t.emissiveMap), t.bumpMap && (e.bumpMap.value = t.bumpMap, e.bumpScale.value = t.bumpScale, 1 === t.side && (e.bumpScale.value *= -1)), t.normalMap && (e.normalMap.value = t.normalMap, e.normalScale.value.copy(t.normalScale), 1 === t.side && e.normalScale.value.negate()), t.displacementMap && (e.displacementMap.value = t.displacementMap, e.displacementScale.value = t.displacementScale, e.displacementBias.value = t.displacementBias), (t.envMap || n) && (e.envMapIntensity.value = t.envMapIntensity)
    }
    ge.setAnimationLoop((function(e)
    {
        ce.isPresenting || ve && ve(e)
    })), "undefined" != typeof window && ge.setContext(window), this.setAnimationLoop = function(e)
    {
        ve = e, ce.setAnimationLoop(e), ge.start()
    }, this.render = function(e, t)
    {
        var n, r;
        if (void 0 !== arguments[2] && (console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."), n = arguments[2]), void 0 !== arguments[3] && (console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."), r = arguments[3]), t && t.isCamera)
        {
            if (!R)
            {
                U.geometry = null, U.program = null, U.wireframe = !1, F = -1, D = null, !0 === e.autoUpdate && e.updateMatrixWorld(), null === t.parent && t.updateMatrixWorld(), ce.enabled && ce.isPresenting && (t = ce.getCamera(t)), (h = M.get(e, t)).init(), e.onBeforeRender(P, e, t, n || B), re.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), Q.setFromMatrix(re), ne = this.localClippingEnabled, te = ee.init(this.clippingPlanes, ne, t), (f = S.get(e, t)).init(), ye(e, t, 0, P.sortObjects), !0 === P.sortObjects && f.sort(K, Y), te && ee.beginShadows();
                var i = h.state.shadowsArray;
                le.render(i, e, t), h.setupLights(t), te && ee.endShadows(), this.info.autoReset && this.info.reset(), void 0 !== n && this.setRenderTarget(n), ce.enabled && ue.isAvailable() && ue.attachCamera(t), T.render(f, e, t, r);
                var o = f.opaque,
                    a = f.transparent;
                if (e.overrideMaterial)
                {
                    var s = e.overrideMaterial;
                    o.length && be(o, e, t, s), a.length && be(a, e, t, s)
                }
                else o.length && be(o, e, t), a.length && be(a, e, t);
                e.onAfterRender(P, e, t), null !== B && (b.updateRenderTargetMipmap(B), b.updateMultisampleRenderTarget(B)), v.buffers.depth.setTest(!0), v.buffers.depth.setMask(!0), v.buffers.color.setMask(!0), v.setPolygonOffset(!1), ce.enabled && ue.isAvailable() && ue.detachCamera(t), f = null, h = null
            }
        }
        else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")
    }, this.setFramebuffer = function(e)
    {
        I !== e && null === B && d.bindFramebuffer(36160, e), I = e
    }, this.getActiveCubeFace = function()
    {
        return N
    }, this.getActiveMipmapLevel = function()
    {
        return L
    }, this.getRenderTarget = function()
    {
        return B
    }, this.setRenderTarget = function(e, t, n)
    {
        B = e, N = t, L = n, e && void 0 === y.get(e).__webglFramebuffer && b.setupRenderTarget(e);
        var r = I,
            i = !1;
        if (e)
        {
            var o = y.get(e).__webglFramebuffer;
            e.isWebGLRenderTargetCube ? (r = o[t || 0], i = !0) : r = e.isWebGLMultisampleRenderTarget ? y.get(e).__webglMultisampledFramebuffer : o, H.copy(e.viewport), V.copy(e.scissor), W = e.scissorTest
        }
        else H.copy(X).multiplyScalar($).floor(), V.copy(J).multiplyScalar($).floor(), W = Z;
        if (j !== r && (d.bindFramebuffer(36160, r), j = r), v.viewport(H), v.scissor(V), v.setScissorTest(W), i)
        {
            var a = y.get(e.texture);
            d.framebufferTexture2D(36160, 36064, 34069 + (t || 0), a.__webglTexture, n || 0)
        }
    }, this.readRenderTargetPixels = function(e, t, n, r, i, o, a)
    {
        if (e && e.isWebGLRenderTarget)
        {
            var s = y.get(e).__webglFramebuffer;
            if (e.isWebGLRenderTargetCube && void 0 !== a && (s = s[a]), s)
            {
                var c = !1;
                s !== j && (d.bindFramebuffer(36160, s), c = !0);
                try
                {
                    var u = e.texture,
                        l = u.format,
                        f = u.type;
                    if (1023 !== l && O.convert(l) !== d.getParameter(35739)) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");
                    if (!(1009 === f || O.convert(f) === d.getParameter(35738) || 1015 === f && (m.isWebGL2 || p.get("OES_texture_float") || p.get("WEBGL_color_buffer_float")) || 1016 === f && (m.isWebGL2 ? p.get("EXT_color_buffer_float") : p.get("EXT_color_buffer_half_float")))) return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");
                    36053 === d.checkFramebufferStatus(36160) ? t >= 0 && t <= e.width - r && n >= 0 && n <= e.height - i && d.readPixels(t, n, r, i, O.convert(l), O.convert(f), o) : console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")
                }
                finally
                {
                    c && d.bindFramebuffer(36160, j)
                }
            }
        }
        else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")
    }, this.copyFramebufferToTexture = function(e, t, n)
    {
        void 0 === n && (n = 0);
        var r = Math.pow(2, -n),
            i = Math.floor(t.image.width * r),
            o = Math.floor(t.image.height * r),
            a = O.convert(t.format);
        b.setTexture2D(t, 0), d.copyTexImage2D(3553, n, a, e.x, e.y, i, o, 0), v.unbindTexture()
    }, this.copyTextureToTexture = function(e, t, n, r)
    {
        var i = t.image.width,
            o = t.image.height,
            a = O.convert(n.format),
            s = O.convert(n.type);
        b.setTexture2D(n, 0), t.isDataTexture ? d.texSubImage2D(3553, r || 0, e.x, e.y, i, o, a, s, t.image.data) : d.texSubImage2D(3553, r || 0, e.x, e.y, a, s, t.image), v.unbindTexture()
    }, this.initTexture = function(e)
    {
        b.setTexture2D(e, 0), v.unbindTexture()
    }, "undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",
    {
        detail: this
    }))
}

function $l(e, t)
{
    this.name = "", this.color = new Is(e), this.density = void 0 !== t ? t : 25e-5
}

function Kl(e, t, n)
{
    this.name = "", this.color = new Is(e), this.near = void 0 !== t ? t : 1, this.far = void 0 !== n ? n : 1e3
}

function Yl(e, t)
{
    this.array = e, this.stride = t, this.count = void 0 !== e ? e.length / t : 0, this.usage = 35044, this.updateRange = {
        offset: 0,
        count: -1
    }, this.version = 0
}
zl.prototype = Object.assign(Object.create(ma.prototype),
{
    constructor: zl,
    isWebGLMultiviewRenderTarget: !0,
    copy: function(e)
    {
        return ma.prototype.copy.call(this, e), this.numViews = e.numViews, this
    },
    setNumViews: function(e)
    {
        return this.numViews !== e && (this.numViews = e, this.dispose()), this
    }
}), Vl.prototype = Object.assign(Object.create(Fc.prototype),
{
    constructor: Vl,
    isArrayCamera: !0
}), Wl.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: Wl,
    isGroup: !0
}), Object.assign(Gl.prototype, Qo.prototype), Object.assign($l.prototype,
{
    isFogExp2: !0,
    clone: function()
    {
        return new $l(this.color, this.density)
    },
    toJSON: function()
    {
        return {
            type: "FogExp2",
            color: this.color.getHex(),
            density: this.density
        }
    }
}), Object.assign(Kl.prototype,
{
    isFog: !0,
    clone: function()
    {
        return new Kl(this.color, this.near, this.far)
    },
    toJSON: function()
    {
        return {
            type: "Fog",
            color: this.color.getHex(),
            near: this.near,
            far: this.far
        }
    }
}), Object.defineProperty(Yl.prototype, "needsUpdate",
{
    set: function(e)
    {
        !0 === e && this.version++
    }
}), Object.assign(Yl.prototype,
{
    isInterleavedBuffer: !0,
    onUploadCallback: function() {},
    setUsage: function(e)
    {
        return this.usage = e, this
    },
    copy: function(e)
    {
        return this.array = new e.array.constructor(e.array), this.count = e.count, this.stride = e.stride, this.usage = e.usage, this
    },
    copyAt: function(e, t, n)
    {
        e *= this.stride, n *= t.stride;
        for (var r = 0, i = this.stride; r < i; r++) this.array[e + r] = t.array[n + r];
        return this
    },
    set: function(e, t)
    {
        return void 0 === t && (t = 0), this.array.set(e, t), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    onUpload: function(e)
    {
        return this.onUploadCallback = e, this
    }
});
var Xl, Jl = new sa;

function Zl(e, t, n, r)
{
    this.data = e, this.itemSize = t, this.offset = n, this.normalized = !0 === r
}

function Ql(e)
{
    Us.call(this), this.type = "SpriteMaterial", this.color = new Is(16777215), this.map = null, this.alphaMap = null, this.rotation = 0, this.sizeAttenuation = !0, this.transparent = !0, this.setValues(e)
}
Object.defineProperties(Zl.prototype,
{
    count:
    {
        get: function()
        {
            return this.data.count
        }
    },
    array:
    {
        get: function()
        {
            return this.data.array
        }
    }
}), Object.assign(Zl.prototype,
{
    isInterleavedBufferAttribute: !0,
    applyMatrix4: function(e)
    {
        for (var t = 0, n = this.data.count; t < n; t++) Jl.x = this.getX(t), Jl.y = this.getY(t), Jl.z = this.getZ(t), Jl.applyMatrix4(e), this.setXYZ(t, Jl.x, Jl.y, Jl.z);
        return this
    },
    setX: function(e, t)
    {
        return this.data.array[e * this.data.stride + this.offset] = t, this
    },
    setY: function(e, t)
    {
        return this.data.array[e * this.data.stride + this.offset + 1] = t, this
    },
    setZ: function(e, t)
    {
        return this.data.array[e * this.data.stride + this.offset + 2] = t, this
    },
    setW: function(e, t)
    {
        return this.data.array[e * this.data.stride + this.offset + 3] = t, this
    },
    getX: function(e)
    {
        return this.data.array[e * this.data.stride + this.offset]
    },
    getY: function(e)
    {
        return this.data.array[e * this.data.stride + this.offset + 1]
    },
    getZ: function(e)
    {
        return this.data.array[e * this.data.stride + this.offset + 2]
    },
    getW: function(e)
    {
        return this.data.array[e * this.data.stride + this.offset + 3]
    },
    setXY: function(e, t, n)
    {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this
    },
    setXYZ: function(e, t, n, r)
    {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this
    },
    setXYZW: function(e, t, n, r, i)
    {
        return e = e * this.data.stride + this.offset, this.data.array[e + 0] = t, this.data.array[e + 1] = n, this.data.array[e + 2] = r, this.data.array[e + 3] = i, this
    }
}), Ql.prototype = Object.create(Us.prototype), Ql.prototype.constructor = Ql, Ql.prototype.isSpriteMaterial = !0, Ql.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.rotation = e.rotation, this.sizeAttenuation = e.sizeAttenuation, this
};
var ef = new sa,
    tf = new sa,
    nf = new sa,
    rf = new ra,
    of = new ra,
    af = new Sa,
    sf = new sa,
    cf = new sa,
    uf = new sa,
    lf = new ra,
    ff = new ra,
    hf = new ra;

function df(e)
{
    if (Ha.call(this), this.type = "Sprite", void 0 === Xl)
    {
        Xl = new sc;
        var t = new Yl(new Float32Array([-.5, -.5, 0, 0, 0, .5, -.5, 0, 1, 0, .5, .5, 0, 1, 1, -.5, .5, 0, 0, 1]), 5);
        Xl.setIndex([0, 1, 2, 0, 2, 3]), Xl.setAttribute("position", new Zl(t, 3, 0, !1)), Xl.setAttribute("uv", new Zl(t, 2, 3, !1))
    }
    this.geometry = Xl, this.material = void 0 !== e ? e : new Ql, this.center = new ra(.5, .5)
}

function pf(e, t, n, r, i, o)
{
    rf.subVectors(e, n).addScalar(.5).multiply(r), void 0 !== i ? ( of .x = o * rf.x - i * rf.y, of .y = i * rf.x + o * rf.y) : of .copy(rf), e.copy(t), e.x += of .x, e.y += of .y, e.applyMatrix4(af)
}
df.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: df,
    isSprite: !0,
    raycast: function(e, t)
    {
        null === e.camera && console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'), tf.setFromMatrixScale(this.matrixWorld), af.copy(e.camera.matrixWorld), this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse, this.matrixWorld), nf.setFromMatrixPosition(this.modelViewMatrix), e.camera.isPerspectiveCamera && !1 === this.material.sizeAttenuation && tf.multiplyScalar(-nf.z);
        var n, r, i = this.material.rotation;
        0 !== i && (r = Math.cos(i), n = Math.sin(i));
        var o = this.center;
        pf(sf.set(-.5, -.5, 0), nf, o, tf, n, r), pf(cf.set(.5, -.5, 0), nf, o, tf, n, r), pf(uf.set(.5, .5, 0), nf, o, tf, n, r), lf.set(0, 0), ff.set(1, 0), hf.set(1, 1);
        var a = e.ray.intersectTriangle(sf, cf, uf, !1, ef);
        if (null !== a || (pf(cf.set(-.5, .5, 0), nf, o, tf, n, r), ff.set(0, 1), null !== (a = e.ray.intersectTriangle(sf, uf, cf, !1, ef))))
        {
            var s = e.ray.origin.distanceTo(ef);
            s < e.near || s > e.far || t.push(
            {
                distance: s,
                point: ef.clone(),
                uv: Cs.getUV(ef, sf, cf, uf, lf, ff, hf, new ra),
                face: null,
                object: this
            })
        }
    },
    clone: function()
    {
        return new this.constructor(this.material).copy(this)
    },
    copy: function(e)
    {
        return Ha.prototype.copy.call(this, e), void 0 !== e.center && this.center.copy(e.center), this
    }
});
var mf = new sa,
    vf = new sa;

function gf()
{
    Ha.call(this), this.type = "LOD", Object.defineProperties(this,
    {
        levels:
        {
            enumerable: !0,
            value: []
        }
    }), this.autoUpdate = !0
}

function yf(e, t)
{
    e && e.isGeometry && console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."), Mc.call(this, e, t), this.type = "SkinnedMesh", this.bindMode = "attached", this.bindMatrix = new Sa, this.bindMatrixInverse = new Sa
}
gf.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: gf,
    isLOD: !0,
    copy: function(e)
    {
        Ha.prototype.copy.call(this, e, !1);
        for (var t = e.levels, n = 0, r = t.length; n < r; n++)
        {
            var i = t[n];
            this.addLevel(i.object.clone(), i.distance)
        }
        return this.autoUpdate = e.autoUpdate, this
    },
    addLevel: function(e, t)
    {
        void 0 === t && (t = 0), t = Math.abs(t);
        for (var n = this.levels, r = 0; r < n.length && !(t < n[r].distance); r++);
        return n.splice(r, 0,
        {
            distance: t,
            object: e
        }), this.add(e), this
    },
    getObjectForDistance: function(e)
    {
        var t = this.levels;
        if (t.length > 0)
        {
            for (var n = 1, r = t.length; n < r && !(e < t[n].distance); n++);
            return t[n - 1].object
        }
        return null
    },
    raycast: function(e, t)
    {
        if (this.levels.length > 0)
        {
            mf.setFromMatrixPosition(this.matrixWorld);
            var n = e.ray.origin.distanceTo(mf);
            this.getObjectForDistance(n).raycast(e, t)
        }
    },
    update: function(e)
    {
        var t = this.levels;
        if (t.length > 1)
        {
            mf.setFromMatrixPosition(e.matrixWorld), vf.setFromMatrixPosition(this.matrixWorld);
            var n = mf.distanceTo(vf);
            t[0].object.visible = !0;
            for (var r = 1, i = t.length; r < i && n >= t[r].distance; r++) t[r - 1].object.visible = !1, t[r].object.visible = !0;
            for (; r < i; r++) t[r].object.visible = !1
        }
    },
    toJSON: function(e)
    {
        var t = Ha.prototype.toJSON.call(this, e);
        !1 === this.autoUpdate && (t.object.autoUpdate = !1), t.object.levels = [];
        for (var n = this.levels, r = 0, i = n.length; r < i; r++)
        {
            var o = n[r];
            t.object.levels.push(
            {
                object: o.object.uuid,
                distance: o.distance
            })
        }
        return t
    }
}), yf.prototype = Object.assign(Object.create(Mc.prototype),
{
    constructor: yf,
    isSkinnedMesh: !0,
    bind: function(e, t)
    {
        this.skeleton = e, void 0 === t && (this.updateMatrixWorld(!0), this.skeleton.calculateInverses(), t = this.matrixWorld), this.bindMatrix.copy(t), this.bindMatrixInverse.getInverse(t)
    },
    pose: function()
    {
        this.skeleton.pose()
    },
    normalizeSkinWeights: function()
    {
        for (var e = new pa, t = this.geometry.attributes.skinWeight, n = 0, r = t.count; n < r; n++)
        {
            e.x = t.getX(n), e.y = t.getY(n), e.z = t.getZ(n), e.w = t.getW(n);
            var i = 1 / e.manhattanLength();
            i !== 1 / 0 ? e.multiplyScalar(i) : e.set(1, 0, 0, 0), t.setXYZW(n, e.x, e.y, e.z, e.w)
        }
    },
    updateMatrixWorld: function(e)
    {
        Mc.prototype.updateMatrixWorld.call(this, e), "attached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.matrixWorld) : "detached" === this.bindMode ? this.bindMatrixInverse.getInverse(this.bindMatrix) : console.warn("THREE.SkinnedMesh: Unrecognized bindMode: " + this.bindMode)
    },
    clone: function()
    {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
});
var bf = new Sa,
    wf = new Sa;

function _f(e, t)
{
    if (e = e || [], this.bones = e.slice(0), this.boneMatrices = new Float32Array(16 * this.bones.length), this.frame = -1, void 0 === t) this.calculateInverses();
    else if (this.bones.length === t.length) this.boneInverses = t.slice(0);
    else
    {
        console.warn("THREE.Skeleton boneInverses is the wrong length."), this.boneInverses = [];
        for (var n = 0, r = this.bones.length; n < r; n++) this.boneInverses.push(new Sa)
    }
}

function xf()
{
    Ha.call(this), this.type = "Bone"
}
Object.assign(_f.prototype,
{
    calculateInverses: function()
    {
        this.boneInverses = [];
        for (var e = 0, t = this.bones.length; e < t; e++)
        {
            var n = new Sa;
            this.bones[e] && n.getInverse(this.bones[e].matrixWorld), this.boneInverses.push(n)
        }
    },
    pose: function()
    {
        var e, t, n;
        for (t = 0, n = this.bones.length; t < n; t++)(e = this.bones[t]) && e.matrixWorld.getInverse(this.boneInverses[t]);
        for (t = 0, n = this.bones.length; t < n; t++)(e = this.bones[t]) && (e.parent && e.parent.isBone ? (e.matrix.getInverse(e.parent.matrixWorld), e.matrix.multiply(e.matrixWorld)) : e.matrix.copy(e.matrixWorld), e.matrix.decompose(e.position, e.quaternion, e.scale))
    },
    update: function()
    {
        for (var e = this.bones, t = this.boneInverses, n = this.boneMatrices, r = this.boneTexture, i = 0, o = e.length; i < o; i++)
        {
            var a = e[i] ? e[i].matrixWorld : wf;
            bf.multiplyMatrices(a, t[i]), bf.toArray(n, 16 * i)
        }
        void 0 !== r && (r.needsUpdate = !0)
    },
    clone: function()
    {
        return new _f(this.bones, this.boneInverses)
    },
    getBoneByName: function(e)
    {
        for (var t = 0, n = this.bones.length; t < n; t++)
        {
            var r = this.bones[t];
            if (r.name === e) return r
        }
    }
}), xf.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: xf,
    isBone: !0
});
var Ef = new Sa,
    Sf = new Sa,
    Mf = [],
    Tf = new Mc;

function kf(e, t, n)
{
    Mc.call(this, e, t), this.instanceMatrix = new Hs(new Float32Array(16 * n), 16), this.count = n
}

function Af(e)
{
    Us.call(this), this.type = "LineBasicMaterial", this.color = new Is(16777215), this.linewidth = 1, this.linecap = "round", this.linejoin = "round", this.setValues(e)
}
kf.prototype = Object.assign(Object.create(Mc.prototype),
{
    constructor: kf,
    isInstancedMesh: !0,
    getMatrixAt: function(e, t)
    {
        t.fromArray(this.instanceMatrix.array, 16 * e)
    },
    raycast: function(e, t)
    {
        var n = this.matrixWorld,
            r = this.count;
        if (Tf.geometry = this.geometry, Tf.material = this.material, void 0 !== Tf.material)
            for (var i = 0; i < r; i++) this.getMatrixAt(i, Ef), Sf.multiplyMatrices(n, Ef), Tf.matrixWorld = Sf, Tf.raycast(e, Mf), Mf.length > 0 && (Mf[0].instanceId = i, Mf[0].object = this, t.push(Mf[0]), Mf.length = 0)
    },
    setMatrixAt: function(e, t)
    {
        t.toArray(this.instanceMatrix.array, 16 * e)
    },
    updateMorphTargets: function() {}
}), Af.prototype = Object.create(Us.prototype), Af.prototype.constructor = Af, Af.prototype.isLineBasicMaterial = !0, Af.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.linewidth = e.linewidth, this.linecap = e.linecap, this.linejoin = e.linejoin, this
};
var Cf = new sa,
    Of = new sa,
    Pf = new Sa,
    Rf = new ps,
    If = new as;

function Nf(e, t, n)
{
    1 === n && console.error("THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead."), Ha.call(this), this.type = "Line", this.geometry = void 0 !== e ? e : new sc, this.material = void 0 !== t ? t : new Af(
    {
        color: 16777215 * Math.random()
    })
}
Nf.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: Nf,
    isLine: !0,
    computeLineDistances: function()
    {
        var e = this.geometry;
        if (e.isBufferGeometry)
            if (null === e.index)
            {
                for (var t = e.attributes.position, n = [0], r = 1, i = t.count; r < i; r++) Cf.fromBufferAttribute(t, r - 1), Of.fromBufferAttribute(t, r), n[r] = n[r - 1], n[r] += Cf.distanceTo(Of);
                e.setAttribute("lineDistance", new Xs(n, 1))
            }
        else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else if (e.isGeometry)
        {
            var o = e.vertices;
            (n = e.lineDistances)[0] = 0;
            for (r = 1, i = o.length; r < i; r++) n[r] = n[r - 1], n[r] += o[r - 1].distanceTo(o[r])
        }
        return this
    },
    raycast: function(e, t)
    {
        var n = e.linePrecision,
            r = this.geometry,
            i = this.matrixWorld;
        if (null === r.boundingSphere && r.computeBoundingSphere(), If.copy(r.boundingSphere), If.applyMatrix4(i), If.radius += n, !1 !== e.ray.intersectsSphere(If))
        {
            Pf.getInverse(i), Rf.copy(e.ray).applyMatrix4(Pf);
            var o = n / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                a = o * o,
                s = new sa,
                c = new sa,
                u = new sa,
                l = new sa,
                f = this && this.isLineSegments ? 2 : 1;
            if (r.isBufferGeometry)
            {
                var h = r.index,
                    d = r.attributes.position.array;
                if (null !== h)
                    for (var p = h.array, m = 0, v = p.length - 1; m < v; m += f)
                    {
                        var g = p[m],
                            y = p[m + 1];
                        if (s.fromArray(d, 3 * g), c.fromArray(d, 3 * y), !(Rf.distanceSqToSegment(s, c, l, u) > a)) l.applyMatrix4(this.matrixWorld), (_ = e.ray.origin.distanceTo(l)) < e.near || _ > e.far || t.push(
                        {
                            distance: _,
                            point: u.clone().applyMatrix4(this.matrixWorld),
                            index: m,
                            face: null,
                            faceIndex: null,
                            object: this
                        })
                    }
                else
                    for (m = 0, v = d.length / 3 - 1; m < v; m += f)
                    {
                        if (s.fromArray(d, 3 * m), c.fromArray(d, 3 * m + 3), !(Rf.distanceSqToSegment(s, c, l, u) > a)) l.applyMatrix4(this.matrixWorld), (_ = e.ray.origin.distanceTo(l)) < e.near || _ > e.far || t.push(
                        {
                            distance: _,
                            point: u.clone().applyMatrix4(this.matrixWorld),
                            index: m,
                            face: null,
                            faceIndex: null,
                            object: this
                        })
                    }
            }
            else if (r.isGeometry)
            {
                var b = r.vertices,
                    w = b.length;
                for (m = 0; m < w - 1; m += f)
                {
                    var _;
                    if (!(Rf.distanceSqToSegment(b[m], b[m + 1], l, u) > a)) l.applyMatrix4(this.matrixWorld), (_ = e.ray.origin.distanceTo(l)) < e.near || _ > e.far || t.push(
                    {
                        distance: _,
                        point: u.clone().applyMatrix4(this.matrixWorld),
                        index: m,
                        face: null,
                        faceIndex: null,
                        object: this
                    })
                }
            }
        }
    },
    clone: function()
    {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
});
var Lf = new sa,
    Bf = new sa;

function jf(e, t)
{
    Nf.call(this, e, t), this.type = "LineSegments"
}

function Ff(e, t)
{
    Nf.call(this, e, t), this.type = "LineLoop"
}

function Uf(e)
{
    Us.call(this), this.type = "PointsMaterial", this.color = new Is(16777215), this.map = null, this.alphaMap = null, this.size = 1, this.sizeAttenuation = !0, this.morphTargets = !1, this.setValues(e)
}
jf.prototype = Object.assign(Object.create(Nf.prototype),
{
    constructor: jf,
    isLineSegments: !0,
    computeLineDistances: function()
    {
        var e = this.geometry;
        if (e.isBufferGeometry)
            if (null === e.index)
            {
                for (var t = e.attributes.position, n = [], r = 0, i = t.count; r < i; r += 2) Lf.fromBufferAttribute(t, r), Bf.fromBufferAttribute(t, r + 1), n[r] = 0 === r ? 0 : n[r - 1], n[r + 1] = n[r] + Lf.distanceTo(Bf);
                e.setAttribute("lineDistance", new Xs(n, 1))
            }
        else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");
        else if (e.isGeometry)
        {
            var o = e.vertices;
            for (n = e.lineDistances, r = 0, i = o.length; r < i; r += 2) Lf.copy(o[r]), Bf.copy(o[r + 1]), n[r] = 0 === r ? 0 : n[r - 1], n[r + 1] = n[r] + Lf.distanceTo(Bf)
        }
        return this
    }
}), Ff.prototype = Object.assign(Object.create(Nf.prototype),
{
    constructor: Ff,
    isLineLoop: !0
}), Uf.prototype = Object.create(Us.prototype), Uf.prototype.constructor = Uf, Uf.prototype.isPointsMaterial = !0, Uf.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.alphaMap = e.alphaMap, this.size = e.size, this.sizeAttenuation = e.sizeAttenuation, this.morphTargets = e.morphTargets, this
};
var Df = new Sa,
    zf = new ps,
    Hf = new as,
    Vf = new sa;

function Wf(e, t)
{
    Ha.call(this), this.type = "Points", this.geometry = void 0 !== e ? e : new sc, this.material = void 0 !== t ? t : new Uf(
    {
        color: 16777215 * Math.random()
    }), this.updateMorphTargets()
}

function Gf(e, t, n, r, i, o, a)
{
    var s = zf.distanceSqToPoint(e);
    if (s < n)
    {
        var c = new sa;
        zf.closestPointToPoint(e, c), c.applyMatrix4(r);
        var u = i.ray.origin.distanceTo(c);
        if (u < i.near || u > i.far) return;
        o.push(
        {
            distance: u,
            distanceToRay: Math.sqrt(s),
            point: c,
            index: t,
            face: null,
            object: a
        })
    }
}

function qf(e, t, n, r, i, o, a, s, c)
{
    da.call(this, e, t, n, r, i, o, a, s, c), this.format = void 0 !== a ? a : 1022, this.minFilter = void 0 !== o ? o : 1006, this.magFilter = void 0 !== i ? i : 1006, this.generateMipmaps = !1
}

function $f(e, t, n, r, i, o, a, s, c, u, l, f)
{
    da.call(this, null, o, a, s, c, u, r, i, l, f), this.image = {
        width: t,
        height: n
    }, this.mipmaps = e, this.flipY = !1, this.generateMipmaps = !1
}

function Kf(e, t, n, r, i, o, a, s, c)
{
    da.call(this, e, t, n, r, i, o, a, s, c), this.needsUpdate = !0
}

function Yf(e, t, n, r, i, o, a, s, c, u)
{
    if (1026 !== (u = void 0 !== u ? u : 1026) && 1027 !== u) throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");
    void 0 === n && 1026 === u && (n = 1012), void 0 === n && 1027 === u && (n = 1020), da.call(this, null, r, i, o, a, s, u, n, c), this.image = {
        width: e,
        height: t
    }, this.magFilter = void 0 !== a ? a : 1003, this.minFilter = void 0 !== s ? s : 1003, this.flipY = !1, this.generateMipmaps = !1
}

function Xf(e)
{
    sc.call(this), this.type = "WireframeGeometry";
    var t, n, r, i, o, a, s, c, u, l, f = [],
        h = [0, 0],
        d = {},
        p = ["a", "b", "c"];
    if (e && e.isGeometry)
    {
        var m = e.faces;
        for (t = 0, r = m.length; t < r; t++)
        {
            var v = m[t];
            for (n = 0; n < 3; n++) s = v[p[n]], c = v[p[(n + 1) % 3]], h[0] = Math.min(s, c), h[1] = Math.max(s, c), void 0 === d[u = h[0] + "," + h[1]] && (d[u] = {
                index1: h[0],
                index2: h[1]
            })
        }
        for (u in d) a = d[u], l = e.vertices[a.index1], f.push(l.x, l.y, l.z), l = e.vertices[a.index2], f.push(l.x, l.y, l.z)
    }
    else if (e && e.isBufferGeometry)
    {
        var g, y, b, w, _, x, E;
        if (l = new sa, null !== e.index)
        {
            for (g = e.attributes.position, y = e.index, 0 === (b = e.groups).length && (b = [
                {
                    start: 0,
                    count: y.count,
                    materialIndex: 0
                }]), i = 0, o = b.length; i < o; ++i)
                for (t = _ = (w = b[i]).start, r = _ + w.count; t < r; t += 3)
                    for (n = 0; n < 3; n++) s = y.getX(t + n), c = y.getX(t + (n + 1) % 3), h[0] = Math.min(s, c), h[1] = Math.max(s, c), void 0 === d[u = h[0] + "," + h[1]] && (d[u] = {
                        index1: h[0],
                        index2: h[1]
                    });
            for (u in d) a = d[u], l.fromBufferAttribute(g, a.index1), f.push(l.x, l.y, l.z), l.fromBufferAttribute(g, a.index2), f.push(l.x, l.y, l.z)
        }
        else
            for (t = 0, r = (g = e.attributes.position).count / 3; t < r; t++)
                for (n = 0; n < 3; n++) x = 3 * t + n, l.fromBufferAttribute(g, x), f.push(l.x, l.y, l.z), E = 3 * t + (n + 1) % 3, l.fromBufferAttribute(g, E), f.push(l.x, l.y, l.z)
    }
    this.setAttribute("position", new Xs(f, 3))
}

function Jf(e, t, n)
{
    Rc.call(this), this.type = "ParametricGeometry", this.parameters = {
        func: e,
        slices: t,
        stacks: n
    }, this.fromBufferGeometry(new Zf(e, t, n)), this.mergeVertices()
}

function Zf(e, t, n)
{
    sc.call(this), this.type = "ParametricBufferGeometry", this.parameters = {
        func: e,
        slices: t,
        stacks: n
    };
    var r, i, o = [],
        a = [],
        s = [],
        c = [],
        u = 1e-5,
        l = new sa,
        f = new sa,
        h = new sa,
        d = new sa,
        p = new sa;
    e.length < 3 && console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");
    var m = t + 1;
    for (r = 0; r <= n; r++)
    {
        var v = r / n;
        for (i = 0; i <= t; i++)
        {
            var g = i / t;
            e(g, v, f), a.push(f.x, f.y, f.z), g - u >= 0 ? (e(g - u, v, h), d.subVectors(f, h)) : (e(g + u, v, h), d.subVectors(h, f)), v - u >= 0 ? (e(g, v - u, h), p.subVectors(f, h)) : (e(g, v + u, h), p.subVectors(h, f)), l.crossVectors(d, p).normalize(), s.push(l.x, l.y, l.z), c.push(g, v)
        }
    }
    for (r = 0; r < n; r++)
        for (i = 0; i < t; i++)
        {
            var y = r * m + i,
                b = r * m + i + 1,
                w = (r + 1) * m + i + 1,
                _ = (r + 1) * m + i;
            o.push(y, b, _), o.push(b, w, _)
        }
    this.setIndex(o), this.setAttribute("position", new Xs(a, 3)), this.setAttribute("normal", new Xs(s, 3)), this.setAttribute("uv", new Xs(c, 2))
}

function Qf(e, t, n, r)
{
    Rc.call(this), this.type = "PolyhedronGeometry", this.parameters = {
        vertices: e,
        indices: t,
        radius: n,
        detail: r
    }, this.fromBufferGeometry(new eh(e, t, n, r)), this.mergeVertices()
}

function eh(e, t, n, r)
{
    sc.call(this), this.type = "PolyhedronBufferGeometry", this.parameters = {
        vertices: e,
        indices: t,
        radius: n,
        detail: r
    }, n = n || 1;
    var i = [],
        o = [];

    function a(e, t, n, r)
    {
        var i, o, a = Math.pow(2, r),
            c = [];
        for (i = 0; i <= a; i++)
        {
            c[i] = [];
            var u = e.clone().lerp(n, i / a),
                l = t.clone().lerp(n, i / a),
                f = a - i;
            for (o = 0; o <= f; o++) c[i][o] = 0 === o && i === a ? u : u.clone().lerp(l, o / f)
        }
        for (i = 0; i < a; i++)
            for (o = 0; o < 2 * (a - i) - 1; o++)
            {
                var h = Math.floor(o / 2);
                o % 2 == 0 ? (s(c[i][h + 1]), s(c[i + 1][h]), s(c[i][h])) : (s(c[i][h + 1]), s(c[i + 1][h + 1]), s(c[i + 1][h]))
            }
    }

    function s(e)
    {
        i.push(e.x, e.y, e.z)
    }

    function c(t, n)
    {
        var r = 3 * t;
        n.x = e[r + 0], n.y = e[r + 1], n.z = e[r + 2]
    }

    function u(e, t, n, r)
    {
        r < 0 && 1 === e.x && (o[t] = e.x - 1), 0 === n.x && 0 === n.z && (o[t] = r / 2 / Math.PI + .5)
    }

    function l(e)
    {
        return Math.atan2(e.z, -e.x)
    }! function(e)
    {
        for (var n = new sa, r = new sa, i = new sa, o = 0; o < t.length; o += 3) c(t[o + 0], n), c(t[o + 1], r), c(t[o + 2], i), a(n, r, i, e)
    }(r = r || 0),
    function(e)
    {
        for (var t = new sa, n = 0; n < i.length; n += 3) t.x = i[n + 0], t.y = i[n + 1], t.z = i[n + 2], t.normalize().multiplyScalar(e), i[n + 0] = t.x, i[n + 1] = t.y, i[n + 2] = t.z
    }(n),
    function()
    {
        for (var e = new sa, t = 0; t < i.length; t += 3)
        {
            e.x = i[t + 0], e.y = i[t + 1], e.z = i[t + 2];
            var n = l(e) / 2 / Math.PI + .5,
                r = (a = e, Math.atan2(-a.y, Math.sqrt(a.x * a.x + a.z * a.z)) / Math.PI + .5);
            o.push(n, 1 - r)
        }
        var a;
        (function()
        {
            for (var e = new sa, t = new sa, n = new sa, r = new sa, a = new ra, s = new ra, c = new ra, f = 0, h = 0; f < i.length; f += 9, h += 6)
            {
                e.set(i[f + 0], i[f + 1], i[f + 2]), t.set(i[f + 3], i[f + 4], i[f + 5]), n.set(i[f + 6], i[f + 7], i[f + 8]), a.set(o[h + 0], o[h + 1]), s.set(o[h + 2], o[h + 3]), c.set(o[h + 4], o[h + 5]), r.copy(e).add(t).add(n).divideScalar(3);
                var d = l(r);
                u(a, h + 0, e, d), u(s, h + 2, t, d), u(c, h + 4, n, d)
            }
        })(),
        function()
        {
            for (var e = 0; e < o.length; e += 6)
            {
                var t = o[e + 0],
                    n = o[e + 2],
                    r = o[e + 4],
                    i = Math.max(t, n, r),
                    a = Math.min(t, n, r);
                i > .9 && a < .1 && (t < .2 && (o[e + 0] += 1), n < .2 && (o[e + 2] += 1), r < .2 && (o[e + 4] += 1))
            }
        }()
    }(), this.setAttribute("position", new Xs(i, 3)), this.setAttribute("normal", new Xs(i.slice(), 3)), this.setAttribute("uv", new Xs(o, 2)), 0 === r ? this.computeVertexNormals() : this.normalizeNormals()
}

function th(e, t)
{
    Rc.call(this), this.type = "TetrahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }, this.fromBufferGeometry(new nh(e, t)), this.mergeVertices()
}

function nh(e, t)
{
    eh.call(this, [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1], [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1], e, t), this.type = "TetrahedronBufferGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}

function rh(e, t)
{
    Rc.call(this), this.type = "OctahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }, this.fromBufferGeometry(new ih(e, t)), this.mergeVertices()
}

function ih(e, t)
{
    eh.call(this, [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1], [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2], e, t), this.type = "OctahedronBufferGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}

function oh(e, t)
{
    Rc.call(this), this.type = "IcosahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }, this.fromBufferGeometry(new ah(e, t)), this.mergeVertices()
}

function ah(e, t)
{
    var n = (1 + Math.sqrt(5)) / 2,
        r = [-1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, 0, 0, -1, n, 0, 1, n, 0, -1, -n, 0, 1, -n, n, 0, -1, n, 0, 1, -n, 0, -1, -n, 0, 1];
    eh.call(this, r, [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1], e, t), this.type = "IcosahedronBufferGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}

function sh(e, t)
{
    Rc.call(this), this.type = "DodecahedronGeometry", this.parameters = {
        radius: e,
        detail: t
    }, this.fromBufferGeometry(new ch(e, t)), this.mergeVertices()
}

function ch(e, t)
{
    var n = (1 + Math.sqrt(5)) / 2,
        r = 1 / n,
        i = [-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, 0, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, -r, -n, 0, -r, n, 0, r, -n, 0, r, n, 0, -n, 0, -r, n, 0, -r, -n, 0, r, n, 0, r];
    eh.call(this, i, [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9], e, t), this.type = "DodecahedronBufferGeometry", this.parameters = {
        radius: e,
        detail: t
    }
}

function uh(e, t, n, r, i, o)
{
    Rc.call(this), this.type = "TubeGeometry", this.parameters = {
        path: e,
        tubularSegments: t,
        radius: n,
        radialSegments: r,
        closed: i
    }, void 0 !== o && console.warn("THREE.TubeGeometry: taper has been removed.");
    var a = new lh(e, t, n, r, i);
    this.tangents = a.tangents, this.normals = a.normals, this.binormals = a.binormals, this.fromBufferGeometry(a), this.mergeVertices()
}

function lh(e, t, n, r, i)
{
    sc.call(this), this.type = "TubeBufferGeometry", this.parameters = {
        path: e,
        tubularSegments: t,
        radius: n,
        radialSegments: r,
        closed: i
    }, t = t || 64, n = n || 1, r = r || 8, i = i || !1;
    var o = e.computeFrenetFrames(t, i);
    this.tangents = o.tangents, this.normals = o.normals, this.binormals = o.binormals;
    var a, s, c = new sa,
        u = new sa,
        l = new ra,
        f = new sa,
        h = [],
        d = [],
        p = [],
        m = [];

    function v(i)
    {
        f = e.getPointAt(i / t, f);
        var a = o.normals[i],
            l = o.binormals[i];
        for (s = 0; s <= r; s++)
        {
            var p = s / r * Math.PI * 2,
                m = Math.sin(p),
                v = -Math.cos(p);
            u.x = v * a.x + m * l.x, u.y = v * a.y + m * l.y, u.z = v * a.z + m * l.z, u.normalize(), d.push(u.x, u.y, u.z), c.x = f.x + n * u.x, c.y = f.y + n * u.y, c.z = f.z + n * u.z, h.push(c.x, c.y, c.z)
        }
    }! function()
    {
        for (a = 0; a < t; a++) v(a);
        v(!1 === i ? t : 0),
            function()
            {
                for (a = 0; a <= t; a++)
                    for (s = 0; s <= r; s++) l.x = a / t, l.y = s / r, p.push(l.x, l.y)
            }(),
            function()
            {
                for (s = 1; s <= t; s++)
                    for (a = 1; a <= r; a++)
                    {
                        var e = (r + 1) * (s - 1) + (a - 1),
                            n = (r + 1) * s + (a - 1),
                            i = (r + 1) * s + a,
                            o = (r + 1) * (s - 1) + a;
                        m.push(e, n, o), m.push(n, i, o)
                    }
            }()
    }(), this.setIndex(m), this.setAttribute("position", new Xs(h, 3)), this.setAttribute("normal", new Xs(d, 3)), this.setAttribute("uv", new Xs(p, 2))
}

function fh(e, t, n, r, i, o, a)
{
    Rc.call(this), this.type = "TorusKnotGeometry", this.parameters = {
        radius: e,
        tube: t,
        tubularSegments: n,
        radialSegments: r,
        p: i,
        q: o
    }, void 0 !== a && console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."), this.fromBufferGeometry(new hh(e, t, n, r, i, o)), this.mergeVertices()
}

function hh(e, t, n, r, i, o)
{
    sc.call(this), this.type = "TorusKnotBufferGeometry", this.parameters = {
        radius: e,
        tube: t,
        tubularSegments: n,
        radialSegments: r,
        p: i,
        q: o
    }, e = e || 1, t = t || .4, n = Math.floor(n) || 64, r = Math.floor(r) || 8, i = i || 2, o = o || 3;
    var a, s, c = [],
        u = [],
        l = [],
        f = [],
        h = new sa,
        d = new sa,
        p = new sa,
        m = new sa,
        v = new sa,
        g = new sa,
        y = new sa;
    for (a = 0; a <= n; ++a)
    {
        var b = a / n * i * Math.PI * 2;
        for (k(b, i, o, e, p), k(b + .01, i, o, e, m), g.subVectors(m, p), y.addVectors(m, p), v.crossVectors(g, y), y.crossVectors(v, g), v.normalize(), y.normalize(), s = 0; s <= r; ++s)
        {
            var w = s / r * Math.PI * 2,
                _ = -t * Math.cos(w),
                x = t * Math.sin(w);
            h.x = p.x + (_ * y.x + x * v.x), h.y = p.y + (_ * y.y + x * v.y), h.z = p.z + (_ * y.z + x * v.z), u.push(h.x, h.y, h.z), d.subVectors(h, p).normalize(), l.push(d.x, d.y, d.z), f.push(a / n), f.push(s / r)
        }
    }
    for (s = 1; s <= n; s++)
        for (a = 1; a <= r; a++)
        {
            var E = (r + 1) * (s - 1) + (a - 1),
                S = (r + 1) * s + (a - 1),
                M = (r + 1) * s + a,
                T = (r + 1) * (s - 1) + a;
            c.push(E, S, T), c.push(S, M, T)
        }

    function k(e, t, n, r, i)
    {
        var o = Math.cos(e),
            a = Math.sin(e),
            s = n / t * e,
            c = Math.cos(s);
        i.x = r * (2 + c) * .5 * o, i.y = r * (2 + c) * a * .5, i.z = r * Math.sin(s) * .5
    }
    this.setIndex(c), this.setAttribute("position", new Xs(u, 3)), this.setAttribute("normal", new Xs(l, 3)), this.setAttribute("uv", new Xs(f, 2))
}

function dh(e, t, n, r, i)
{
    Rc.call(this), this.type = "TorusGeometry", this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: r,
        arc: i
    }, this.fromBufferGeometry(new ph(e, t, n, r, i)), this.mergeVertices()
}

function ph(e, t, n, r, i)
{
    sc.call(this), this.type = "TorusBufferGeometry", this.parameters = {
        radius: e,
        tube: t,
        radialSegments: n,
        tubularSegments: r,
        arc: i
    }, e = e || 1, t = t || .4, n = Math.floor(n) || 8, r = Math.floor(r) || 6, i = i || 2 * Math.PI;
    var o, a, s = [],
        c = [],
        u = [],
        l = [],
        f = new sa,
        h = new sa,
        d = new sa;
    for (o = 0; o <= n; o++)
        for (a = 0; a <= r; a++)
        {
            var p = a / r * i,
                m = o / n * Math.PI * 2;
            h.x = (e + t * Math.cos(m)) * Math.cos(p), h.y = (e + t * Math.cos(m)) * Math.sin(p), h.z = t * Math.sin(m), c.push(h.x, h.y, h.z), f.x = e * Math.cos(p), f.y = e * Math.sin(p), d.subVectors(h, f).normalize(), u.push(d.x, d.y, d.z), l.push(a / r), l.push(o / n)
        }
    for (o = 1; o <= n; o++)
        for (a = 1; a <= r; a++)
        {
            var v = (r + 1) * o + a - 1,
                g = (r + 1) * (o - 1) + a - 1,
                y = (r + 1) * (o - 1) + a,
                b = (r + 1) * o + a;
            s.push(v, g, b), s.push(g, y, b)
        }
    this.setIndex(s), this.setAttribute("position", new Xs(c, 3)), this.setAttribute("normal", new Xs(u, 3)), this.setAttribute("uv", new Xs(l, 2))
}
Wf.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: Wf,
    isPoints: !0,
    raycast: function(e, t)
    {
        var n = this.geometry,
            r = this.matrixWorld,
            i = e.params.Points.threshold;
        if (null === n.boundingSphere && n.computeBoundingSphere(), Hf.copy(n.boundingSphere), Hf.applyMatrix4(r), Hf.radius += i, !1 !== e.ray.intersectsSphere(Hf))
        {
            Df.getInverse(r), zf.copy(e.ray).applyMatrix4(Df);
            var o = i / ((this.scale.x + this.scale.y + this.scale.z) / 3),
                a = o * o;
            if (n.isBufferGeometry)
            {
                var s = n.index,
                    c = n.attributes.position.array;
                if (null !== s)
                    for (var u = s.array, l = 0, f = u.length; l < f; l++)
                    {
                        var h = u[l];
                        Vf.fromArray(c, 3 * h), Gf(Vf, h, a, r, e, t, this)
                    }
                else
                {
                    l = 0;
                    for (var d = c.length / 3; l < d; l++) Vf.fromArray(c, 3 * l), Gf(Vf, l, a, r, e, t, this)
                }
            }
            else
            {
                var p = n.vertices;
                for (l = 0, d = p.length; l < d; l++) Gf(p[l], l, a, r, e, t, this)
            }
        }
    },
    updateMorphTargets: function()
    {
        var e, t, n, r = this.geometry;
        if (r.isBufferGeometry)
        {
            var i = r.morphAttributes,
                o = Object.keys(i);
            if (o.length > 0)
            {
                var a = i[o[0]];
                if (void 0 !== a)
                    for (this.morphTargetInfluences = [], this.morphTargetDictionary = {}, e = 0, t = a.length; e < t; e++) n = a[e].name || String(e), this.morphTargetInfluences.push(0), this.morphTargetDictionary[n] = e
            }
        }
        else
        {
            var s = r.morphTargets;
            void 0 !== s && s.length > 0 && console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")
        }
    },
    clone: function()
    {
        return new this.constructor(this.geometry, this.material).copy(this)
    }
}), qf.prototype = Object.assign(Object.create(da.prototype),
{
    constructor: qf,
    isVideoTexture: !0,
    update: function()
    {
        var e = this.image;
        e.readyState >= e.HAVE_CURRENT_DATA && (this.needsUpdate = !0)
    }
}), $f.prototype = Object.create(da.prototype), $f.prototype.constructor = $f, $f.prototype.isCompressedTexture = !0, Kf.prototype = Object.create(da.prototype), Kf.prototype.constructor = Kf, Kf.prototype.isCanvasTexture = !0, Yf.prototype = Object.create(da.prototype), Yf.prototype.constructor = Yf, Yf.prototype.isDepthTexture = !0, Xf.prototype = Object.create(sc.prototype), Xf.prototype.constructor = Xf, Jf.prototype = Object.create(Rc.prototype), Jf.prototype.constructor = Jf, Zf.prototype = Object.create(sc.prototype), Zf.prototype.constructor = Zf, Qf.prototype = Object.create(Rc.prototype), Qf.prototype.constructor = Qf, eh.prototype = Object.create(sc.prototype), eh.prototype.constructor = eh, th.prototype = Object.create(Rc.prototype), th.prototype.constructor = th, nh.prototype = Object.create(eh.prototype), nh.prototype.constructor = nh, rh.prototype = Object.create(Rc.prototype), rh.prototype.constructor = rh, ih.prototype = Object.create(eh.prototype), ih.prototype.constructor = ih, oh.prototype = Object.create(Rc.prototype), oh.prototype.constructor = oh, ah.prototype = Object.create(eh.prototype), ah.prototype.constructor = ah, sh.prototype = Object.create(Rc.prototype), sh.prototype.constructor = sh, ch.prototype = Object.create(eh.prototype), ch.prototype.constructor = ch, uh.prototype = Object.create(Rc.prototype), uh.prototype.constructor = uh, lh.prototype = Object.create(sc.prototype), lh.prototype.constructor = lh, lh.prototype.toJSON = function()
{
    var e = sc.prototype.toJSON.call(this);
    return e.path = this.parameters.path.toJSON(), e
}, fh.prototype = Object.create(Rc.prototype), fh.prototype.constructor = fh, hh.prototype = Object.create(sc.prototype), hh.prototype.constructor = hh, dh.prototype = Object.create(Rc.prototype), dh.prototype.constructor = dh, ph.prototype = Object.create(sc.prototype), ph.prototype.constructor = ph;
var mh = function(e, t, n)
{
    n = n || 2;
    var r, i, o, a, s, c, u, l = t && t.length,
        f = l ? t[0] * n : e.length,
        h = vh(e, 0, f, n, !0),
        d = [];
    if (!h || h.next === h.prev) return d;
    if (l && (h = function(e, t, n, r)
        {
            var i, o, a, s, c, u = [];
            for (i = 0, o = t.length; i < o; i++) a = t[i] * r, s = i < o - 1 ? t[i + 1] * r : e.length, (c = vh(e, a, s, r, !1)) === c.next && (c.steiner = !0), u.push(Th(c));
            for (u.sort(Eh), i = 0; i < u.length; i++) Sh(u[i], n), n = gh(n, n.next);
            return n
        }(e, t, h, n)), e.length > 80 * n)
    {
        r = o = e[0], i = a = e[1];
        for (var p = n; p < f; p += n)(s = e[p]) < r && (r = s), (c = e[p + 1]) < i && (i = c), s > o && (o = s), c > a && (a = c);
        u = 0 !== (u = Math.max(o - r, a - i)) ? 1 / u : 0
    }
    return yh(h, d, n, r, i, u), d
};

function vh(e, t, n, r, i)
{
    var o, a;
    if (i === function(e, t, n, r)
        {
            for (var i = 0, o = t, a = n - r; o < n; o += r) i += (e[a] - e[o]) * (e[o + 1] + e[a + 1]), a = o;
            return i
        }(e, t, n, r) > 0)
        for (o = t; o < n; o += r) a = Nh(o, e[o], e[o + 1], a);
    else
        for (o = n - r; o >= t; o -= r) a = Nh(o, e[o], e[o + 1], a);
    return a && Oh(a, a.next) && (Lh(a), a = a.next), a
}

function gh(e, t)
{
    if (!e) return e;
    t || (t = e);
    var n, r = e;
    do {
        if (n = !1, r.steiner || !Oh(r, r.next) && 0 !== Ch(r.prev, r, r.next)) r = r.next;
        else
        {
            if (Lh(r), (r = t = r.prev) === r.next) break;
            n = !0
        }
    } while (n || r !== t);
    return t
}

function yh(e, t, n, r, i, o, a)
{
    if (e)
    {
        !a && o && function(e, t, n, r)
        {
            var i = e;
            do {
                null === i.z && (i.z = Mh(i.x, i.y, t, n, r)), i.prevZ = i.prev, i.nextZ = i.next, i = i.next
            } while (i !== e);
            i.prevZ.nextZ = null, i.prevZ = null,
                function(e)
                {
                    var t, n, r, i, o, a, s, c, u = 1;
                    do {
                        for (n = e, e = null, o = null, a = 0; n;)
                        {
                            for (a++, r = n, s = 0, t = 0; t < u && (s++, r = r.nextZ); t++);
                            for (c = u; s > 0 || c > 0 && r;) 0 !== s && (0 === c || !r || n.z <= r.z) ? (i = n, n = n.nextZ, s--) : (i = r, r = r.nextZ, c--), o ? o.nextZ = i : e = i, i.prevZ = o, o = i;
                            n = r
                        }
                        o.nextZ = null, u *= 2
                    } while (a > 1)
                }(i)
        }(e, r, i, o);
        for (var s, c, u = e; e.prev !== e.next;)
            if (s = e.prev, c = e.next, o ? wh(e, r, i, o) : bh(e)) t.push(s.i / n), t.push(e.i / n), t.push(c.i / n), Lh(e), e = c.next, u = c.next;
            else if ((e = c) === u)
        {
            a ? 1 === a ? yh(e = _h(e, t, n), t, n, r, i, o, 2) : 2 === a && xh(e, t, n, r, i, o) : yh(gh(e), t, n, r, i, o, 1);
            break
        }
    }
}

function bh(e)
{
    var t = e.prev,
        n = e,
        r = e.next;
    if (Ch(t, n, r) >= 0) return !1;
    for (var i = e.next.next; i !== e.prev;)
    {
        if (kh(t.x, t.y, n.x, n.y, r.x, r.y, i.x, i.y) && Ch(i.prev, i, i.next) >= 0) return !1;
        i = i.next
    }
    return !0
}

function wh(e, t, n, r)
{
    var i = e.prev,
        o = e,
        a = e.next;
    if (Ch(i, o, a) >= 0) return !1;
    for (var s = i.x < o.x ? i.x < a.x ? i.x : a.x : o.x < a.x ? o.x : a.x, c = i.y < o.y ? i.y < a.y ? i.y : a.y : o.y < a.y ? o.y : a.y, u = i.x > o.x ? i.x > a.x ? i.x : a.x : o.x > a.x ? o.x : a.x, l = i.y > o.y ? i.y > a.y ? i.y : a.y : o.y > a.y ? o.y : a.y, f = Mh(s, c, t, n, r), h = Mh(u, l, t, n, r), d = e.prevZ, p = e.nextZ; d && d.z >= f && p && p.z <= h;)
    {
        if (d !== e.prev && d !== e.next && kh(i.x, i.y, o.x, o.y, a.x, a.y, d.x, d.y) && Ch(d.prev, d, d.next) >= 0) return !1;
        if (d = d.prevZ, p !== e.prev && p !== e.next && kh(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Ch(p.prev, p, p.next) >= 0) return !1;
        p = p.nextZ
    }
    for (; d && d.z >= f;)
    {
        if (d !== e.prev && d !== e.next && kh(i.x, i.y, o.x, o.y, a.x, a.y, d.x, d.y) && Ch(d.prev, d, d.next) >= 0) return !1;
        d = d.prevZ
    }
    for (; p && p.z <= h;)
    {
        if (p !== e.prev && p !== e.next && kh(i.x, i.y, o.x, o.y, a.x, a.y, p.x, p.y) && Ch(p.prev, p, p.next) >= 0) return !1;
        p = p.nextZ
    }
    return !0
}

function _h(e, t, n)
{
    var r = e;
    do {
        var i = r.prev,
            o = r.next.next;
        !Oh(i, o) && Ph(i, r, r.next, o) && Rh(i, o) && Rh(o, i) && (t.push(i.i / n), t.push(r.i / n), t.push(o.i / n), Lh(r), Lh(r.next), r = e = o), r = r.next
    } while (r !== e);
    return r
}

function xh(e, t, n, r, i, o)
{
    var a = e;
    do {
        for (var s = a.next.next; s !== a.prev;)
        {
            if (a.i !== s.i && Ah(a, s))
            {
                var c = Ih(a, s);
                return a = gh(a, a.next), c = gh(c, c.next), yh(a, t, n, r, i, o), void yh(c, t, n, r, i, o)
            }
            s = s.next
        }
        a = a.next
    } while (a !== e)
}

function Eh(e, t)
{
    return e.x - t.x
}

function Sh(e, t)
{
    if (t = function(e, t)
        {
            var n, r = t,
                i = e.x,
                o = e.y,
                a = -1 / 0;
            do {
                if (o <= r.y && o >= r.next.y && r.next.y !== r.y)
                {
                    var s = r.x + (o - r.y) * (r.next.x - r.x) / (r.next.y - r.y);
                    if (s <= i && s > a)
                    {
                        if (a = s, s === i)
                        {
                            if (o === r.y) return r;
                            if (o === r.next.y) return r.next
                        }
                        n = r.x < r.next.x ? r : r.next
                    }
                }
                r = r.next
            } while (r !== t);
            if (!n) return null;
            if (i === a) return n.prev;
            var c, u = n,
                l = n.x,
                f = n.y,
                h = 1 / 0;
            r = n.next;
            for (; r !== u;) i >= r.x && r.x >= l && i !== r.x && kh(o < f ? i : a, o, l, f, o < f ? a : i, o, r.x, r.y) && ((c = Math.abs(o - r.y) / (i - r.x)) < h || c === h && r.x > n.x) && Rh(r, e) && (n = r, h = c), r = r.next;
            return n
        }(e, t))
    {
        var n = Ih(t, e);
        gh(n, n.next)
    }
}

function Mh(e, t, n, r, i)
{
    return (e = 1431655765 & ((e = 858993459 & ((e = 252645135 & ((e = 16711935 & ((e = 32767 * (e - n) * i) | e << 8)) | e << 4)) | e << 2)) | e << 1)) | (t = 1431655765 & ((t = 858993459 & ((t = 252645135 & ((t = 16711935 & ((t = 32767 * (t - r) * i) | t << 8)) | t << 4)) | t << 2)) | t << 1)) << 1
}

function Th(e)
{
    var t = e,
        n = e;
    do {
        (t.x < n.x || t.x === n.x && t.y < n.y) && (n = t), t = t.next
    } while (t !== e);
    return n
}

function kh(e, t, n, r, i, o, a, s)
{
    return (i - a) * (t - s) - (e - a) * (o - s) >= 0 && (e - a) * (r - s) - (n - a) * (t - s) >= 0 && (n - a) * (o - s) - (i - a) * (r - s) >= 0
}

function Ah(e, t)
{
    return e.next.i !== t.i && e.prev.i !== t.i && ! function(e, t)
    {
        var n = e;
        do {
            if (n.i !== e.i && n.next.i !== e.i && n.i !== t.i && n.next.i !== t.i && Ph(n, n.next, e, t)) return !0;
            n = n.next
        } while (n !== e);
        return !1
    }(e, t) && Rh(e, t) && Rh(t, e) && function(e, t)
    {
        var n = e,
            r = !1,
            i = (e.x + t.x) / 2,
            o = (e.y + t.y) / 2;
        do {
            n.y > o != n.next.y > o && n.next.y !== n.y && i < (n.next.x - n.x) * (o - n.y) / (n.next.y - n.y) + n.x && (r = !r), n = n.next
        } while (n !== e);
        return r
    }(e, t)
}

function Ch(e, t, n)
{
    return (t.y - e.y) * (n.x - t.x) - (t.x - e.x) * (n.y - t.y)
}

function Oh(e, t)
{
    return e.x === t.x && e.y === t.y
}

function Ph(e, t, n, r)
{
    return !!(Oh(e, n) && Oh(t, r) || Oh(e, r) && Oh(n, t)) || Ch(e, t, n) > 0 != Ch(e, t, r) > 0 && Ch(n, r, e) > 0 != Ch(n, r, t) > 0
}

function Rh(e, t)
{
    return Ch(e.prev, e, e.next) < 0 ? Ch(e, t, e.next) >= 0 && Ch(e, e.prev, t) >= 0 : Ch(e, t, e.prev) < 0 || Ch(e, e.next, t) < 0
}

function Ih(e, t)
{
    var n = new Bh(e.i, e.x, e.y),
        r = new Bh(t.i, t.x, t.y),
        i = e.next,
        o = t.prev;
    return e.next = t, t.prev = e, n.next = i, i.prev = n, r.next = n, n.prev = r, o.next = r, r.prev = o, r
}

function Nh(e, t, n, r)
{
    var i = new Bh(e, t, n);
    return r ? (i.next = r.next, i.prev = r, r.next.prev = i, r.next = i) : (i.prev = i, i.next = i), i
}

function Lh(e)
{
    e.next.prev = e.prev, e.prev.next = e.next, e.prevZ && (e.prevZ.nextZ = e.nextZ), e.nextZ && (e.nextZ.prevZ = e.prevZ)
}

function Bh(e, t, n)
{
    this.i = e, this.x = t, this.y = n, this.prev = null, this.next = null, this.z = null, this.prevZ = null, this.nextZ = null, this.steiner = !1
}
var jh = {
    area: function(e)
    {
        for (var t = e.length, n = 0, r = t - 1, i = 0; i < t; r = i++) n += e[r].x * e[i].y - e[i].x * e[r].y;
        return .5 * n
    },
    isClockWise: function(e)
    {
        return jh.area(e) < 0
    },
    triangulateShape: function(e, t)
    {
        var n = [],
            r = [],
            i = [];
        Fh(e), Uh(n, e);
        var o = e.length;
        t.forEach(Fh);
        for (var a = 0; a < t.length; a++) r.push(o), o += t[a].length, Uh(n, t[a]);
        var s = mh(n, r);
        for (a = 0; a < s.length; a += 3) i.push(s.slice(a, a + 3));
        return i
    }
};

function Fh(e)
{
    var t = e.length;
    t > 2 && e[t - 1].equals(e[0]) && e.pop()
}

function Uh(e, t)
{
    for (var n = 0; n < t.length; n++) e.push(t[n].x), e.push(t[n].y)
}

function Dh(e, t)
{
    Rc.call(this), this.type = "ExtrudeGeometry", this.parameters = {
        shapes: e,
        options: t
    }, this.fromBufferGeometry(new zh(e, t)), this.mergeVertices()
}

function zh(e, t)
{
    sc.call(this), this.type = "ExtrudeBufferGeometry", this.parameters = {
        shapes: e,
        options: t
    }, e = Array.isArray(e) ? e : [e];
    for (var n = this, r = [], i = [], o = 0, a = e.length; o < a; o++)
    {
        s(e[o])
    }

    function s(e)
    {
        var o = [],
            a = void 0 !== t.curveSegments ? t.curveSegments : 12,
            s = void 0 !== t.steps ? t.steps : 1,
            c = void 0 !== t.depth ? t.depth : 100,
            u = void 0 === t.bevelEnabled || t.bevelEnabled,
            l = void 0 !== t.bevelThickness ? t.bevelThickness : 6,
            f = void 0 !== t.bevelSize ? t.bevelSize : l - 2,
            h = void 0 !== t.bevelOffset ? t.bevelOffset : 0,
            d = void 0 !== t.bevelSegments ? t.bevelSegments : 3,
            p = t.extrudePath,
            m = void 0 !== t.UVGenerator ? t.UVGenerator : Hh;
        void 0 !== t.amount && (console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."), c = t.amount);
        var v, g, y, b, w, _, x, E, S = !1;
        p && (v = p.getSpacedPoints(s), S = !0, u = !1, g = p.computeFrenetFrames(s, !1), y = new sa, b = new sa, w = new sa), u || (d = 0, l = 0, f = 0, h = 0);
        var M = e.extractPoints(a),
            T = M.shape,
            k = M.holes;
        if (!jh.isClockWise(T))
            for (T = T.reverse(), x = 0, E = k.length; x < E; x++) _ = k[x], jh.isClockWise(_) && (k[x] = _.reverse());
        var A = jh.triangulateShape(T, k),
            C = T;
        for (x = 0, E = k.length; x < E; x++) _ = k[x], T = T.concat(_);

        function O(e, t, n)
        {
            return t || console.error("THREE.ExtrudeGeometry: vec does not exist"), t.clone().multiplyScalar(n).add(e)
        }
        var P, R, I, N, L, B, j = T.length,
            F = A.length;

        function U(e, t, n)
        {
            var r, i, o, a = e.x - t.x,
                s = e.y - t.y,
                c = n.x - e.x,
                u = n.y - e.y,
                l = a * a + s * s,
                f = a * u - s * c;
            if (Math.abs(f) > Number.EPSILON)
            {
                var h = Math.sqrt(l),
                    d = Math.sqrt(c * c + u * u),
                    p = t.x - s / h,
                    m = t.y + a / h,
                    v = ((n.x - u / d - p) * u - (n.y + c / d - m) * c) / (a * u - s * c),
                    g = (r = p + a * v - e.x) * r + (i = m + s * v - e.y) * i;
                if (g <= 2) return new ra(r, i);
                o = Math.sqrt(g / 2)
            }
            else
            {
                var y = !1;
                a > Number.EPSILON ? c > Number.EPSILON && (y = !0) : a < -Number.EPSILON ? c < -Number.EPSILON && (y = !0) : Math.sign(s) === Math.sign(u) && (y = !0), y ? (r = -s, i = a, o = Math.sqrt(l)) : (r = a, i = s, o = Math.sqrt(l / 2))
            }
            return new ra(r / o, i / o)
        }
        for (var D = [], z = 0, H = C.length, V = H - 1, W = z + 1; z < H; z++, V++, W++) V === H && (V = 0), W === H && (W = 0), D[z] = U(C[z], C[V], C[W]);
        var G, q, $ = [],
            K = D.concat();
        for (x = 0, E = k.length; x < E; x++)
        {
            for (_ = k[x], G = [], z = 0, V = (H = _.length) - 1, W = z + 1; z < H; z++, V++, W++) V === H && (V = 0), W === H && (W = 0), G[z] = U(_[z], _[V], _[W]);
            $.push(G), K = K.concat(G)
        }
        for (P = 0; P < d; P++)
        {
            for (I = P / d, N = l * Math.cos(I * Math.PI / 2), R = f * Math.sin(I * Math.PI / 2) + h, z = 0, H = C.length; z < H; z++) X((L = O(C[z], D[z], R)).x, L.y, -N);
            for (x = 0, E = k.length; x < E; x++)
                for (_ = k[x], G = $[x], z = 0, H = _.length; z < H; z++) X((L = O(_[z], G[z], R)).x, L.y, -N)
        }
        for (R = f + h, z = 0; z < j; z++) L = u ? O(T[z], K[z], R) : T[z], S ? (b.copy(g.normals[0]).multiplyScalar(L.x), y.copy(g.binormals[0]).multiplyScalar(L.y), w.copy(v[0]).add(b).add(y), X(w.x, w.y, w.z)) : X(L.x, L.y, 0);
        for (q = 1; q <= s; q++)
            for (z = 0; z < j; z++) L = u ? O(T[z], K[z], R) : T[z], S ? (b.copy(g.normals[q]).multiplyScalar(L.x), y.copy(g.binormals[q]).multiplyScalar(L.y), w.copy(v[q]).add(b).add(y), X(w.x, w.y, w.z)) : X(L.x, L.y, c / s * q);
        for (P = d - 1; P >= 0; P--)
        {
            for (I = P / d, N = l * Math.cos(I * Math.PI / 2), R = f * Math.sin(I * Math.PI / 2) + h, z = 0, H = C.length; z < H; z++) X((L = O(C[z], D[z], R)).x, L.y, c + N);
            for (x = 0, E = k.length; x < E; x++)
                for (_ = k[x], G = $[x], z = 0, H = _.length; z < H; z++) L = O(_[z], G[z], R), S ? X(L.x, L.y + v[s - 1].y, v[s - 1].x + N) : X(L.x, L.y, c + N)
        }

        function Y(e, t)
        {
            var n, r;
            for (z = e.length; --z >= 0;)
            {
                n = z, (r = z - 1) < 0 && (r = e.length - 1);
                var i = 0,
                    o = s + 2 * d;
                for (i = 0; i < o; i++)
                {
                    var a = j * i,
                        c = j * (i + 1);
                    Z(t + n + a, t + r + a, t + r + c, t + n + c)
                }
            }
        }

        function X(e, t, n)
        {
            o.push(e), o.push(t), o.push(n)
        }

        function J(e, t, i)
        {
            Q(e), Q(t), Q(i);
            var o = r.length / 3,
                a = m.generateTopUV(n, r, o - 3, o - 2, o - 1);
            ee(a[0]), ee(a[1]), ee(a[2])
        }

        function Z(e, t, i, o)
        {
            Q(e), Q(t), Q(o), Q(t), Q(i), Q(o);
            var a = r.length / 3,
                s = m.generateSideWallUV(n, r, a - 6, a - 3, a - 2, a - 1);
            ee(s[0]), ee(s[1]), ee(s[3]), ee(s[1]), ee(s[2]), ee(s[3])
        }

        function Q(e)
        {
            r.push(o[3 * e + 0]), r.push(o[3 * e + 1]), r.push(o[3 * e + 2])
        }

        function ee(e)
        {
            i.push(e.x), i.push(e.y)
        }! function()
        {
            var e = r.length / 3;
            if (u)
            {
                var t = 0,
                    i = j * t;
                for (z = 0; z < F; z++) J((B = A[z])[2] + i, B[1] + i, B[0] + i);
                for (i = j * (t = s + 2 * d), z = 0; z < F; z++) J((B = A[z])[0] + i, B[1] + i, B[2] + i)
            }
            else
            {
                for (z = 0; z < F; z++) J((B = A[z])[2], B[1], B[0]);
                for (z = 0; z < F; z++) J((B = A[z])[0] + j * s, B[1] + j * s, B[2] + j * s)
            }
            n.addGroup(e, r.length / 3 - e, 0)
        }(),
        function()
        {
            var e = r.length / 3,
                t = 0;
            for (Y(C, t), t += C.length, x = 0, E = k.length; x < E; x++) Y(_ = k[x], t), t += _.length;
            n.addGroup(e, r.length / 3 - e, 1)
        }()
    }
    this.setAttribute("position", new Xs(r, 3)), this.setAttribute("uv", new Xs(i, 2)), this.computeVertexNormals()
}
Dh.prototype = Object.create(Rc.prototype), Dh.prototype.constructor = Dh, Dh.prototype.toJSON = function()
{
    var e = Rc.prototype.toJSON.call(this);
    return Vh(this.parameters.shapes, this.parameters.options, e)
}, zh.prototype = Object.create(sc.prototype), zh.prototype.constructor = zh, zh.prototype.toJSON = function()
{
    var e = sc.prototype.toJSON.call(this);
    return Vh(this.parameters.shapes, this.parameters.options, e)
};
var Hh = {
    generateTopUV: function(e, t, n, r, i)
    {
        var o = t[3 * n],
            a = t[3 * n + 1],
            s = t[3 * r],
            c = t[3 * r + 1],
            u = t[3 * i],
            l = t[3 * i + 1];
        return [new ra(o, a), new ra(s, c), new ra(u, l)]
    },
    generateSideWallUV: function(e, t, n, r, i, o)
    {
        var a = t[3 * n],
            s = t[3 * n + 1],
            c = t[3 * n + 2],
            u = t[3 * r],
            l = t[3 * r + 1],
            f = t[3 * r + 2],
            h = t[3 * i],
            d = t[3 * i + 1],
            p = t[3 * i + 2],
            m = t[3 * o],
            v = t[3 * o + 1],
            g = t[3 * o + 2];
        return Math.abs(s - l) < .01 ? [new ra(a, 1 - c), new ra(u, 1 - f), new ra(h, 1 - p), new ra(m, 1 - g)] : [new ra(s, 1 - c), new ra(l, 1 - f), new ra(d, 1 - p), new ra(v, 1 - g)]
    }
};

function Vh(e, t, n)
{
    if (n.shapes = [], Array.isArray(e))
        for (var r = 0, i = e.length; r < i; r++)
        {
            var o = e[r];
            n.shapes.push(o.uuid)
        }
    else n.shapes.push(e.uuid);
    return void 0 !== t.extrudePath && (n.options.extrudePath = t.extrudePath.toJSON()), n
}

function Wh(e, t)
{
    Rc.call(this), this.type = "TextGeometry", this.parameters = {
        text: e,
        parameters: t
    }, this.fromBufferGeometry(new Gh(e, t)), this.mergeVertices()
}

function Gh(e, t)
{
    var n = (t = t ||
    {}).font;
    if (!n || !n.isFont) return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."), new Rc;
    var r = n.generateShapes(e, t.size);
    t.depth = void 0 !== t.height ? t.height : 50, void 0 === t.bevelThickness && (t.bevelThickness = 10), void 0 === t.bevelSize && (t.bevelSize = 8), void 0 === t.bevelEnabled && (t.bevelEnabled = !1), zh.call(this, r, t), this.type = "TextBufferGeometry"
}

function qh(e, t, n, r, i, o, a)
{
    Rc.call(this), this.type = "SphereGeometry", this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: r,
        phiLength: i,
        thetaStart: o,
        thetaLength: a
    }, this.fromBufferGeometry(new $h(e, t, n, r, i, o, a)), this.mergeVertices()
}

function $h(e, t, n, r, i, o, a)
{
    sc.call(this), this.type = "SphereBufferGeometry", this.parameters = {
        radius: e,
        widthSegments: t,
        heightSegments: n,
        phiStart: r,
        phiLength: i,
        thetaStart: o,
        thetaLength: a
    }, e = e || 1, t = Math.max(3, Math.floor(t) || 8), n = Math.max(2, Math.floor(n) || 6), r = void 0 !== r ? r : 0, i = void 0 !== i ? i : 2 * Math.PI, o = void 0 !== o ? o : 0, a = void 0 !== a ? a : Math.PI;
    var s, c, u = Math.min(o + a, Math.PI),
        l = 0,
        f = [],
        h = new sa,
        d = new sa,
        p = [],
        m = [],
        v = [],
        g = [];
    for (c = 0; c <= n; c++)
    {
        var y = [],
            b = c / n,
            w = 0;
        for (0 == c && 0 == o ? w = .5 / t : c == n && u == Math.PI && (w = -.5 / t), s = 0; s <= t; s++)
        {
            var _ = s / t;
            h.x = -e * Math.cos(r + _ * i) * Math.sin(o + b * a), h.y = e * Math.cos(o + b * a), h.z = e * Math.sin(r + _ * i) * Math.sin(o + b * a), m.push(h.x, h.y, h.z), d.copy(h).normalize(), v.push(d.x, d.y, d.z), g.push(_ + w, 1 - b), y.push(l++)
        }
        f.push(y)
    }
    for (c = 0; c < n; c++)
        for (s = 0; s < t; s++)
        {
            var x = f[c][s + 1],
                E = f[c][s],
                S = f[c + 1][s],
                M = f[c + 1][s + 1];
            (0 !== c || o > 0) && p.push(x, E, M), (c !== n - 1 || u < Math.PI) && p.push(E, S, M)
        }
    this.setIndex(p), this.setAttribute("position", new Xs(m, 3)), this.setAttribute("normal", new Xs(v, 3)), this.setAttribute("uv", new Xs(g, 2))
}

function Kh(e, t, n, r, i, o)
{
    Rc.call(this), this.type = "RingGeometry", this.parameters = {
        innerRadius: e,
        outerRadius: t,
        thetaSegments: n,
        phiSegments: r,
        thetaStart: i,
        thetaLength: o
    }, this.fromBufferGeometry(new Yh(e, t, n, r, i, o)), this.mergeVertices()
}

function Yh(e, t, n, r, i, o)
{
    sc.call(this), this.type = "RingBufferGeometry", this.parameters = {
        innerRadius: e,
        outerRadius: t,
        thetaSegments: n,
        phiSegments: r,
        thetaStart: i,
        thetaLength: o
    }, e = e || .5, t = t || 1, i = void 0 !== i ? i : 0, o = void 0 !== o ? o : 2 * Math.PI, n = void 0 !== n ? Math.max(3, n) : 8;
    var a, s, c, u = [],
        l = [],
        f = [],
        h = [],
        d = e,
        p = (t - e) / (r = void 0 !== r ? Math.max(1, r) : 1),
        m = new sa,
        v = new ra;
    for (s = 0; s <= r; s++)
    {
        for (c = 0; c <= n; c++) a = i + c / n * o, m.x = d * Math.cos(a), m.y = d * Math.sin(a), l.push(m.x, m.y, m.z), f.push(0, 0, 1), v.x = (m.x / t + 1) / 2, v.y = (m.y / t + 1) / 2, h.push(v.x, v.y);
        d += p
    }
    for (s = 0; s < r; s++)
    {
        var g = s * (n + 1);
        for (c = 0; c < n; c++)
        {
            var y = a = c + g,
                b = a + n + 1,
                w = a + n + 2,
                _ = a + 1;
            u.push(y, b, _), u.push(b, w, _)
        }
    }
    this.setIndex(u), this.setAttribute("position", new Xs(l, 3)), this.setAttribute("normal", new Xs(f, 3)), this.setAttribute("uv", new Xs(h, 2))
}

function Xh(e, t, n, r)
{
    Rc.call(this), this.type = "LatheGeometry", this.parameters = {
        points: e,
        segments: t,
        phiStart: n,
        phiLength: r
    }, this.fromBufferGeometry(new Jh(e, t, n, r)), this.mergeVertices()
}

function Jh(e, t, n, r)
{
    sc.call(this), this.type = "LatheBufferGeometry", this.parameters = {
        points: e,
        segments: t,
        phiStart: n,
        phiLength: r
    }, t = Math.floor(t) || 12, n = n || 0, r = r || 2 * Math.PI, r = na.clamp(r, 0, 2 * Math.PI);
    var i, o, a, s = [],
        c = [],
        u = [],
        l = 1 / t,
        f = new sa,
        h = new ra;
    for (o = 0; o <= t; o++)
    {
        var d = n + o * l * r,
            p = Math.sin(d),
            m = Math.cos(d);
        for (a = 0; a <= e.length - 1; a++) f.x = e[a].x * p, f.y = e[a].y, f.z = e[a].x * m, c.push(f.x, f.y, f.z), h.x = o / t, h.y = a / (e.length - 1), u.push(h.x, h.y)
    }
    for (o = 0; o < t; o++)
        for (a = 0; a < e.length - 1; a++)
        {
            var v = i = a + o * e.length,
                g = i + e.length,
                y = i + e.length + 1,
                b = i + 1;
            s.push(v, g, b), s.push(g, y, b)
        }
    if (this.setIndex(s), this.setAttribute("position", new Xs(c, 3)), this.setAttribute("uv", new Xs(u, 2)), this.computeVertexNormals(), r === 2 * Math.PI)
    {
        var w = this.attributes.normal.array,
            _ = new sa,
            x = new sa,
            E = new sa;
        for (i = t * e.length * 3, o = 0, a = 0; o < e.length; o++, a += 3) _.x = w[a + 0], _.y = w[a + 1], _.z = w[a + 2], x.x = w[i + a + 0], x.y = w[i + a + 1], x.z = w[i + a + 2], E.addVectors(_, x).normalize(), w[a + 0] = w[i + a + 0] = E.x, w[a + 1] = w[i + a + 1] = E.y, w[a + 2] = w[i + a + 2] = E.z
    }
}

function Zh(e, t)
{
    Rc.call(this), this.type = "ShapeGeometry", "object" == typeof t && (console.warn("THREE.ShapeGeometry: Options parameter has been removed."), t = t.curveSegments), this.parameters = {
        shapes: e,
        curveSegments: t
    }, this.fromBufferGeometry(new Qh(e, t)), this.mergeVertices()
}

function Qh(e, t)
{
    sc.call(this), this.type = "ShapeBufferGeometry", this.parameters = {
        shapes: e,
        curveSegments: t
    }, t = t || 12;
    var n = [],
        r = [],
        i = [],
        o = [],
        a = 0,
        s = 0;
    if (!1 === Array.isArray(e)) u(e);
    else
        for (var c = 0; c < e.length; c++) u(e[c]), this.addGroup(a, s, c), a += s, s = 0;

    function u(e)
    {
        var a, c, u, l = r.length / 3,
            f = e.extractPoints(t),
            h = f.shape,
            d = f.holes;
        for (!1 === jh.isClockWise(h) && (h = h.reverse()), a = 0, c = d.length; a < c; a++) u = d[a], !0 === jh.isClockWise(u) && (d[a] = u.reverse());
        var p = jh.triangulateShape(h, d);
        for (a = 0, c = d.length; a < c; a++) u = d[a], h = h.concat(u);
        for (a = 0, c = h.length; a < c; a++)
        {
            var m = h[a];
            r.push(m.x, m.y, 0), i.push(0, 0, 1), o.push(m.x, m.y)
        }
        for (a = 0, c = p.length; a < c; a++)
        {
            var v = p[a],
                g = v[0] + l,
                y = v[1] + l,
                b = v[2] + l;
            n.push(g, y, b), s += 3
        }
    }
    this.setIndex(n), this.setAttribute("position", new Xs(r, 3)), this.setAttribute("normal", new Xs(i, 3)), this.setAttribute("uv", new Xs(o, 2))
}

function ed(e, t)
{
    if (t.shapes = [], Array.isArray(e))
        for (var n = 0, r = e.length; n < r; n++)
        {
            var i = e[n];
            t.shapes.push(i.uuid)
        }
    else t.shapes.push(e.uuid);
    return t
}

function td(e, t)
{
    sc.call(this), this.type = "EdgesGeometry", this.parameters = {
        thresholdAngle: t
    }, t = void 0 !== t ? t : 1;
    var n, r, i, o, a = [],
        s = Math.cos(na.DEG2RAD * t),
        c = [0, 0],
        u = {},
        l = ["a", "b", "c"];
    e.isBufferGeometry ? (o = new Rc).fromBufferGeometry(e) : o = e.clone(), o.mergeVertices(), o.computeFaceNormals();
    for (var f = o.vertices, h = o.faces, d = 0, p = h.length; d < p; d++)
        for (var m = h[d], v = 0; v < 3; v++) n = m[l[v]], r = m[l[(v + 1) % 3]], c[0] = Math.min(n, r), c[1] = Math.max(n, r), void 0 === u[i = c[0] + "," + c[1]] ? u[i] = {
            index1: c[0],
            index2: c[1],
            face1: d,
            face2: void 0
        } : u[i].face2 = d;
    for (i in u)
    {
        var g = u[i];
        if (void 0 === g.face2 || h[g.face1].normal.dot(h[g.face2].normal) <= s)
        {
            var y = f[g.index1];
            a.push(y.x, y.y, y.z), y = f[g.index2], a.push(y.x, y.y, y.z)
        }
    }
    this.setAttribute("position", new Xs(a, 3))
}

function nd(e, t, n, r, i, o, a, s)
{
    Rc.call(this), this.type = "CylinderGeometry", this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: n,
        radialSegments: r,
        heightSegments: i,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    }, this.fromBufferGeometry(new rd(e, t, n, r, i, o, a, s)), this.mergeVertices()
}

function rd(e, t, n, r, i, o, a, s)
{
    sc.call(this), this.type = "CylinderBufferGeometry", this.parameters = {
        radiusTop: e,
        radiusBottom: t,
        height: n,
        radialSegments: r,
        heightSegments: i,
        openEnded: o,
        thetaStart: a,
        thetaLength: s
    };
    var c = this;
    e = void 0 !== e ? e : 1, t = void 0 !== t ? t : 1, n = n || 1, r = Math.floor(r) || 8, i = Math.floor(i) || 1, o = void 0 !== o && o, a = void 0 !== a ? a : 0, s = void 0 !== s ? s : 2 * Math.PI;
    var u = [],
        l = [],
        f = [],
        h = [],
        d = 0,
        p = [],
        m = n / 2,
        v = 0;

    function g(n)
    {
        var i, o, p, g = new ra,
            y = new sa,
            b = 0,
            w = !0 === n ? e : t,
            _ = !0 === n ? 1 : -1;
        for (o = d, i = 1; i <= r; i++) l.push(0, m * _, 0), f.push(0, _, 0), h.push(.5, .5), d++;
        for (p = d, i = 0; i <= r; i++)
        {
            var x = i / r * s + a,
                E = Math.cos(x),
                S = Math.sin(x);
            y.x = w * S, y.y = m * _, y.z = w * E, l.push(y.x, y.y, y.z), f.push(0, _, 0), g.x = .5 * E + .5, g.y = .5 * S * _ + .5, h.push(g.x, g.y), d++
        }
        for (i = 0; i < r; i++)
        {
            var M = o + i,
                T = p + i;
            !0 === n ? u.push(T, T + 1, M) : u.push(T + 1, T, M), b += 3
        }
        c.addGroup(v, b, !0 === n ? 1 : 2), v += b
    }! function()
    {
        var o, g, y = new sa,
            b = new sa,
            w = 0,
            _ = (t - e) / n;
        for (g = 0; g <= i; g++)
        {
            var x = [],
                E = g / i,
                S = E * (t - e) + e;
            for (o = 0; o <= r; o++)
            {
                var M = o / r,
                    T = M * s + a,
                    k = Math.sin(T),
                    A = Math.cos(T);
                b.x = S * k, b.y = -E * n + m, b.z = S * A, l.push(b.x, b.y, b.z), y.set(k, _, A).normalize(), f.push(y.x, y.y, y.z), h.push(M, 1 - E), x.push(d++)
            }
            p.push(x)
        }
        for (o = 0; o < r; o++)
            for (g = 0; g < i; g++)
            {
                var C = p[g][o],
                    O = p[g + 1][o],
                    P = p[g + 1][o + 1],
                    R = p[g][o + 1];
                u.push(C, O, R), u.push(O, P, R), w += 6
            }
        c.addGroup(v, w, 0), v += w
    }(), !1 === o && (e > 0 && g(!0), t > 0 && g(!1)), this.setIndex(u), this.setAttribute("position", new Xs(l, 3)), this.setAttribute("normal", new Xs(f, 3)), this.setAttribute("uv", new Xs(h, 2))
}

function id(e, t, n, r, i, o, a)
{
    nd.call(this, 0, e, t, n, r, i, o, a), this.type = "ConeGeometry", this.parameters = {
        radius: e,
        height: t,
        radialSegments: n,
        heightSegments: r,
        openEnded: i,
        thetaStart: o,
        thetaLength: a
    }
}

function od(e, t, n, r, i, o, a)
{
    rd.call(this, 0, e, t, n, r, i, o, a), this.type = "ConeBufferGeometry", this.parameters = {
        radius: e,
        height: t,
        radialSegments: n,
        heightSegments: r,
        openEnded: i,
        thetaStart: o,
        thetaLength: a
    }
}

function ad(e, t, n, r)
{
    Rc.call(this), this.type = "CircleGeometry", this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: r
    }, this.fromBufferGeometry(new sd(e, t, n, r)), this.mergeVertices()
}

function sd(e, t, n, r)
{
    sc.call(this), this.type = "CircleBufferGeometry", this.parameters = {
        radius: e,
        segments: t,
        thetaStart: n,
        thetaLength: r
    }, e = e || 1, t = void 0 !== t ? Math.max(3, t) : 8, n = void 0 !== n ? n : 0, r = void 0 !== r ? r : 2 * Math.PI;
    var i, o, a = [],
        s = [],
        c = [],
        u = [],
        l = new sa,
        f = new ra;
    for (s.push(0, 0, 0), c.push(0, 0, 1), u.push(.5, .5), o = 0, i = 3; o <= t; o++, i += 3)
    {
        var h = n + o / t * r;
        l.x = e * Math.cos(h), l.y = e * Math.sin(h), s.push(l.x, l.y, l.z), c.push(0, 0, 1), f.x = (s[i] / e + 1) / 2, f.y = (s[i + 1] / e + 1) / 2, u.push(f.x, f.y)
    }
    for (i = 1; i <= t; i++) a.push(i, i + 1, 0);
    this.setIndex(a), this.setAttribute("position", new Xs(s, 3)), this.setAttribute("normal", new Xs(c, 3)), this.setAttribute("uv", new Xs(u, 2))
}
Wh.prototype = Object.create(Rc.prototype), Wh.prototype.constructor = Wh, Gh.prototype = Object.create(zh.prototype), Gh.prototype.constructor = Gh, qh.prototype = Object.create(Rc.prototype), qh.prototype.constructor = qh, $h.prototype = Object.create(sc.prototype), $h.prototype.constructor = $h, Kh.prototype = Object.create(Rc.prototype), Kh.prototype.constructor = Kh, Yh.prototype = Object.create(sc.prototype), Yh.prototype.constructor = Yh, Xh.prototype = Object.create(Rc.prototype), Xh.prototype.constructor = Xh, Jh.prototype = Object.create(sc.prototype), Jh.prototype.constructor = Jh, Zh.prototype = Object.create(Rc.prototype), Zh.prototype.constructor = Zh, Zh.prototype.toJSON = function()
{
    var e = Rc.prototype.toJSON.call(this);
    return ed(this.parameters.shapes, e)
}, Qh.prototype = Object.create(sc.prototype), Qh.prototype.constructor = Qh, Qh.prototype.toJSON = function()
{
    var e = sc.prototype.toJSON.call(this);
    return ed(this.parameters.shapes, e)
}, td.prototype = Object.create(sc.prototype), td.prototype.constructor = td, nd.prototype = Object.create(Rc.prototype), nd.prototype.constructor = nd, rd.prototype = Object.create(sc.prototype), rd.prototype.constructor = rd, id.prototype = Object.create(nd.prototype), id.prototype.constructor = id, od.prototype = Object.create(rd.prototype), od.prototype.constructor = od, ad.prototype = Object.create(Rc.prototype), ad.prototype.constructor = ad, sd.prototype = Object.create(sc.prototype), sd.prototype.constructor = sd;
var cd = Object.freeze(
{
    __proto__: null,
    WireframeGeometry: Xf,
    ParametricGeometry: Jf,
    ParametricBufferGeometry: Zf,
    TetrahedronGeometry: th,
    TetrahedronBufferGeometry: nh,
    OctahedronGeometry: rh,
    OctahedronBufferGeometry: ih,
    IcosahedronGeometry: oh,
    IcosahedronBufferGeometry: ah,
    DodecahedronGeometry: sh,
    DodecahedronBufferGeometry: ch,
    PolyhedronGeometry: Qf,
    PolyhedronBufferGeometry: eh,
    TubeGeometry: uh,
    TubeBufferGeometry: lh,
    TorusKnotGeometry: fh,
    TorusKnotBufferGeometry: hh,
    TorusGeometry: dh,
    TorusBufferGeometry: ph,
    TextGeometry: Wh,
    TextBufferGeometry: Gh,
    SphereGeometry: qh,
    SphereBufferGeometry: $h,
    RingGeometry: Kh,
    RingBufferGeometry: Yh,
    PlaneGeometry: Xc,
    PlaneBufferGeometry: Jc,
    LatheGeometry: Xh,
    LatheBufferGeometry: Jh,
    ShapeGeometry: Zh,
    ShapeBufferGeometry: Qh,
    ExtrudeGeometry: Dh,
    ExtrudeBufferGeometry: zh,
    EdgesGeometry: td,
    ConeGeometry: id,
    ConeBufferGeometry: od,
    CylinderGeometry: nd,
    CylinderBufferGeometry: rd,
    CircleGeometry: ad,
    CircleBufferGeometry: sd,
    BoxGeometry: class extends Rc
    {
        constructor(e, t, n, r, i, o)
        {
            super(), this.type = "BoxGeometry", this.parameters = {
                width: e,
                height: t,
                depth: n,
                widthSegments: r,
                heightSegments: i,
                depthSegments: o
            }, this.fromBufferGeometry(new Ic(e, t, n, r, i, o)), this.mergeVertices()
        }
    },
    BoxBufferGeometry: Ic
});

function ud(e)
{
    Us.call(this), this.type = "ShadowMaterial", this.color = new Is(0), this.transparent = !0, this.setValues(e)
}

function ld(e)
{
    Bc.call(this, e), this.type = "RawShaderMaterial"
}

function fd(e)
{
    Us.call(this), this.defines = {
        STANDARD: ""
    }, this.type = "MeshStandardMaterial", this.color = new Is(16777215), this.roughness = 1, this.metalness = 0, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Is(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new ra(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.roughnessMap = null, this.metalnessMap = null, this.alphaMap = null, this.envMap = null, this.envMapIntensity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}

function hd(e)
{
    fd.call(this), this.defines = {
        STANDARD: "",
        PHYSICAL: ""
    }, this.type = "MeshPhysicalMaterial", this.reflectivity = .5, this.clearcoat = 0, this.clearcoatRoughness = 0, this.sheen = null, this.clearcoatNormalScale = new ra(1, 1), this.clearcoatNormalMap = null, this.transparency = 0, this.setValues(e)
}

function dd(e)
{
    Us.call(this), this.type = "MeshPhongMaterial", this.color = new Is(16777215), this.specular = new Is(1118481), this.shininess = 30, this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Is(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new ra(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}

function pd(e)
{
    Us.call(this), this.defines = {
        TOON: ""
    }, this.type = "MeshToonMaterial", this.color = new Is(16777215), this.specular = new Is(1118481), this.shininess = 30, this.map = null, this.gradientMap = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Is(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new ra(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.specularMap = null, this.alphaMap = null, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}

function md(e)
{
    Us.call(this), this.type = "MeshNormalMaterial", this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new ra(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.wireframe = !1, this.wireframeLinewidth = 1, this.fog = !1, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}

function vd(e)
{
    Us.call(this), this.type = "MeshLambertMaterial", this.color = new Is(16777215), this.map = null, this.lightMap = null, this.lightMapIntensity = 1, this.aoMap = null, this.aoMapIntensity = 1, this.emissive = new Is(0), this.emissiveIntensity = 1, this.emissiveMap = null, this.specularMap = null, this.alphaMap = null, this.envMap = null, this.combine = 0, this.reflectivity = 1, this.refractionRatio = .98, this.wireframe = !1, this.wireframeLinewidth = 1, this.wireframeLinecap = "round", this.wireframeLinejoin = "round", this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}

function gd(e)
{
    Us.call(this), this.defines = {
        MATCAP: ""
    }, this.type = "MeshMatcapMaterial", this.color = new Is(16777215), this.matcap = null, this.map = null, this.bumpMap = null, this.bumpScale = 1, this.normalMap = null, this.normalMapType = 0, this.normalScale = new ra(1, 1), this.displacementMap = null, this.displacementScale = 1, this.displacementBias = 0, this.alphaMap = null, this.skinning = !1, this.morphTargets = !1, this.morphNormals = !1, this.setValues(e)
}

function yd(e)
{
    Af.call(this), this.type = "LineDashedMaterial", this.scale = 1, this.dashSize = 3, this.gapSize = 1, this.setValues(e)
}
ud.prototype = Object.create(Us.prototype), ud.prototype.constructor = ud, ud.prototype.isShadowMaterial = !0, ud.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this
}, ld.prototype = Object.create(Bc.prototype), ld.prototype.constructor = ld, ld.prototype.isRawShaderMaterial = !0, fd.prototype = Object.create(Us.prototype), fd.prototype.constructor = fd, fd.prototype.isMeshStandardMaterial = !0, fd.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.defines = {
        STANDARD: ""
    }, this.color.copy(e.color), this.roughness = e.roughness, this.metalness = e.metalness, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.roughnessMap = e.roughnessMap, this.metalnessMap = e.metalnessMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.envMapIntensity = e.envMapIntensity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, hd.prototype = Object.create(fd.prototype), hd.prototype.constructor = hd, hd.prototype.isMeshPhysicalMaterial = !0, hd.prototype.copy = function(e)
{
    return fd.prototype.copy.call(this, e), this.defines = {
        STANDARD: "",
        PHYSICAL: ""
    }, this.reflectivity = e.reflectivity, this.clearcoat = e.clearcoat, this.clearcoatRoughness = e.clearcoatRoughness, e.sheen ? this.sheen = (this.sheen || new Is).copy(e.sheen) : this.sheen = null, this.clearcoatNormalMap = e.clearcoatNormalMap, this.clearcoatNormalScale.copy(e.clearcoatNormalScale), this.transparency = e.transparency, this
}, dd.prototype = Object.create(Us.prototype), dd.prototype.constructor = dd, dd.prototype.isMeshPhongMaterial = !0, dd.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, pd.prototype = Object.create(Us.prototype), pd.prototype.constructor = pd, pd.prototype.isMeshToonMaterial = !0, pd.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.specular.copy(e.specular), this.shininess = e.shininess, this.map = e.map, this.gradientMap = e.gradientMap, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, md.prototype = Object.create(Us.prototype), md.prototype.constructor = md, md.prototype.isMeshNormalMaterial = !0, md.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, vd.prototype = Object.create(Us.prototype), vd.prototype.constructor = vd, vd.prototype.isMeshLambertMaterial = !0, vd.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.color.copy(e.color), this.map = e.map, this.lightMap = e.lightMap, this.lightMapIntensity = e.lightMapIntensity, this.aoMap = e.aoMap, this.aoMapIntensity = e.aoMapIntensity, this.emissive.copy(e.emissive), this.emissiveMap = e.emissiveMap, this.emissiveIntensity = e.emissiveIntensity, this.specularMap = e.specularMap, this.alphaMap = e.alphaMap, this.envMap = e.envMap, this.combine = e.combine, this.reflectivity = e.reflectivity, this.refractionRatio = e.refractionRatio, this.wireframe = e.wireframe, this.wireframeLinewidth = e.wireframeLinewidth, this.wireframeLinecap = e.wireframeLinecap, this.wireframeLinejoin = e.wireframeLinejoin, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, gd.prototype = Object.create(Us.prototype), gd.prototype.constructor = gd, gd.prototype.isMeshMatcapMaterial = !0, gd.prototype.copy = function(e)
{
    return Us.prototype.copy.call(this, e), this.defines = {
        MATCAP: ""
    }, this.color.copy(e.color), this.matcap = e.matcap, this.map = e.map, this.bumpMap = e.bumpMap, this.bumpScale = e.bumpScale, this.normalMap = e.normalMap, this.normalMapType = e.normalMapType, this.normalScale.copy(e.normalScale), this.displacementMap = e.displacementMap, this.displacementScale = e.displacementScale, this.displacementBias = e.displacementBias, this.alphaMap = e.alphaMap, this.skinning = e.skinning, this.morphTargets = e.morphTargets, this.morphNormals = e.morphNormals, this
}, yd.prototype = Object.create(Af.prototype), yd.prototype.constructor = yd, yd.prototype.isLineDashedMaterial = !0, yd.prototype.copy = function(e)
{
    return Af.prototype.copy.call(this, e), this.scale = e.scale, this.dashSize = e.dashSize, this.gapSize = e.gapSize, this
};
var bd = Object.freeze(
    {
        __proto__: null,
        ShadowMaterial: ud,
        SpriteMaterial: Ql,
        RawShaderMaterial: ld,
        ShaderMaterial: Bc,
        PointsMaterial: Uf,
        MeshPhysicalMaterial: hd,
        MeshStandardMaterial: fd,
        MeshPhongMaterial: dd,
        MeshToonMaterial: pd,
        MeshNormalMaterial: md,
        MeshLambertMaterial: vd,
        MeshDepthMaterial: Ll,
        MeshDistanceMaterial: Bl,
        MeshBasicMaterial: Ds,
        MeshMatcapMaterial: gd,
        LineDashedMaterial: yd,
        LineBasicMaterial: Af,
        Material: Us
    }),
    wd = {
        arraySlice: function(e, t, n)
        {
            return wd.isTypedArray(e) ? new e.constructor(e.subarray(t, void 0 !== n ? n : e.length)) : e.slice(t, n)
        },
        convertArray: function(e, t, n)
        {
            return !e || !n && e.constructor === t ? e : "number" == typeof t.BYTES_PER_ELEMENT ? new t(e) : Array.prototype.slice.call(e)
        },
        isTypedArray: function(e)
        {
            return ArrayBuffer.isView(e) && !(e instanceof DataView)
        },
        getKeyframeOrder: function(e)
        {
            for (var t = e.length, n = new Array(t), r = 0; r !== t; ++r) n[r] = r;
            return n.sort((function(t, n)
            {
                return e[t] - e[n]
            })), n
        },
        sortedArray: function(e, t, n)
        {
            for (var r = e.length, i = new e.constructor(r), o = 0, a = 0; a !== r; ++o)
                for (var s = n[o] * t, c = 0; c !== t; ++c) i[a++] = e[s + c];
            return i
        },
        flattenJSON: function(e, t, n, r)
        {
            for (var i = 1, o = e[0]; void 0 !== o && void 0 === o[r];) o = e[i++];
            if (void 0 !== o)
            {
                var a = o[r];
                if (void 0 !== a)
                    if (Array.isArray(a))
                        do {
                            void 0 !== (a = o[r]) && (t.push(o.time), n.push.apply(n, a)), o = e[i++]
                        } while (void 0 !== o);
                    else if (void 0 !== a.toArray)
                    do {
                        void 0 !== (a = o[r]) && (t.push(o.time), a.toArray(n, n.length)), o = e[i++]
                    } while (void 0 !== o);
                else
                    do {
                        void 0 !== (a = o[r]) && (t.push(o.time), n.push(a)), o = e[i++]
                    } while (void 0 !== o)
            }
        },
        subclip: function(e, t, n, r, i)
        {
            i = i || 30;
            var o = e.clone();
            o.name = t;
            for (var a = [], s = 0; s < o.tracks.length; ++s)
            {
                for (var c = o.tracks[s], u = c.getValueSize(), l = [], f = [], h = 0; h < c.times.length; ++h)
                {
                    var d = c.times[h] * i;
                    if (!(d < n || d >= r))
                    {
                        l.push(c.times[h]);
                        for (var p = 0; p < u; ++p) f.push(c.values[h * u + p])
                    }
                }
                0 !== l.length && (c.times = wd.convertArray(l, c.times.constructor), c.values = wd.convertArray(f, c.values.constructor), a.push(c))
            }
            o.tracks = a;
            var m = 1 / 0;
            for (s = 0; s < o.tracks.length; ++s) m > o.tracks[s].times[0] && (m = o.tracks[s].times[0]);
            for (s = 0; s < o.tracks.length; ++s) o.tracks[s].shift(-1 * m);
            return o.resetDuration(), o
        }
    };

function _d(e, t, n, r)
{
    this.parameterPositions = e, this._cachedIndex = 0, this.resultBuffer = void 0 !== r ? r : new t.constructor(n), this.sampleValues = t, this.valueSize = n
}

function xd(e, t, n, r)
{
    _d.call(this, e, t, n, r), this._weightPrev = -0, this._offsetPrev = -0, this._weightNext = -0, this._offsetNext = -0
}

function Ed(e, t, n, r)
{
    _d.call(this, e, t, n, r)
}

function Sd(e, t, n, r)
{
    _d.call(this, e, t, n, r)
}

function Md(e, t, n, r)
{
    if (void 0 === e) throw new Error("THREE.KeyframeTrack: track name is undefined");
    if (void 0 === t || 0 === t.length) throw new Error("THREE.KeyframeTrack: no keyframes in track named " + e);
    this.name = e, this.times = wd.convertArray(t, this.TimeBufferType), this.values = wd.convertArray(n, this.ValueBufferType), this.setInterpolation(r || this.DefaultInterpolation)
}

function Td(e, t, n)
{
    Md.call(this, e, t, n)
}

function kd(e, t, n, r)
{
    Md.call(this, e, t, n, r)
}

function Ad(e, t, n, r)
{
    Md.call(this, e, t, n, r)
}

function Cd(e, t, n, r)
{
    _d.call(this, e, t, n, r)
}

function Od(e, t, n, r)
{
    Md.call(this, e, t, n, r)
}

function Pd(e, t, n, r)
{
    Md.call(this, e, t, n, r)
}

function Rd(e, t, n, r)
{
    Md.call(this, e, t, n, r)
}

function Id(e, t, n)
{
    this.name = e, this.tracks = n, this.duration = void 0 !== t ? t : -1, this.uuid = na.generateUUID(), this.duration < 0 && this.resetDuration()
}

function Nd(e)
{
    if (void 0 === e.type) throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");
    var t = function(e)
    {
        switch (e.toLowerCase())
        {
            case "scalar":
            case "double":
            case "float":
            case "number":
            case "integer":
                return Ad;
            case "vector":
            case "vector2":
            case "vector3":
            case "vector4":
                return Rd;
            case "color":
                return kd;
            case "quaternion":
                return Od;
            case "bool":
            case "boolean":
                return Td;
            case "string":
                return Pd
        }
        throw new Error("THREE.KeyframeTrack: Unsupported typeName: " + e)
    }(e.type);
    if (void 0 === e.times)
    {
        var n = [],
            r = [];
        wd.flattenJSON(e.keys, n, r, "value"), e.times = n, e.values = r
    }
    return void 0 !== t.parse ? t.parse(e) : new t(e.name, e.times, e.values, e.interpolation)
}
Object.assign(_d.prototype,
    {
        evaluate: function(e)
        {
            var t = this.parameterPositions,
                n = this._cachedIndex,
                r = t[n],
                i = t[n - 1];
            e:
            {
                t:
                {
                    var o;n:
                    {
                        r: if (!(e < r))
                        {
                            for (var a = n + 2;;)
                            {
                                if (void 0 === r)
                                {
                                    if (e < i) break r;
                                    return n = t.length, this._cachedIndex = n, this.afterEnd_(n - 1, e, i)
                                }
                                if (n === a) break;
                                if (i = r, e < (r = t[++n])) break t
                            }
                            o = t.length;
                            break n
                        }if (e >= i) break e;
                        var s = t[1];e < s && (n = 2, i = s);
                        for (a = n - 2;;)
                        {
                            if (void 0 === i) return this._cachedIndex = 0, this.beforeStart_(0, e, r);
                            if (n === a) break;
                            if (r = i, e >= (i = t[--n - 1])) break t
                        }
                        o = n,
                        n = 0
                    }
                    for (; n < o;)
                    {
                        var c = n + o >>> 1;
                        e < t[c] ? o = c : n = c + 1
                    }
                    if (r = t[n], void 0 === (i = t[n - 1])) return this._cachedIndex = 0,
                    this.beforeStart_(0, e, r);
                    if (void 0 === r) return n = t.length,
                    this._cachedIndex = n,
                    this.afterEnd_(n - 1, i, e)
                }
                this._cachedIndex = n,
                this.intervalChanged_(n, i, r)
            }
            return this.interpolate_(n, i, e, r)
        },
        settings: null,
        DefaultSettings_:
        {},
        getSettings_: function()
        {
            return this.settings || this.DefaultSettings_
        },
        copySampleValue_: function(e)
        {
            for (var t = this.resultBuffer, n = this.sampleValues, r = this.valueSize, i = e * r, o = 0; o !== r; ++o) t[o] = n[i + o];
            return t
        },
        interpolate_: function()
        {
            throw new Error("call to abstract method")
        },
        intervalChanged_: function() {}
    }), //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(_d.prototype,
    {
        beforeStart_: _d.prototype.copySampleValue_,
        afterEnd_: _d.prototype.copySampleValue_
    }), xd.prototype = Object.assign(Object.create(_d.prototype),
    {
        constructor: xd,
        DefaultSettings_:
        {
            endingStart: 2400,
            endingEnd: 2400
        },
        intervalChanged_: function(e, t, n)
        {
            var r = this.parameterPositions,
                i = e - 2,
                o = e + 1,
                a = r[i],
                s = r[o];
            if (void 0 === a) switch (this.getSettings_().endingStart)
            {
                case 2401:
                    i = e, a = 2 * t - n;
                    break;
                case 2402:
                    a = t + r[i = r.length - 2] - r[i + 1];
                    break;
                default:
                    i = e, a = n
            }
            if (void 0 === s) switch (this.getSettings_().endingEnd)
            {
                case 2401:
                    o = e, s = 2 * n - t;
                    break;
                case 2402:
                    o = 1, s = n + r[1] - r[0];
                    break;
                default:
                    o = e - 1, s = t
            }
            var c = .5 * (n - t),
                u = this.valueSize;
            this._weightPrev = c / (t - a), this._weightNext = c / (s - n), this._offsetPrev = i * u, this._offsetNext = o * u
        },
        interpolate_: function(e, t, n, r)
        {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, u = this._offsetPrev, l = this._offsetNext, f = this._weightPrev, h = this._weightNext, d = (n - t) / (r - t), p = d * d, m = p * d, v = -f * m + 2 * f * p - f * d, g = (1 + f) * m + (-1.5 - 2 * f) * p + (-.5 + f) * d + 1, y = (-1 - h) * m + (1.5 + h) * p + .5 * d, b = h * m - h * p, w = 0; w !== a; ++w) i[w] = v * o[u + w] + g * o[c + w] + y * o[s + w] + b * o[l + w];
            return i
        }
    }), Ed.prototype = Object.assign(Object.create(_d.prototype),
    {
        constructor: Ed,
        interpolate_: function(e, t, n, r)
        {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = s - a, u = (n - t) / (r - t), l = 1 - u, f = 0; f !== a; ++f) i[f] = o[c + f] * l + o[s + f] * u;
            return i
        }
    }), Sd.prototype = Object.assign(Object.create(_d.prototype),
    {
        constructor: Sd,
        interpolate_: function(e)
        {
            return this.copySampleValue_(e - 1)
        }
    }), Object.assign(Md,
    {
        toJSON: function(e)
        {
            var t, n = e.constructor;
            if (void 0 !== n.toJSON) t = n.toJSON(e);
            else
            {
                t = {
                    name: e.name,
                    times: wd.convertArray(e.times, Array),
                    values: wd.convertArray(e.values, Array)
                };
                var r = e.getInterpolation();
                r !== e.DefaultInterpolation && (t.interpolation = r)
            }
            return t.type = e.ValueTypeName, t
        }
    }), Object.assign(Md.prototype,
    {
        constructor: Md,
        TimeBufferType: Float32Array,
        ValueBufferType: Float32Array,
        DefaultInterpolation: 2301,
        InterpolantFactoryMethodDiscrete: function(e)
        {
            return new Sd(this.times, this.values, this.getValueSize(), e)
        },
        InterpolantFactoryMethodLinear: function(e)
        {
            return new Ed(this.times, this.values, this.getValueSize(), e)
        },
        InterpolantFactoryMethodSmooth: function(e)
        {
            return new xd(this.times, this.values, this.getValueSize(), e)
        },
        setInterpolation: function(e)
        {
            var t;
            switch (e)
            {
                case 2300:
                    t = this.InterpolantFactoryMethodDiscrete;
                    break;
                case 2301:
                    t = this.InterpolantFactoryMethodLinear;
                    break;
                case 2302:
                    t = this.InterpolantFactoryMethodSmooth
            }
            if (void 0 === t)
            {
                var n = "unsupported interpolation for " + this.ValueTypeName + " keyframe track named " + this.name;
                if (void 0 === this.createInterpolant)
                {
                    if (e === this.DefaultInterpolation) throw new Error(n);
                    this.setInterpolation(this.DefaultInterpolation)
                }
                return console.warn("THREE.KeyframeTrack:", n), this
            }
            return this.createInterpolant = t, this
        },
        getInterpolation: function()
        {
            switch (this.createInterpolant)
            {
                case this.InterpolantFactoryMethodDiscrete:
                    return 2300;
                case this.InterpolantFactoryMethodLinear:
                    return 2301;
                case this.InterpolantFactoryMethodSmooth:
                    return 2302
            }
        },
        getValueSize: function()
        {
            return this.values.length / this.times.length
        },
        shift: function(e)
        {
            if (0 !== e)
                for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] += e;
            return this
        },
        scale: function(e)
        {
            if (1 !== e)
                for (var t = this.times, n = 0, r = t.length; n !== r; ++n) t[n] *= e;
            return this
        },
        trim: function(e, t)
        {
            for (var n = this.times, r = n.length, i = 0, o = r - 1; i !== r && n[i] < e;) ++i;
            for (; - 1 !== o && n[o] > t;) --o;
            if (++o, 0 !== i || o !== r)
            {
                i >= o && (i = (o = Math.max(o, 1)) - 1);
                var a = this.getValueSize();
                this.times = wd.arraySlice(n, i, o), this.values = wd.arraySlice(this.values, i * a, o * a)
            }
            return this
        },
        validate: function()
        {
            var e = !0,
                t = this.getValueSize();
            t - Math.floor(t) != 0 && (console.error("THREE.KeyframeTrack: Invalid value size in track.", this), e = !1);
            var n = this.times,
                r = this.values,
                i = n.length;
            0 === i && (console.error("THREE.KeyframeTrack: Track is empty.", this), e = !1);
            for (var o = null, a = 0; a !== i; a++)
            {
                var s = n[a];
                if ("number" == typeof s && isNaN(s))
                {
                    console.error("THREE.KeyframeTrack: Time is not a valid number.", this, a, s), e = !1;
                    break
                }
                if (null !== o && o > s)
                {
                    console.error("THREE.KeyframeTrack: Out of order keys.", this, a, s, o), e = !1;
                    break
                }
                o = s
            }
            if (void 0 !== r && wd.isTypedArray(r))
            {
                a = 0;
                for (var c = r.length; a !== c; ++a)
                {
                    var u = r[a];
                    if (isNaN(u))
                    {
                        console.error("THREE.KeyframeTrack: Value is not a valid number.", this, a, u), e = !1;
                        break
                    }
                }
            }
            return e
        },
        optimize: function()
        {
            for (var e = this.times, t = this.values, n = this.getValueSize(), r = 2302 === this.getInterpolation(), i = 1, o = e.length - 1, a = 1; a < o; ++a)
            {
                var s = !1,
                    c = e[a];
                if (c !== e[a + 1] && (1 !== a || c !== c[0]))
                    if (r) s = !0;
                    else
                        for (var u = a * n, l = u - n, f = u + n, h = 0; h !== n; ++h)
                        {
                            var d = t[u + h];
                            if (d !== t[l + h] || d !== t[f + h])
                            {
                                s = !0;
                                break
                            }
                        }
                if (s)
                {
                    if (a !== i)
                    {
                        e[i] = e[a];
                        var p = a * n,
                            m = i * n;
                        for (h = 0; h !== n; ++h) t[m + h] = t[p + h]
                    }++i
                }
            }
            if (o > 0)
            {
                e[i] = e[o];
                for (p = o * n, m = i * n, h = 0; h !== n; ++h) t[m + h] = t[p + h];
                ++i
            }
            return i !== e.length && (this.times = wd.arraySlice(e, 0, i), this.values = wd.arraySlice(t, 0, i * n)), this
        },
        clone: function()
        {
            var e = wd.arraySlice(this.times, 0),
                t = wd.arraySlice(this.values, 0),
                n = new(0, this.constructor)(this.name, e, t);
            return n.createInterpolant = this.createInterpolant, n
        }
    }), Td.prototype = Object.assign(Object.create(Md.prototype),
    {
        constructor: Td,
        ValueTypeName: "bool",
        ValueBufferType: Array,
        DefaultInterpolation: 2300,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }), kd.prototype = Object.assign(Object.create(Md.prototype),
    {
        constructor: kd,
        ValueTypeName: "color"
    }), Ad.prototype = Object.assign(Object.create(Md.prototype),
    {
        constructor: Ad,
        ValueTypeName: "number"
    }), Cd.prototype = Object.assign(Object.create(_d.prototype),
    {
        constructor: Cd,
        interpolate_: function(e, t, n, r)
        {
            for (var i = this.resultBuffer, o = this.sampleValues, a = this.valueSize, s = e * a, c = (n - t) / (r - t), u = s + a; s !== u; s += 4) ia.slerpFlat(i, 0, o, s - a, o, s, c);
            return i
        }
    }), Od.prototype = Object.assign(Object.create(Md.prototype),
    {
        constructor: Od,
        ValueTypeName: "quaternion",
        DefaultInterpolation: 2301,
        InterpolantFactoryMethodLinear: function(e)
        {
            return new Cd(this.times, this.values, this.getValueSize(), e)
        },
        InterpolantFactoryMethodSmooth: void 0
    }), Pd.prototype = Object.assign(Object.create(Md.prototype),
    {
        constructor: Pd,
        ValueTypeName: "string",
        ValueBufferType: Array,
        DefaultInterpolation: 2300,
        InterpolantFactoryMethodLinear: void 0,
        InterpolantFactoryMethodSmooth: void 0
    }), Rd.prototype = Object.assign(Object.create(Md.prototype),
    {
        constructor: Rd,
        ValueTypeName: "vector"
    }), Object.assign(Id,
    {
        parse: function(e)
        {
            for (var t = [], n = e.tracks, r = 1 / (e.fps || 1), i = 0, o = n.length; i !== o; ++i) t.push(Nd(n[i]).scale(r));
            return new Id(e.name, e.duration, t)
        },
        toJSON: function(e)
        {
            for (var t = [], n = e.tracks, r = {
                    name: e.name,
                    duration: e.duration,
                    tracks: t,
                    uuid: e.uuid
                }, i = 0, o = n.length; i !== o; ++i) t.push(Md.toJSON(n[i]));
            return r
        },
        CreateFromMorphTargetSequence: function(e, t, n, r)
        {
            for (var i = t.length, o = [], a = 0; a < i; a++)
            {
                var s = [],
                    c = [];
                s.push((a + i - 1) % i, a, (a + 1) % i), c.push(0, 1, 0);
                var u = wd.getKeyframeOrder(s);
                s = wd.sortedArray(s, 1, u), c = wd.sortedArray(c, 1, u), r || 0 !== s[0] || (s.push(i), c.push(c[0])), o.push(new Ad(".morphTargetInfluences[" + t[a].name + "]", s, c).scale(1 / n))
            }
            return new Id(e, -1, o)
        },
        findByName: function(e, t)
        {
            var n = e;
            if (!Array.isArray(e))
            {
                var r = e;
                n = r.geometry && r.geometry.animations || r.animations
            }
            for (var i = 0; i < n.length; i++)
                if (n[i].name === t) return n[i];
            return null
        },
        CreateClipsFromMorphTargetSequences: function(e, t, n)
        {
            for (var r = {}, i = /^([\w-]*?)([\d]+)$/, o = 0, a = e.length; o < a; o++)
            {
                var s = e[o],
                    c = s.name.match(i);
                if (c && c.length > 1)
                {
                    var u = r[f = c[1]];
                    u || (r[f] = u = []), u.push(s)
                }
            }
            var l = [];
            for (var f in r) l.push(Id.CreateFromMorphTargetSequence(f, r[f], t, n));
            return l
        },
        parseAnimation: function(e, t)
        {
            if (!e) return console.error("THREE.AnimationClip: No animation in JSONLoader data."), null;
            for (var n = function(e, t, n, r, i)
                {
                    if (0 !== n.length)
                    {
                        var o = [],
                            a = [];
                        wd.flattenJSON(n, o, a, r), 0 !== o.length && i.push(new e(t, o, a))
                    }
                }, r = [], i = e.name || "default", o = e.length || -1, a = e.fps || 30, s = e.hierarchy || [], c = 0; c < s.length; c++)
            {
                var u = s[c].keys;
                if (u && 0 !== u.length)
                    if (u[0].morphTargets)
                    {
                        for (var l = {}, f = 0; f < u.length; f++)
                            if (u[f].morphTargets)
                                for (var h = 0; h < u[f].morphTargets.length; h++) l[u[f].morphTargets[h]] = -1;
                        for (var d in l)
                        {
                            var p = [],
                                m = [];
                            for (h = 0; h !== u[f].morphTargets.length; ++h)
                            {
                                var v = u[f];
                                p.push(v.time), m.push(v.morphTarget === d ? 1 : 0)
                            }
                            r.push(new Ad(".morphTargetInfluence[" + d + "]", p, m))
                        }
                        o = l.length * (a || 1)
                    }
                else
                {
                    var g = ".bones[" + t[c].name + "]";
                    n(Rd, g + ".position", u, "pos", r), n(Od, g + ".quaternion", u, "rot", r), n(Rd, g + ".scale", u, "scl", r)
                }
            }
            return 0 === r.length ? null : new Id(i, o, r)
        }
    }), Object.assign(Id.prototype,
    {
        resetDuration: function()
        {
            for (var e = 0, t = 0, n = this.tracks.length; t !== n; ++t)
            {
                var r = this.tracks[t];
                e = Math.max(e, r.times[r.times.length - 1])
            }
            return this.duration = e, this
        },
        trim: function()
        {
            for (var e = 0; e < this.tracks.length; e++) this.tracks[e].trim(0, this.duration);
            return this
        },
        validate: function()
        {
            for (var e = !0, t = 0; t < this.tracks.length; t++) e = e && this.tracks[t].validate();
            return e
        },
        optimize: function()
        {
            for (var e = 0; e < this.tracks.length; e++) this.tracks[e].optimize();
            return this
        },
        clone: function()
        {
            for (var e = [], t = 0; t < this.tracks.length; t++) e.push(this.tracks[t].clone());
            return new Id(this.name, this.duration, e)
        }
    });
var Ld = {
    enabled: !1,
    files:
    {},
    add: function(e, t)
    {
        !1 !== this.enabled && (this.files[e] = t)
    },
    get: function(e)
    {
        if (!1 !== this.enabled) return this.files[e]
    },
    remove: function(e)
    {
        delete this.files[e]
    },
    clear: function()
    {
        this.files = {}
    }
};

function Bd(e, t, n)
{
    var r = this,
        i = !1,
        o = 0,
        a = 0,
        s = void 0,
        c = [];
    this.onStart = void 0, this.onLoad = e, this.onProgress = t, this.onError = n, this.itemStart = function(e)
    {
        a++, !1 === i && void 0 !== r.onStart && r.onStart(e, o, a), i = !0
    }, this.itemEnd = function(e)
    {
        o++, void 0 !== r.onProgress && r.onProgress(e, o, a), o === a && (i = !1, void 0 !== r.onLoad && r.onLoad())
    }, this.itemError = function(e)
    {
        void 0 !== r.onError && r.onError(e)
    }, this.resolveURL = function(e)
    {
        return s ? s(e) : e
    }, this.setURLModifier = function(e)
    {
        return s = e, this
    }, this.addHandler = function(e, t)
    {
        return c.push(e, t), this
    }, this.removeHandler = function(e)
    {
        var t = c.indexOf(e);
        return -1 !== t && c.splice(t, 2), this
    }, this.getHandler = function(e)
    {
        for (var t = 0, n = c.length; t < n; t += 2)
        {
            var r = c[t],
                i = c[t + 1];
            if (r.global && (r.lastIndex = 0), r.test(e)) return i
        }
        return null
    }
}
var jd = new Bd;

function Fd(e)
{
    this.manager = void 0 !== e ? e : jd, this.crossOrigin = "anonymous", this.path = "", this.resourcePath = ""
}
Object.assign(Fd.prototype,
{
    load: function() {},
    parse: function() {},
    setCrossOrigin: function(e)
    {
        return this.crossOrigin = e, this
    },
    setPath: function(e)
    {
        return this.path = e, this
    },
    setResourcePath: function(e)
    {
        return this.resourcePath = e, this
    }
});
var Ud = {};

function Dd(e)
{
    Fd.call(this, e)
}

function zd(e)
{
    Fd.call(this, e)
}

function Hd(e)
{
    Fd.call(this, e)
}

function Vd(e)
{
    Fd.call(this, e)
}

function Wd(e)
{
    Fd.call(this, e)
}

function Gd(e)
{
    Fd.call(this, e)
}

function qd(e)
{
    Fd.call(this, e)
}

function $d()
{
    this.type = "Curve", this.arcLengthDivisions = 200
}

function Kd(e, t, n, r, i, o, a, s)
{
    $d.call(this), this.type = "EllipseCurve", this.aX = e || 0, this.aY = t || 0, this.xRadius = n || 1, this.yRadius = r || 1, this.aStartAngle = i || 0, this.aEndAngle = o || 2 * Math.PI, this.aClockwise = a || !1, this.aRotation = s || 0
}

function Yd(e, t, n, r, i, o)
{
    Kd.call(this, e, t, n, n, r, i, o), this.type = "ArcCurve"
}

function Xd()
{
    var e = 0,
        t = 0,
        n = 0,
        r = 0;

    function i(i, o, a, s)
    {
        e = i, t = a, n = -3 * i + 3 * o - 2 * a - s, r = 2 * i - 2 * o + a + s
    }
    return {
        initCatmullRom: function(e, t, n, r, o)
        {
            i(t, n, o * (n - e), o * (r - t))
        },
        initNonuniformCatmullRom: function(e, t, n, r, o, a, s)
        {
            var c = (t - e) / o - (n - e) / (o + a) + (n - t) / a,
                u = (n - t) / a - (r - t) / (a + s) + (r - n) / s;
            i(t, n, c *= a, u *= a)
        },
        calc: function(i)
        {
            var o = i * i;
            return e + t * i + n * o + r * (o * i)
        }
    }
}
Dd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Dd,
    load: function(e, t, n, r)
    {
        void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
        var i = this,
            o = Ld.get(e);
        if (void 0 !== o) return i.manager.itemStart(e), setTimeout((function()
        {
            t && t(o), i.manager.itemEnd(e)
        }), 0), o;
        if (void 0 === Ud[e])
        {
            var a = e.match(/^data:(.*?)(;base64)?,(.*)$/);
            if (a)
            {
                var s = a[1],
                    c = !!a[2],
                    u = a[3];
                u = decodeURIComponent(u), c && (u = atob(u));
                try
                {
                    var l, f = (this.responseType || "").toLowerCase();
                    switch (f)
                    {
                        case "arraybuffer":
                        case "blob":
                            for (var h = new Uint8Array(u.length), d = 0; d < u.length; d++) h[d] = u.charCodeAt(d);
                            l = "blob" === f ? new Blob([h.buffer],
                            {
                                type: s
                            }) : h.buffer;
                            break;
                        case "document":
                            var p = new DOMParser;
                            l = p.parseFromString(u, s);
                            break;
                        case "json":
                            l = JSON.parse(u);
                            break;
                        default:
                            l = u
                    }
                    setTimeout((function()
                    {
                        t && t(l), i.manager.itemEnd(e)
                    }), 0)
                }
                catch (t)
                {
                    setTimeout((function()
                    {
                        r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
                    }), 0)
                }
            }
            else
            {
                Ud[e] = [], Ud[e].push(
                {
                    onLoad: t,
                    onProgress: n,
                    onError: r
                });
                var m = new XMLHttpRequest;
                for (var v in m.open("GET", e, !0), m.addEventListener("load", (function(t)
                    {
                        var n = this.response,
                            r = Ud[e];
                        if (delete Ud[e], 200 === this.status || 0 === this.status)
                        {
                            0 === this.status && console.warn("THREE.FileLoader: HTTP Status 0 received."), Ld.add(e, n);
                            for (var o = 0, a = r.length; o < a; o++)
                            {
                                (s = r[o]).onLoad && s.onLoad(n)
                            }
                            i.manager.itemEnd(e)
                        }
                        else
                        {
                            for (o = 0, a = r.length; o < a; o++)
                            {
                                var s;
                                (s = r[o]).onError && s.onError(t)
                            }
                            i.manager.itemError(e), i.manager.itemEnd(e)
                        }
                    }), !1), m.addEventListener("progress", (function(t)
                    {
                        for (var n = Ud[e], r = 0, i = n.length; r < i; r++)
                        {
                            var o = n[r];
                            o.onProgress && o.onProgress(t)
                        }
                    }), !1), m.addEventListener("error", (function(t)
                    {
                        var n = Ud[e];
                        delete Ud[e];
                        for (var r = 0, o = n.length; r < o; r++)
                        {
                            var a = n[r];
                            a.onError && a.onError(t)
                        }
                        i.manager.itemError(e), i.manager.itemEnd(e)
                    }), !1), m.addEventListener("abort", (function(t)
                    {
                        var n = Ud[e];
                        delete Ud[e];
                        for (var r = 0, o = n.length; r < o; r++)
                        {
                            var a = n[r];
                            a.onError && a.onError(t)
                        }
                        i.manager.itemError(e), i.manager.itemEnd(e)
                    }), !1), void 0 !== this.responseType && (m.responseType = this.responseType), void 0 !== this.withCredentials && (m.withCredentials = this.withCredentials), m.overrideMimeType && m.overrideMimeType(void 0 !== this.mimeType ? this.mimeType : "text/plain"), this.requestHeader) m.setRequestHeader(v, this.requestHeader[v]);
                m.send(null)
            }
            return i.manager.itemStart(e), m
        }
        Ud[e].push(
        {
            onLoad: t,
            onProgress: n,
            onError: r
        })
    },
    setResponseType: function(e)
    {
        return this.responseType = e, this
    },
    setWithCredentials: function(e)
    {
        return this.withCredentials = e, this
    },
    setMimeType: function(e)
    {
        return this.mimeType = e, this
    },
    setRequestHeader: function(e)
    {
        return this.requestHeader = e, this
    }
}), zd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: zd,
    load: function(e, t, n, r)
    {
        var i = this,
            o = new Dd(i.manager);
        o.setPath(i.path), o.load(e, (function(e)
        {
            t(i.parse(JSON.parse(e)))
        }), n, r)
    },
    parse: function(e)
    {
        for (var t = [], n = 0; n < e.length; n++)
        {
            var r = Id.parse(e[n]);
            t.push(r)
        }
        return t
    }
}), Hd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Hd,
    load: function(e, t, n, r)
    {
        var i = this,
            o = [],
            a = new $f;
        a.image = o;
        var s = new Dd(this.manager);

        function c(c)
        {
            s.load(e[c], (function(e)
            {
                var n = i.parse(e, !0);
                o[c] = {
                    width: n.width,
                    height: n.height,
                    format: n.format,
                    mipmaps: n.mipmaps
                }, 6 === (u += 1) && (1 === n.mipmapCount && (a.minFilter = 1006), a.format = n.format, a.needsUpdate = !0, t && t(a))
            }), n, r)
        }
        if (s.setPath(this.path), s.setResponseType("arraybuffer"), Array.isArray(e))
            for (var u = 0, l = 0, f = e.length; l < f; ++l) c(l);
        else s.load(e, (function(e)
        {
            var n = i.parse(e, !0);
            if (n.isCubemap)
                for (var r = n.mipmaps.length / n.mipmapCount, s = 0; s < r; s++)
                {
                    o[s] = {
                        mipmaps: []
                    };
                    for (var c = 0; c < n.mipmapCount; c++) o[s].mipmaps.push(n.mipmaps[s * n.mipmapCount + c]), o[s].format = n.format, o[s].width = n.width, o[s].height = n.height
                }
            else a.image.width = n.width, a.image.height = n.height, a.mipmaps = n.mipmaps;
            1 === n.mipmapCount && (a.minFilter = 1006), a.format = n.format, a.needsUpdate = !0, t && t(a)
        }), n, r);
        return a
    }
}), Vd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Vd,
    load: function(e, t, n, r)
    {
        var i = this,
            o = new zc,
            a = new Dd(this.manager);
        return a.setResponseType("arraybuffer"), a.setPath(this.path), a.load(e, (function(e)
        {
            var n = i.parse(e);
            n && (void 0 !== n.image ? o.image = n.image : void 0 !== n.data && (o.image.width = n.width, o.image.height = n.height, o.image.data = n.data), o.wrapS = void 0 !== n.wrapS ? n.wrapS : 1001, o.wrapT = void 0 !== n.wrapT ? n.wrapT : 1001, o.magFilter = void 0 !== n.magFilter ? n.magFilter : 1006, o.minFilter = void 0 !== n.minFilter ? n.minFilter : 1006, o.anisotropy = void 0 !== n.anisotropy ? n.anisotropy : 1, void 0 !== n.format && (o.format = n.format), void 0 !== n.type && (o.type = n.type), void 0 !== n.mipmaps && (o.mipmaps = n.mipmaps, o.minFilter = 1008), 1 === n.mipmapCount && (o.minFilter = 1006), o.needsUpdate = !0, t && t(o, n))
        }), n, r), o
    }
}), Wd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Wd,
    load: function(e, t, n, r)
    {
        void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
        var i = this,
            o = Ld.get(e);
        if (void 0 !== o) return i.manager.itemStart(e), setTimeout((function()
        {
            t && t(o), i.manager.itemEnd(e)
        }), 0), o;
        var a = document.createElementNS("http://www.w3.org/1999/xhtml", "img");

        function s()
        {
            a.removeEventListener("load", s, !1), a.removeEventListener("error", c, !1), Ld.add(e, this), t && t(this), i.manager.itemEnd(e)
        }

        function c(t)
        {
            a.removeEventListener("load", s, !1), a.removeEventListener("error", c, !1), r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
        }
        return a.addEventListener("load", s, !1), a.addEventListener("error", c, !1), "data:" !== e.substr(0, 5) && void 0 !== this.crossOrigin && (a.crossOrigin = this.crossOrigin), i.manager.itemStart(e), a.src = e, a
    }
}), Gd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Gd,
    load: function(e, t, n, r)
    {
        var i = new uu,
            o = new Wd(this.manager);
        o.setCrossOrigin(this.crossOrigin), o.setPath(this.path);
        var a = 0;

        function s(n)
        {
            o.load(e[n], (function(e)
            {
                i.images[n] = e, 6 === ++a && (i.needsUpdate = !0, t && t(i))
            }), void 0, r)
        }
        for (var c = 0; c < e.length; ++c) s(c);
        return i
    }
}), qd.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: qd,
    load: function(e, t, n, r)
    {
        var i = new da,
            o = new Wd(this.manager);
        return o.setCrossOrigin(this.crossOrigin), o.setPath(this.path), o.load(e, (function(n)
        {
            i.image = n;
            var r = e.search(/\.jpe?g($|\?)/i) > 0 || 0 === e.search(/^data\:image\/jpeg/);
            i.format = r ? 1022 : 1023, i.needsUpdate = !0, void 0 !== t && t(i)
        }), n, r), i
    }
}), Object.assign($d.prototype,
{
    getPoint: function()
    {
        return console.warn("THREE.Curve: .getPoint() not implemented."), null
    },
    getPointAt: function(e, t)
    {
        var n = this.getUtoTmapping(e);
        return this.getPoint(n, t)
    },
    getPoints: function(e)
    {
        void 0 === e && (e = 5);
        for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
        return t
    },
    getSpacedPoints: function(e)
    {
        void 0 === e && (e = 5);
        for (var t = [], n = 0; n <= e; n++) t.push(this.getPointAt(n / e));
        return t
    },
    getLength: function()
    {
        var e = this.getLengths();
        return e[e.length - 1]
    },
    getLengths: function(e)
    {
        if (void 0 === e && (e = this.arcLengthDivisions), this.cacheArcLengths && this.cacheArcLengths.length === e + 1 && !this.needsUpdate) return this.cacheArcLengths;
        this.needsUpdate = !1;
        var t, n, r = [],
            i = this.getPoint(0),
            o = 0;
        for (r.push(0), n = 1; n <= e; n++) o += (t = this.getPoint(n / e)).distanceTo(i), r.push(o), i = t;
        return this.cacheArcLengths = r, r
    },
    updateArcLengths: function()
    {
        this.needsUpdate = !0, this.getLengths()
    },
    getUtoTmapping: function(e, t)
    {
        var n, r = this.getLengths(),
            i = 0,
            o = r.length;
        n = t || e * r[o - 1];
        for (var a, s = 0, c = o - 1; s <= c;)
            if ((a = r[i = Math.floor(s + (c - s) / 2)] - n) < 0) s = i + 1;
            else
            {
                if (!(a > 0))
                {
                    c = i;
                    break
                }
                c = i - 1
            } if (r[i = c] === n) return i / (o - 1);
        var u = r[i];
        return (i + (n - u) / (r[i + 1] - u)) / (o - 1)
    },
    getTangent: function(e)
    {
        var t = e - 1e-4,
            n = e + 1e-4;
        t < 0 && (t = 0), n > 1 && (n = 1);
        var r = this.getPoint(t);
        return this.getPoint(n).clone().sub(r).normalize()
    },
    getTangentAt: function(e)
    {
        var t = this.getUtoTmapping(e);
        return this.getTangent(t)
    },
    computeFrenetFrames: function(e, t)
    {
        var n, r, i, o = new sa,
            a = [],
            s = [],
            c = [],
            u = new sa,
            l = new Sa;
        for (n = 0; n <= e; n++) r = n / e, a[n] = this.getTangentAt(r), a[n].normalize();
        s[0] = new sa, c[0] = new sa;
        var f = Number.MAX_VALUE,
            h = Math.abs(a[0].x),
            d = Math.abs(a[0].y),
            p = Math.abs(a[0].z);
        for (h <= f && (f = h, o.set(1, 0, 0)), d <= f && (f = d, o.set(0, 1, 0)), p <= f && o.set(0, 0, 1), u.crossVectors(a[0], o).normalize(), s[0].crossVectors(a[0], u), c[0].crossVectors(a[0], s[0]), n = 1; n <= e; n++) s[n] = s[n - 1].clone(), c[n] = c[n - 1].clone(), u.crossVectors(a[n - 1], a[n]), u.length() > Number.EPSILON && (u.normalize(), i = Math.acos(na.clamp(a[n - 1].dot(a[n]), -1, 1)), s[n].applyMatrix4(l.makeRotationAxis(u, i))), c[n].crossVectors(a[n], s[n]);
        if (!0 === t)
            for (i = Math.acos(na.clamp(s[0].dot(s[e]), -1, 1)), i /= e, a[0].dot(u.crossVectors(s[0], s[e])) > 0 && (i = -i), n = 1; n <= e; n++) s[n].applyMatrix4(l.makeRotationAxis(a[n], i * n)), c[n].crossVectors(a[n], s[n]);
        return {
            tangents: a,
            normals: s,
            binormals: c
        }
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.arcLengthDivisions = e.arcLengthDivisions, this
    },
    toJSON: function()
    {
        var e = {
            metadata:
            {
                version: 4.5,
                type: "Curve",
                generator: "Curve.toJSON"
            }
        };
        return e.arcLengthDivisions = this.arcLengthDivisions, e.type = this.type, e
    },
    fromJSON: function(e)
    {
        return this.arcLengthDivisions = e.arcLengthDivisions, this
    }
}), Kd.prototype = Object.create($d.prototype), Kd.prototype.constructor = Kd, Kd.prototype.isEllipseCurve = !0, Kd.prototype.getPoint = function(e, t)
{
    for (var n = t || new ra, r = 2 * Math.PI, i = this.aEndAngle - this.aStartAngle, o = Math.abs(i) < Number.EPSILON; i < 0;) i += r;
    for (; i > r;) i -= r;
    i < Number.EPSILON && (i = o ? 0 : r), !0 !== this.aClockwise || o || (i === r ? i = -r : i -= r);
    var a = this.aStartAngle + e * i,
        s = this.aX + this.xRadius * Math.cos(a),
        c = this.aY + this.yRadius * Math.sin(a);
    if (0 !== this.aRotation)
    {
        var u = Math.cos(this.aRotation),
            l = Math.sin(this.aRotation),
            f = s - this.aX,
            h = c - this.aY;
        s = f * u - h * l + this.aX, c = f * l + h * u + this.aY
    }
    return n.set(s, c)
}, Kd.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
}, Kd.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.aX = this.aX, e.aY = this.aY, e.xRadius = this.xRadius, e.yRadius = this.yRadius, e.aStartAngle = this.aStartAngle, e.aEndAngle = this.aEndAngle, e.aClockwise = this.aClockwise, e.aRotation = this.aRotation, e
}, Kd.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.aX = e.aX, this.aY = e.aY, this.xRadius = e.xRadius, this.yRadius = e.yRadius, this.aStartAngle = e.aStartAngle, this.aEndAngle = e.aEndAngle, this.aClockwise = e.aClockwise, this.aRotation = e.aRotation, this
}, Yd.prototype = Object.create(Kd.prototype), Yd.prototype.constructor = Yd, Yd.prototype.isArcCurve = !0;
var Jd = new sa,
    Zd = new Xd,
    Qd = new Xd,
    ep = new Xd;

function tp(e, t, n, r)
{
    $d.call(this), this.type = "CatmullRomCurve3", this.points = e || [], this.closed = t || !1, this.curveType = n || "centripetal", this.tension = r || .5
}

function np(e, t, n, r, i)
{
    var o = .5 * (r - t),
        a = .5 * (i - n),
        s = e * e;
    return (2 * n - 2 * r + o + a) * (e * s) + (-3 * n + 3 * r - 2 * o - a) * s + o * e + n
}

function rp(e, t, n, r)
{
    return function(e, t)
    {
        var n = 1 - e;
        return n * n * t
    }(e, t) + function(e, t)
    {
        return 2 * (1 - e) * e * t
    }(e, n) + function(e, t)
    {
        return e * e * t
    }(e, r)
}

function ip(e, t, n, r, i)
{
    return function(e, t)
    {
        var n = 1 - e;
        return n * n * n * t
    }(e, t) + function(e, t)
    {
        var n = 1 - e;
        return 3 * n * n * e * t
    }(e, n) + function(e, t)
    {
        return 3 * (1 - e) * e * e * t
    }(e, r) + function(e, t)
    {
        return e * e * e * t
    }(e, i)
}

function op(e, t, n, r)
{
    $d.call(this), this.type = "CubicBezierCurve", this.v0 = e || new ra, this.v1 = t || new ra, this.v2 = n || new ra, this.v3 = r || new ra
}

function ap(e, t, n, r)
{
    $d.call(this), this.type = "CubicBezierCurve3", this.v0 = e || new sa, this.v1 = t || new sa, this.v2 = n || new sa, this.v3 = r || new sa
}

function sp(e, t)
{
    $d.call(this), this.type = "LineCurve", this.v1 = e || new ra, this.v2 = t || new ra
}

function cp(e, t)
{
    $d.call(this), this.type = "LineCurve3", this.v1 = e || new sa, this.v2 = t || new sa
}

function up(e, t, n)
{
    $d.call(this), this.type = "QuadraticBezierCurve", this.v0 = e || new ra, this.v1 = t || new ra, this.v2 = n || new ra
}

function lp(e, t, n)
{
    $d.call(this), this.type = "QuadraticBezierCurve3", this.v0 = e || new sa, this.v1 = t || new sa, this.v2 = n || new sa
}

function fp(e)
{
    $d.call(this), this.type = "SplineCurve", this.points = e || []
}
tp.prototype = Object.create($d.prototype), tp.prototype.constructor = tp, tp.prototype.isCatmullRomCurve3 = !0, tp.prototype.getPoint = function(e, t)
{
    var n, r, i, o, a = t || new sa,
        s = this.points,
        c = s.length,
        u = (c - (this.closed ? 0 : 1)) * e,
        l = Math.floor(u),
        f = u - l;
    if (this.closed ? l += l > 0 ? 0 : (Math.floor(Math.abs(l) / c) + 1) * c : 0 === f && l === c - 1 && (l = c - 2, f = 1), this.closed || l > 0 ? n = s[(l - 1) % c] : (Jd.subVectors(s[0], s[1]).add(s[0]), n = Jd), r = s[l % c], i = s[(l + 1) % c], this.closed || l + 2 < c ? o = s[(l + 2) % c] : (Jd.subVectors(s[c - 1], s[c - 2]).add(s[c - 1]), o = Jd), "centripetal" === this.curveType || "chordal" === this.curveType)
    {
        var h = "chordal" === this.curveType ? .5 : .25,
            d = Math.pow(n.distanceToSquared(r), h),
            p = Math.pow(r.distanceToSquared(i), h),
            m = Math.pow(i.distanceToSquared(o), h);
        p < 1e-4 && (p = 1), d < 1e-4 && (d = p), m < 1e-4 && (m = p), Zd.initNonuniformCatmullRom(n.x, r.x, i.x, o.x, d, p, m), Qd.initNonuniformCatmullRom(n.y, r.y, i.y, o.y, d, p, m), ep.initNonuniformCatmullRom(n.z, r.z, i.z, o.z, d, p, m)
    }
    else "catmullrom" === this.curveType && (Zd.initCatmullRom(n.x, r.x, i.x, o.x, this.tension), Qd.initCatmullRom(n.y, r.y, i.y, o.y, this.tension), ep.initCatmullRom(n.z, r.z, i.z, o.z, this.tension));
    return a.set(Zd.calc(f), Qd.calc(f), ep.calc(f)), a
}, tp.prototype.copy = function(e)
{
    $d.prototype.copy.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++)
    {
        var r = e.points[t];
        this.points.push(r.clone())
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
}, tp.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    e.points = [];
    for (var t = 0, n = this.points.length; t < n; t++)
    {
        var r = this.points[t];
        e.points.push(r.toArray())
    }
    return e.closed = this.closed, e.curveType = this.curveType, e.tension = this.tension, e
}, tp.prototype.fromJSON = function(e)
{
    $d.prototype.fromJSON.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++)
    {
        var r = e.points[t];
        this.points.push((new sa).fromArray(r))
    }
    return this.closed = e.closed, this.curveType = e.curveType, this.tension = e.tension, this
}, op.prototype = Object.create($d.prototype), op.prototype.constructor = op, op.prototype.isCubicBezierCurve = !0, op.prototype.getPoint = function(e, t)
{
    var n = t || new ra,
        r = this.v0,
        i = this.v1,
        o = this.v2,
        a = this.v3;
    return n.set(ip(e, r.x, i.x, o.x, a.x), ip(e, r.y, i.y, o.y, a.y)), n
}, op.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
}, op.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
}, op.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
}, ap.prototype = Object.create($d.prototype), ap.prototype.constructor = ap, ap.prototype.isCubicBezierCurve3 = !0, ap.prototype.getPoint = function(e, t)
{
    var n = t || new sa,
        r = this.v0,
        i = this.v1,
        o = this.v2,
        a = this.v3;
    return n.set(ip(e, r.x, i.x, o.x, a.x), ip(e, r.y, i.y, o.y, a.y), ip(e, r.z, i.z, o.z, a.z)), n
}, ap.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this.v3.copy(e.v3), this
}, ap.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e.v3 = this.v3.toArray(), e
}, ap.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this.v3.fromArray(e.v3), this
}, sp.prototype = Object.create($d.prototype), sp.prototype.constructor = sp, sp.prototype.isLineCurve = !0, sp.prototype.getPoint = function(e, t)
{
    var n = t || new ra;
    return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n
}, sp.prototype.getPointAt = function(e, t)
{
    return this.getPoint(e, t)
}, sp.prototype.getTangent = function()
{
    return this.v2.clone().sub(this.v1).normalize()
}, sp.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
}, sp.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
}, sp.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
}, cp.prototype = Object.create($d.prototype), cp.prototype.constructor = cp, cp.prototype.isLineCurve3 = !0, cp.prototype.getPoint = function(e, t)
{
    var n = t || new sa;
    return 1 === e ? n.copy(this.v2) : (n.copy(this.v2).sub(this.v1), n.multiplyScalar(e).add(this.v1)), n
}, cp.prototype.getPointAt = function(e, t)
{
    return this.getPoint(e, t)
}, cp.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.v1.copy(e.v1), this.v2.copy(e.v2), this
}, cp.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
}, cp.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
}, up.prototype = Object.create($d.prototype), up.prototype.constructor = up, up.prototype.isQuadraticBezierCurve = !0, up.prototype.getPoint = function(e, t)
{
    var n = t || new ra,
        r = this.v0,
        i = this.v1,
        o = this.v2;
    return n.set(rp(e, r.x, i.x, o.x), rp(e, r.y, i.y, o.y)), n
}, up.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
}, up.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
}, up.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
}, lp.prototype = Object.create($d.prototype), lp.prototype.constructor = lp, lp.prototype.isQuadraticBezierCurve3 = !0, lp.prototype.getPoint = function(e, t)
{
    var n = t || new sa,
        r = this.v0,
        i = this.v1,
        o = this.v2;
    return n.set(rp(e, r.x, i.x, o.x), rp(e, r.y, i.y, o.y), rp(e, r.z, i.z, o.z)), n
}, lp.prototype.copy = function(e)
{
    return $d.prototype.copy.call(this, e), this.v0.copy(e.v0), this.v1.copy(e.v1), this.v2.copy(e.v2), this
}, lp.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    return e.v0 = this.v0.toArray(), e.v1 = this.v1.toArray(), e.v2 = this.v2.toArray(), e
}, lp.prototype.fromJSON = function(e)
{
    return $d.prototype.fromJSON.call(this, e), this.v0.fromArray(e.v0), this.v1.fromArray(e.v1), this.v2.fromArray(e.v2), this
}, fp.prototype = Object.create($d.prototype), fp.prototype.constructor = fp, fp.prototype.isSplineCurve = !0, fp.prototype.getPoint = function(e, t)
{
    var n = t || new ra,
        r = this.points,
        i = (r.length - 1) * e,
        o = Math.floor(i),
        a = i - o,
        s = r[0 === o ? o : o - 1],
        c = r[o],
        u = r[o > r.length - 2 ? r.length - 1 : o + 1],
        l = r[o > r.length - 3 ? r.length - 1 : o + 2];
    return n.set(np(a, s.x, c.x, u.x, l.x), np(a, s.y, c.y, u.y, l.y)), n
}, fp.prototype.copy = function(e)
{
    $d.prototype.copy.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++)
    {
        var r = e.points[t];
        this.points.push(r.clone())
    }
    return this
}, fp.prototype.toJSON = function()
{
    var e = $d.prototype.toJSON.call(this);
    e.points = [];
    for (var t = 0, n = this.points.length; t < n; t++)
    {
        var r = this.points[t];
        e.points.push(r.toArray())
    }
    return e
}, fp.prototype.fromJSON = function(e)
{
    $d.prototype.fromJSON.call(this, e), this.points = [];
    for (var t = 0, n = e.points.length; t < n; t++)
    {
        var r = e.points[t];
        this.points.push((new ra).fromArray(r))
    }
    return this
};
var hp = Object.freeze(
{
    __proto__: null,
    ArcCurve: Yd,
    CatmullRomCurve3: tp,
    CubicBezierCurve: op,
    CubicBezierCurve3: ap,
    EllipseCurve: Kd,
    LineCurve: sp,
    LineCurve3: cp,
    QuadraticBezierCurve: up,
    QuadraticBezierCurve3: lp,
    SplineCurve: fp
});

function dp()
{
    $d.call(this), this.type = "CurvePath", this.curves = [], this.autoClose = !1
}

function pp(e)
{
    dp.call(this), this.type = "Path", this.currentPoint = new ra, e && this.setFromPoints(e)
}

function mp(e)
{
    pp.call(this, e), this.uuid = na.generateUUID(), this.type = "Shape", this.holes = []
}

function vp(e, t)
{
    Ha.call(this), this.type = "Light", this.color = new Is(e), this.intensity = void 0 !== t ? t : 1, this.receiveShadow = void 0
}

function gp(e, t, n)
{
    vp.call(this, e, n), this.type = "HemisphereLight", this.castShadow = void 0, this.position.copy(Ha.DefaultUp), this.updateMatrix(), this.groundColor = new Is(t)
}

function yp(e)
{
    this.camera = e, this.bias = 0, this.radius = 1, this.mapSize = new ra(512, 512), this.map = null, this.mapPass = null, this.matrix = new Sa, this._frustum = new Wc, this._frameExtents = new ra(1, 1), this._viewportCount = 1, this._viewports = [new pa(0, 0, 1, 1)]
}

function bp()
{
    yp.call(this, new Fc(50, 1, .5, 500))
}

function wp(e, t, n, r, i, o)
{
    vp.call(this, e, t), this.type = "SpotLight", this.position.copy(Ha.DefaultUp), this.updateMatrix(), this.target = new Ha, Object.defineProperty(this, "power",
    {
        get: function()
        {
            return this.intensity * Math.PI
        },
        set: function(e)
        {
            this.intensity = e / Math.PI
        }
    }), this.distance = void 0 !== n ? n : 0, this.angle = void 0 !== r ? r : Math.PI / 3, this.penumbra = void 0 !== i ? i : 0, this.decay = void 0 !== o ? o : 1, this.shadow = new bp
}

function _p()
{
    yp.call(this, new Fc(90, 1, .5, 500)), this._frameExtents = new ra(4, 2), this._viewportCount = 6, this._viewports = [new pa(2, 1, 1, 1), new pa(0, 1, 1, 1), new pa(3, 1, 1, 1), new pa(1, 1, 1, 1), new pa(3, 0, 1, 1), new pa(1, 0, 1, 1)], this._cubeDirections = [new sa(1, 0, 0), new sa(-1, 0, 0), new sa(0, 0, 1), new sa(0, 0, -1), new sa(0, 1, 0), new sa(0, -1, 0)], this._cubeUps = [new sa(0, 1, 0), new sa(0, 1, 0), new sa(0, 1, 0), new sa(0, 1, 0), new sa(0, 0, 1), new sa(0, 0, -1)]
}

function xp(e, t, n, r)
{
    vp.call(this, e, t), this.type = "PointLight", Object.defineProperty(this, "power",
    {
        get: function()
        {
            return 4 * this.intensity * Math.PI
        },
        set: function(e)
        {
            this.intensity = e / (4 * Math.PI)
        }
    }), this.distance = void 0 !== n ? n : 0, this.decay = void 0 !== r ? r : 1, this.shadow = new _p
}

function Ep(e, t, n, r, i, o)
{
    jc.call(this), this.type = "OrthographicCamera", this.zoom = 1, this.view = null, this.left = void 0 !== e ? e : -1, this.right = void 0 !== t ? t : 1, this.top = void 0 !== n ? n : 1, this.bottom = void 0 !== r ? r : -1, this.near = void 0 !== i ? i : .1, this.far = void 0 !== o ? o : 2e3, this.updateProjectionMatrix()
}

function Sp()
{
    yp.call(this, new Ep(-5, 5, 5, -5, .5, 500))
}

function Mp(e, t)
{
    vp.call(this, e, t), this.type = "DirectionalLight", this.position.copy(Ha.DefaultUp), this.updateMatrix(), this.target = new Ha, this.shadow = new Sp
}

function Tp(e, t)
{
    vp.call(this, e, t), this.type = "AmbientLight", this.castShadow = void 0
}

function kp(e, t, n, r)
{
    vp.call(this, e, t), this.type = "RectAreaLight", this.width = void 0 !== n ? n : 10, this.height = void 0 !== r ? r : 10
}

function Ap(e)
{
    Fd.call(this, e), this.textures = {}
}
dp.prototype = Object.assign(Object.create($d.prototype),
{
    constructor: dp,
    add: function(e)
    {
        this.curves.push(e)
    },
    closePath: function()
    {
        var e = this.curves[0].getPoint(0),
            t = this.curves[this.curves.length - 1].getPoint(1);
        e.equals(t) || this.curves.push(new sp(t, e))
    },
    getPoint: function(e)
    {
        for (var t = e * this.getLength(), n = this.getCurveLengths(), r = 0; r < n.length;)
        {
            if (n[r] >= t)
            {
                var i = n[r] - t,
                    o = this.curves[r],
                    a = o.getLength(),
                    s = 0 === a ? 0 : 1 - i / a;
                return o.getPointAt(s)
            }
            r++
        }
        return null
    },
    getLength: function()
    {
        var e = this.getCurveLengths();
        return e[e.length - 1]
    },
    updateArcLengths: function()
    {
        this.needsUpdate = !0, this.cacheLengths = null, this.getCurveLengths()
    },
    getCurveLengths: function()
    {
        if (this.cacheLengths && this.cacheLengths.length === this.curves.length) return this.cacheLengths;
        for (var e = [], t = 0, n = 0, r = this.curves.length; n < r; n++) t += this.curves[n].getLength(), e.push(t);
        return this.cacheLengths = e, e
    },
    getSpacedPoints: function(e)
    {
        void 0 === e && (e = 40);
        for (var t = [], n = 0; n <= e; n++) t.push(this.getPoint(n / e));
        return this.autoClose && t.push(t[0]), t
    },
    getPoints: function(e)
    {
        e = e || 12;
        for (var t, n = [], r = 0, i = this.curves; r < i.length; r++)
            for (var o = i[r], a = o && o.isEllipseCurve ? 2 * e : o && (o.isLineCurve || o.isLineCurve3) ? 1 : o && o.isSplineCurve ? e * o.points.length : e, s = o.getPoints(a), c = 0; c < s.length; c++)
            {
                var u = s[c];
                t && t.equals(u) || (n.push(u), t = u)
            }
        return this.autoClose && n.length > 1 && !n[n.length - 1].equals(n[0]) && n.push(n[0]), n
    },
    copy: function(e)
    {
        $d.prototype.copy.call(this, e), this.curves = [];
        for (var t = 0, n = e.curves.length; t < n; t++)
        {
            var r = e.curves[t];
            this.curves.push(r.clone())
        }
        return this.autoClose = e.autoClose, this
    },
    toJSON: function()
    {
        var e = $d.prototype.toJSON.call(this);
        e.autoClose = this.autoClose, e.curves = [];
        for (var t = 0, n = this.curves.length; t < n; t++)
        {
            var r = this.curves[t];
            e.curves.push(r.toJSON())
        }
        return e
    },
    fromJSON: function(e)
    {
        $d.prototype.fromJSON.call(this, e), this.autoClose = e.autoClose, this.curves = [];
        for (var t = 0, n = e.curves.length; t < n; t++)
        {
            var r = e.curves[t];
            this.curves.push((new hp[r.type]).fromJSON(r))
        }
        return this
    }
}), pp.prototype = Object.assign(Object.create(dp.prototype),
{
    constructor: pp,
    setFromPoints: function(e)
    {
        this.moveTo(e[0].x, e[0].y);
        for (var t = 1, n = e.length; t < n; t++) this.lineTo(e[t].x, e[t].y);
        return this
    },
    moveTo: function(e, t)
    {
        return this.currentPoint.set(e, t), this
    },
    lineTo: function(e, t)
    {
        var n = new sp(this.currentPoint.clone(), new ra(e, t));
        return this.curves.push(n), this.currentPoint.set(e, t), this
    },
    quadraticCurveTo: function(e, t, n, r)
    {
        var i = new up(this.currentPoint.clone(), new ra(e, t), new ra(n, r));
        return this.curves.push(i), this.currentPoint.set(n, r), this
    },
    bezierCurveTo: function(e, t, n, r, i, o)
    {
        var a = new op(this.currentPoint.clone(), new ra(e, t), new ra(n, r), new ra(i, o));
        return this.curves.push(a), this.currentPoint.set(i, o), this
    },
    splineThru: function(e)
    {
        var t = new fp([this.currentPoint.clone()].concat(e));
        return this.curves.push(t), this.currentPoint.copy(e[e.length - 1]), this
    },
    arc: function(e, t, n, r, i, o)
    {
        var a = this.currentPoint.x,
            s = this.currentPoint.y;
        return this.absarc(e + a, t + s, n, r, i, o), this
    },
    absarc: function(e, t, n, r, i, o)
    {
        return this.absellipse(e, t, n, n, r, i, o), this
    },
    ellipse: function(e, t, n, r, i, o, a, s)
    {
        var c = this.currentPoint.x,
            u = this.currentPoint.y;
        return this.absellipse(e + c, t + u, n, r, i, o, a, s), this
    },
    absellipse: function(e, t, n, r, i, o, a, s)
    {
        var c = new Kd(e, t, n, r, i, o, a, s);
        if (this.curves.length > 0)
        {
            var u = c.getPoint(0);
            u.equals(this.currentPoint) || this.lineTo(u.x, u.y)
        }
        this.curves.push(c);
        var l = c.getPoint(1);
        return this.currentPoint.copy(l), this
    },
    copy: function(e)
    {
        return dp.prototype.copy.call(this, e), this.currentPoint.copy(e.currentPoint), this
    },
    toJSON: function()
    {
        var e = dp.prototype.toJSON.call(this);
        return e.currentPoint = this.currentPoint.toArray(), e
    },
    fromJSON: function(e)
    {
        return dp.prototype.fromJSON.call(this, e), this.currentPoint.fromArray(e.currentPoint), this
    }
}), mp.prototype = Object.assign(Object.create(pp.prototype),
{
    constructor: mp,
    getPointsHoles: function(e)
    {
        for (var t = [], n = 0, r = this.holes.length; n < r; n++) t[n] = this.holes[n].getPoints(e);
        return t
    },
    extractPoints: function(e)
    {
        return {
            shape: this.getPoints(e),
            holes: this.getPointsHoles(e)
        }
    },
    copy: function(e)
    {
        pp.prototype.copy.call(this, e), this.holes = [];
        for (var t = 0, n = e.holes.length; t < n; t++)
        {
            var r = e.holes[t];
            this.holes.push(r.clone())
        }
        return this
    },
    toJSON: function()
    {
        var e = pp.prototype.toJSON.call(this);
        e.uuid = this.uuid, e.holes = [];
        for (var t = 0, n = this.holes.length; t < n; t++)
        {
            var r = this.holes[t];
            e.holes.push(r.toJSON())
        }
        return e
    },
    fromJSON: function(e)
    {
        pp.prototype.fromJSON.call(this, e), this.uuid = e.uuid, this.holes = [];
        for (var t = 0, n = e.holes.length; t < n; t++)
        {
            var r = e.holes[t];
            this.holes.push((new pp).fromJSON(r))
        }
        return this
    }
}), vp.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: vp,
    isLight: !0,
    copy: function(e)
    {
        return Ha.prototype.copy.call(this, e), this.color.copy(e.color), this.intensity = e.intensity, this
    },
    toJSON: function(e)
    {
        var t = Ha.prototype.toJSON.call(this, e);
        return t.object.color = this.color.getHex(), t.object.intensity = this.intensity, void 0 !== this.groundColor && (t.object.groundColor = this.groundColor.getHex()), void 0 !== this.distance && (t.object.distance = this.distance), void 0 !== this.angle && (t.object.angle = this.angle), void 0 !== this.decay && (t.object.decay = this.decay), void 0 !== this.penumbra && (t.object.penumbra = this.penumbra), void 0 !== this.shadow && (t.object.shadow = this.shadow.toJSON()), t
    }
}), gp.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: gp,
    isHemisphereLight: !0,
    copy: function(e)
    {
        return vp.prototype.copy.call(this, e), this.groundColor.copy(e.groundColor), this
    }
}), Object.assign(yp.prototype,
{
    _projScreenMatrix: new Sa,
    _lightPositionWorld: new sa,
    _lookTarget: new sa,
    getViewportCount: function()
    {
        return this._viewportCount
    },
    getFrustum: function()
    {
        return this._frustum
    },
    updateMatrices: function(e)
    {
        var t = this.camera,
            n = this.matrix,
            r = this._projScreenMatrix,
            i = this._lookTarget,
            o = this._lightPositionWorld;
        o.setFromMatrixPosition(e.matrixWorld), t.position.copy(o), i.setFromMatrixPosition(e.target.matrixWorld), t.lookAt(i), t.updateMatrixWorld(), r.multiplyMatrices(t.projectionMatrix, t.matrixWorldInverse), this._frustum.setFromMatrix(r), n.set(.5, 0, 0, .5, 0, .5, 0, .5, 0, 0, .5, .5, 0, 0, 0, 1), n.multiply(t.projectionMatrix), n.multiply(t.matrixWorldInverse)
    },
    getViewport: function(e)
    {
        return this._viewports[e]
    },
    getFrameExtents: function()
    {
        return this._frameExtents
    },
    copy: function(e)
    {
        return this.camera = e.camera.clone(), this.bias = e.bias, this.radius = e.radius, this.mapSize.copy(e.mapSize), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    toJSON: function()
    {
        var e = {};
        return 0 !== this.bias && (e.bias = this.bias), 1 !== this.radius && (e.radius = this.radius), 512 === this.mapSize.x && 512 === this.mapSize.y || (e.mapSize = this.mapSize.toArray()), e.camera = this.camera.toJSON(!1).object, delete e.camera.matrix, e
    }
}), bp.prototype = Object.assign(Object.create(yp.prototype),
{
    constructor: bp,
    isSpotLightShadow: !0,
    updateMatrices: function(e)
    {
        var t = this.camera,
            n = 2 * na.RAD2DEG * e.angle,
            r = this.mapSize.width / this.mapSize.height,
            i = e.distance || t.far;
        n === t.fov && r === t.aspect && i === t.far || (t.fov = n, t.aspect = r, t.far = i, t.updateProjectionMatrix()), yp.prototype.updateMatrices.call(this, e)
    }
}), wp.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: wp,
    isSpotLight: !0,
    copy: function(e)
    {
        return vp.prototype.copy.call(this, e), this.distance = e.distance, this.angle = e.angle, this.penumbra = e.penumbra, this.decay = e.decay, this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
    }
}), _p.prototype = Object.assign(Object.create(yp.prototype),
{
    constructor: _p,
    isPointLightShadow: !0,
    updateMatrices: function(e, t)
    {
        void 0 === t && (t = 0);
        var n = this.camera,
            r = this.matrix,
            i = this._lightPositionWorld,
            o = this._lookTarget,
            a = this._projScreenMatrix;
        i.setFromMatrixPosition(e.matrixWorld), n.position.copy(i), o.copy(n.position), o.add(this._cubeDirections[t]), n.up.copy(this._cubeUps[t]), n.lookAt(o), n.updateMatrixWorld(), r.makeTranslation(-i.x, -i.y, -i.z), a.multiplyMatrices(n.projectionMatrix, n.matrixWorldInverse), this._frustum.setFromMatrix(a)
    }
}), xp.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: xp,
    isPointLight: !0,
    copy: function(e)
    {
        return vp.prototype.copy.call(this, e), this.distance = e.distance, this.decay = e.decay, this.shadow = e.shadow.clone(), this
    }
}), Ep.prototype = Object.assign(Object.create(jc.prototype),
{
    constructor: Ep,
    isOrthographicCamera: !0,
    copy: function(e, t)
    {
        return jc.prototype.copy.call(this, e, t), this.left = e.left, this.right = e.right, this.top = e.top, this.bottom = e.bottom, this.near = e.near, this.far = e.far, this.zoom = e.zoom, this.view = null === e.view ? null : Object.assign(
        {}, e.view), this
    },
    setViewOffset: function(e, t, n, r, i, o)
    {
        null === this.view && (this.view = {
            enabled: !0,
            fullWidth: 1,
            fullHeight: 1,
            offsetX: 0,
            offsetY: 0,
            width: 1,
            height: 1
        }), this.view.enabled = !0, this.view.fullWidth = e, this.view.fullHeight = t, this.view.offsetX = n, this.view.offsetY = r, this.view.width = i, this.view.height = o, this.updateProjectionMatrix()
    },
    clearViewOffset: function()
    {
        null !== this.view && (this.view.enabled = !1), this.updateProjectionMatrix()
    },
    updateProjectionMatrix: function()
    {
        var e = (this.right - this.left) / (2 * this.zoom),
            t = (this.top - this.bottom) / (2 * this.zoom),
            n = (this.right + this.left) / 2,
            r = (this.top + this.bottom) / 2,
            i = n - e,
            o = n + e,
            a = r + t,
            s = r - t;
        if (null !== this.view && this.view.enabled)
        {
            var c = this.zoom / (this.view.width / this.view.fullWidth),
                u = this.zoom / (this.view.height / this.view.fullHeight),
                l = (this.right - this.left) / this.view.width,
                f = (this.top - this.bottom) / this.view.height;
            o = (i += l * (this.view.offsetX / c)) + l * (this.view.width / c), s = (a -= f * (this.view.offsetY / u)) - f * (this.view.height / u)
        }
        this.projectionMatrix.makeOrthographic(i, o, a, s, this.near, this.far), this.projectionMatrixInverse.getInverse(this.projectionMatrix)
    },
    toJSON: function(e)
    {
        var t = Ha.prototype.toJSON.call(this, e);
        return t.object.zoom = this.zoom, t.object.left = this.left, t.object.right = this.right, t.object.top = this.top, t.object.bottom = this.bottom, t.object.near = this.near, t.object.far = this.far, null !== this.view && (t.object.view = Object.assign(
        {}, this.view)), t
    }
}), Sp.prototype = Object.assign(Object.create(yp.prototype),
{
    constructor: Sp,
    isDirectionalLightShadow: !0,
    updateMatrices: function(e)
    {
        yp.prototype.updateMatrices.call(this, e)
    }
}), Mp.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: Mp,
    isDirectionalLight: !0,
    copy: function(e)
    {
        return vp.prototype.copy.call(this, e), this.target = e.target.clone(), this.shadow = e.shadow.clone(), this
    }
}), Tp.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: Tp,
    isAmbientLight: !0
}), kp.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: kp,
    isRectAreaLight: !0,
    copy: function(e)
    {
        return vp.prototype.copy.call(this, e), this.width = e.width, this.height = e.height, this
    },
    toJSON: function(e)
    {
        var t = vp.prototype.toJSON.call(this, e);
        return t.object.width = this.width, t.object.height = this.height, t
    }
}), Ap.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Ap,
    load: function(e, t, n, r)
    {
        var i = this,
            o = new Dd(i.manager);
        o.setPath(i.path), o.load(e, (function(e)
        {
            t(i.parse(JSON.parse(e)))
        }), n, r)
    },
    parse: function(e)
    {
        var t = this.textures;

        function n(e)
        {
            return void 0 === t[e] && console.warn("THREE.MaterialLoader: Undefined texture", e), t[e]
        }
        var r = new bd[e.type];
        if (void 0 !== e.uuid && (r.uuid = e.uuid), void 0 !== e.name && (r.name = e.name), void 0 !== e.color && r.color.setHex(e.color), void 0 !== e.roughness && (r.roughness = e.roughness), void 0 !== e.metalness && (r.metalness = e.metalness), void 0 !== e.sheen && (r.sheen = (new Is).setHex(e.sheen)), void 0 !== e.emissive && r.emissive.setHex(e.emissive), void 0 !== e.specular && r.specular.setHex(e.specular), void 0 !== e.shininess && (r.shininess = e.shininess), void 0 !== e.clearcoat && (r.clearcoat = e.clearcoat), void 0 !== e.clearcoatRoughness && (r.clearcoatRoughness = e.clearcoatRoughness), void 0 !== e.vertexColors && (r.vertexColors = e.vertexColors), void 0 !== e.fog && (r.fog = e.fog), void 0 !== e.flatShading && (r.flatShading = e.flatShading), void 0 !== e.blending && (r.blending = e.blending), void 0 !== e.combine && (r.combine = e.combine), void 0 !== e.side && (r.side = e.side), void 0 !== e.opacity && (r.opacity = e.opacity), void 0 !== e.transparent && (r.transparent = e.transparent), void 0 !== e.alphaTest && (r.alphaTest = e.alphaTest), void 0 !== e.depthTest && (r.depthTest = e.depthTest), void 0 !== e.depthWrite && (r.depthWrite = e.depthWrite), void 0 !== e.colorWrite && (r.colorWrite = e.colorWrite), void 0 !== e.stencilWrite && (r.stencilWrite = e.stencilWrite), void 0 !== e.stencilWriteMask && (r.stencilWriteMask = e.stencilWriteMask), void 0 !== e.stencilFunc && (r.stencilFunc = e.stencilFunc), void 0 !== e.stencilRef && (r.stencilRef = e.stencilRef), void 0 !== e.stencilFuncMask && (r.stencilFuncMask = e.stencilFuncMask), void 0 !== e.stencilFail && (r.stencilFail = e.stencilFail), void 0 !== e.stencilZFail && (r.stencilZFail = e.stencilZFail), void 0 !== e.stencilZPass && (r.stencilZPass = e.stencilZPass), void 0 !== e.wireframe && (r.wireframe = e.wireframe), void 0 !== e.wireframeLinewidth && (r.wireframeLinewidth = e.wireframeLinewidth), void 0 !== e.wireframeLinecap && (r.wireframeLinecap = e.wireframeLinecap), void 0 !== e.wireframeLinejoin && (r.wireframeLinejoin = e.wireframeLinejoin), void 0 !== e.rotation && (r.rotation = e.rotation), 1 !== e.linewidth && (r.linewidth = e.linewidth), void 0 !== e.dashSize && (r.dashSize = e.dashSize), void 0 !== e.gapSize && (r.gapSize = e.gapSize), void 0 !== e.scale && (r.scale = e.scale), void 0 !== e.polygonOffset && (r.polygonOffset = e.polygonOffset), void 0 !== e.polygonOffsetFactor && (r.polygonOffsetFactor = e.polygonOffsetFactor), void 0 !== e.polygonOffsetUnits && (r.polygonOffsetUnits = e.polygonOffsetUnits), void 0 !== e.skinning && (r.skinning = e.skinning), void 0 !== e.morphTargets && (r.morphTargets = e.morphTargets), void 0 !== e.morphNormals && (r.morphNormals = e.morphNormals), void 0 !== e.dithering && (r.dithering = e.dithering), void 0 !== e.visible && (r.visible = e.visible), void 0 !== e.toneMapped && (r.toneMapped = e.toneMapped), void 0 !== e.userData && (r.userData = e.userData), void 0 !== e.uniforms)
            for (var i in e.uniforms)
            {
                var o = e.uniforms[i];
                switch (r.uniforms[i] = {}, o.type)
                {
                    case "t":
                        r.uniforms[i].value = n(o.value);
                        break;
                    case "c":
                        r.uniforms[i].value = (new Is).setHex(o.value);
                        break;
                    case "v2":
                        r.uniforms[i].value = (new ra).fromArray(o.value);
                        break;
                    case "v3":
                        r.uniforms[i].value = (new sa).fromArray(o.value);
                        break;
                    case "v4":
                        r.uniforms[i].value = (new pa).fromArray(o.value);
                        break;
                    case "m3":
                        r.uniforms[i].value = (new la).fromArray(o.value);
                    case "m4":
                        r.uniforms[i].value = (new Sa).fromArray(o.value);
                        break;
                    default:
                        r.uniforms[i].value = o.value
                }
            }
        if (void 0 !== e.defines && (r.defines = e.defines), void 0 !== e.vertexShader && (r.vertexShader = e.vertexShader), void 0 !== e.fragmentShader && (r.fragmentShader = e.fragmentShader), void 0 !== e.extensions)
            for (var a in e.extensions) r.extensions[a] = e.extensions[a];
        if (void 0 !== e.shading && (r.flatShading = 1 === e.shading), void 0 !== e.size && (r.size = e.size), void 0 !== e.sizeAttenuation && (r.sizeAttenuation = e.sizeAttenuation), void 0 !== e.map && (r.map = n(e.map)), void 0 !== e.matcap && (r.matcap = n(e.matcap)), void 0 !== e.alphaMap && (r.alphaMap = n(e.alphaMap), r.transparent = !0), void 0 !== e.bumpMap && (r.bumpMap = n(e.bumpMap)), void 0 !== e.bumpScale && (r.bumpScale = e.bumpScale), void 0 !== e.normalMap && (r.normalMap = n(e.normalMap)), void 0 !== e.normalMapType && (r.normalMapType = e.normalMapType), void 0 !== e.normalScale)
        {
            var s = e.normalScale;
            !1 === Array.isArray(s) && (s = [s, s]), r.normalScale = (new ra).fromArray(s)
        }
        return void 0 !== e.displacementMap && (r.displacementMap = n(e.displacementMap)), void 0 !== e.displacementScale && (r.displacementScale = e.displacementScale), void 0 !== e.displacementBias && (r.displacementBias = e.displacementBias), void 0 !== e.roughnessMap && (r.roughnessMap = n(e.roughnessMap)), void 0 !== e.metalnessMap && (r.metalnessMap = n(e.metalnessMap)), void 0 !== e.emissiveMap && (r.emissiveMap = n(e.emissiveMap)), void 0 !== e.emissiveIntensity && (r.emissiveIntensity = e.emissiveIntensity), void 0 !== e.specularMap && (r.specularMap = n(e.specularMap)), void 0 !== e.envMap && (r.envMap = n(e.envMap)), void 0 !== e.envMapIntensity && (r.envMapIntensity = e.envMapIntensity), void 0 !== e.reflectivity && (r.reflectivity = e.reflectivity), void 0 !== e.refractionRatio && (r.refractionRatio = e.refractionRatio), void 0 !== e.lightMap && (r.lightMap = n(e.lightMap)), void 0 !== e.lightMapIntensity && (r.lightMapIntensity = e.lightMapIntensity), void 0 !== e.aoMap && (r.aoMap = n(e.aoMap)), void 0 !== e.aoMapIntensity && (r.aoMapIntensity = e.aoMapIntensity), void 0 !== e.gradientMap && (r.gradientMap = n(e.gradientMap)), void 0 !== e.clearcoatNormalMap && (r.clearcoatNormalMap = n(e.clearcoatNormalMap)), void 0 !== e.clearcoatNormalScale && (r.clearcoatNormalScale = (new ra).fromArray(e.clearcoatNormalScale)), r
    },
    setTextures: function(e)
    {
        return this.textures = e, this
    }
});
var Cp = function(e)
{
    var t = e.lastIndexOf("/");
    return -1 === t ? "./" : e.substr(0, t + 1)
};

function Op()
{
    sc.call(this), this.type = "InstancedBufferGeometry", this.maxInstancedCount = void 0
}

function Pp(e, t, n, r)
{
    "number" == typeof n && (r = n, n = !1, console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")), Hs.call(this, e, t, n), this.meshPerAttribute = r || 1
}

function Rp(e)
{
    Fd.call(this, e)
}
Op.prototype = Object.assign(Object.create(sc.prototype),
{
    constructor: Op,
    isInstancedBufferGeometry: !0,
    copy: function(e)
    {
        return sc.prototype.copy.call(this, e), this.maxInstancedCount = e.maxInstancedCount, this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    toJSON: function()
    {
        var e = sc.prototype.toJSON.call(this);
        return e.maxInstancedCount = this.maxInstancedCount, e.isInstancedBufferGeometry = !0, e
    }
}), Pp.prototype = Object.assign(Object.create(Hs.prototype),
{
    constructor: Pp,
    isInstancedBufferAttribute: !0,
    copy: function(e)
    {
        return Hs.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
    },
    toJSON: function()
    {
        var e = Hs.prototype.toJSON.call(this);
        return e.meshPerAttribute = this.meshPerAttribute, e.isInstancedBufferAttribute = !0, e
    }
}), Rp.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Rp,
    load: function(e, t, n, r)
    {
        var i = this,
            o = new Dd(i.manager);
        o.setPath(i.path), o.load(e, (function(e)
        {
            t(i.parse(JSON.parse(e)))
        }), n, r)
    },
    parse: function(e)
    {
        var t = e.isInstancedBufferGeometry ? new Op : new sc,
            n = e.data.index;
        if (void 0 !== n)
        {
            var r = new Ip[n.type](n.array);
            t.setIndex(new Hs(r, 1))
        }
        var i = e.data.attributes;
        for (var o in i)
        {
            var a = i[o],
                s = (r = new Ip[a.type](a.array), new(a.isInstancedBufferAttribute ? Pp : Hs)(r, a.itemSize, a.normalized));
            void 0 !== a.name && (s.name = a.name), t.setAttribute(o, s)
        }
        var c = e.data.morphAttributes;
        if (c)
            for (var o in c)
            {
                for (var u = c[o], l = [], f = 0, h = u.length; f < h; f++)
                {
                    a = u[f], s = new Hs(r = new Ip[a.type](a.array), a.itemSize, a.normalized);
                    void 0 !== a.name && (s.name = a.name), l.push(s)
                }
                t.morphAttributes[o] = l
            }
        e.data.morphTargetsRelative && (t.morphTargetsRelative = !0);
        var d = e.data.groups || e.data.drawcalls || e.data.offsets;
        if (void 0 !== d)
        {
            f = 0;
            for (var p = d.length; f !== p; ++f)
            {
                var m = d[f];
                t.addGroup(m.start, m.count, m.materialIndex)
            }
        }
        var v = e.data.boundingSphere;
        if (void 0 !== v)
        {
            var g = new sa;
            void 0 !== v.center && g.fromArray(v.center), t.boundingSphere = new as(g, v.radius)
        }
        return e.name && (t.name = e.name), e.userData && (t.userData = e.userData), t
    }
});
var Ip = {
    Int8Array: Int8Array,
    Uint8Array: Uint8Array,
    Uint8ClampedArray: "undefined" != typeof Uint8ClampedArray ? Uint8ClampedArray : Uint8Array,
    Int16Array: Int16Array,
    Uint16Array: Uint16Array,
    Int32Array: Int32Array,
    Uint32Array: Uint32Array,
    Float32Array: Float32Array,
    Float64Array: Float64Array
};

function Np(e)
{
    Fd.call(this, e)
}
Np.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Np,
    load: function(e, t, n, r)
    {
        var i = this,
            o = "" === this.path ? Cp(e) : this.path;
        this.resourcePath = this.resourcePath || o;
        var a = new Dd(i.manager);
        a.setPath(this.path), a.load(e, (function(n)
        {
            var o = null;
            try
            {
                o = JSON.parse(n)
            }
            catch (t)
            {
                return void 0 !== r && r(t), void console.error("THREE:ObjectLoader: Can't parse " + e + ".", t.message)
            }
            var a = o.metadata;
            void 0 !== a && void 0 !== a.type && "geometry" !== a.type.toLowerCase() ? i.parse(o, t) : console.error("THREE.ObjectLoader: Can't load " + e)
        }), n, r)
    },
    parse: function(e, t)
    {
        var n = this.parseShape(e.shapes),
            r = this.parseGeometries(e.geometries, n),
            i = this.parseImages(e.images, (function()
            {
                void 0 !== t && t(s)
            })),
            o = this.parseTextures(e.textures, i),
            a = this.parseMaterials(e.materials, o),
            s = this.parseObject(e.object, r, a);
        return e.animations && (s.animations = this.parseAnimations(e.animations)), void 0 !== e.images && 0 !== e.images.length || void 0 !== t && t(s), s
    },
    parseShape: function(e)
    {
        var t = {};
        if (void 0 !== e)
            for (var n = 0, r = e.length; n < r; n++)
            {
                var i = (new mp).fromJSON(e[n]);
                t[i.uuid] = i
            }
        return t
    },
    parseGeometries: function(e, t)
    {
        var n = {};
        if (void 0 !== e)
            for (var r = new Rp, i = 0, o = e.length; i < o; i++)
            {
                var a, s = e[i];
                switch (s.type)
                {
                    case "PlaneGeometry":
                    case "PlaneBufferGeometry":
                        a = new cd[s.type](s.width, s.height, s.widthSegments, s.heightSegments);
                        break;
                    case "BoxGeometry":
                    case "BoxBufferGeometry":
                    case "CubeGeometry":
                        a = new cd[s.type](s.width, s.height, s.depth, s.widthSegments, s.heightSegments, s.depthSegments);
                        break;
                    case "CircleGeometry":
                    case "CircleBufferGeometry":
                        a = new cd[s.type](s.radius, s.segments, s.thetaStart, s.thetaLength);
                        break;
                    case "CylinderGeometry":
                    case "CylinderBufferGeometry":
                        a = new cd[s.type](s.radiusTop, s.radiusBottom, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                        break;
                    case "ConeGeometry":
                    case "ConeBufferGeometry":
                        a = new cd[s.type](s.radius, s.height, s.radialSegments, s.heightSegments, s.openEnded, s.thetaStart, s.thetaLength);
                        break;
                    case "SphereGeometry":
                    case "SphereBufferGeometry":
                        a = new cd[s.type](s.radius, s.widthSegments, s.heightSegments, s.phiStart, s.phiLength, s.thetaStart, s.thetaLength);
                        break;
                    case "DodecahedronGeometry":
                    case "DodecahedronBufferGeometry":
                    case "IcosahedronGeometry":
                    case "IcosahedronBufferGeometry":
                    case "OctahedronGeometry":
                    case "OctahedronBufferGeometry":
                    case "TetrahedronGeometry":
                    case "TetrahedronBufferGeometry":
                        a = new cd[s.type](s.radius, s.detail);
                        break;
                    case "RingGeometry":
                    case "RingBufferGeometry":
                        a = new cd[s.type](s.innerRadius, s.outerRadius, s.thetaSegments, s.phiSegments, s.thetaStart, s.thetaLength);
                        break;
                    case "TorusGeometry":
                    case "TorusBufferGeometry":
                        a = new cd[s.type](s.radius, s.tube, s.radialSegments, s.tubularSegments, s.arc);
                        break;
                    case "TorusKnotGeometry":
                    case "TorusKnotBufferGeometry":
                        a = new cd[s.type](s.radius, s.tube, s.tubularSegments, s.radialSegments, s.p, s.q);
                        break;
                    case "TubeGeometry":
                    case "TubeBufferGeometry":
                        a = new cd[s.type]((new hp[s.path.type]).fromJSON(s.path), s.tubularSegments, s.radius, s.radialSegments, s.closed);
                        break;
                    case "LatheGeometry":
                    case "LatheBufferGeometry":
                        a = new cd[s.type](s.points, s.segments, s.phiStart, s.phiLength);
                        break;
                    case "PolyhedronGeometry":
                    case "PolyhedronBufferGeometry":
                        a = new cd[s.type](s.vertices, s.indices, s.radius, s.details);
                        break;
                    case "ShapeGeometry":
                    case "ShapeBufferGeometry":
                        for (var c = [], u = 0, l = s.shapes.length; u < l; u++)
                        {
                            var f = t[s.shapes[u]];
                            c.push(f)
                        }
                        a = new cd[s.type](c, s.curveSegments);
                        break;
                    case "ExtrudeGeometry":
                    case "ExtrudeBufferGeometry":
                        for (c = [], u = 0, l = s.shapes.length; u < l; u++)
                        {
                            f = t[s.shapes[u]];
                            c.push(f)
                        }
                        var h = s.options.extrudePath;
                        void 0 !== h && (s.options.extrudePath = (new hp[h.type]).fromJSON(h)), a = new cd[s.type](c, s.options);
                        break;
                    case "BufferGeometry":
                    case "InstancedBufferGeometry":
                        a = r.parse(s);
                        break;
                    case "Geometry":
                        if ("THREE" in window && "LegacyJSONLoader" in THREE) a = (new THREE.LegacyJSONLoader).parse(s, this.resourcePath).geometry;
                        else console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type "Geometry".');
                        break;
                    default:
                        console.warn('THREE.ObjectLoader: Unsupported geometry type "' + s.type + '"');
                        continue
                }
                a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), !0 === a.isBufferGeometry && void 0 !== s.userData && (a.userData = s.userData), n[s.uuid] = a
            }
        return n
    },
    parseMaterials: function(e, t)
    {
        var n = {},
            r = {};
        if (void 0 !== e)
        {
            var i = new Ap;
            i.setTextures(t);
            for (var o = 0, a = e.length; o < a; o++)
            {
                var s = e[o];
                if ("MultiMaterial" === s.type)
                {
                    for (var c = [], u = 0; u < s.materials.length; u++)
                    {
                        var l = s.materials[u];
                        void 0 === n[l.uuid] && (n[l.uuid] = i.parse(l)), c.push(n[l.uuid])
                    }
                    r[s.uuid] = c
                }
                else void 0 === n[s.uuid] && (n[s.uuid] = i.parse(s)), r[s.uuid] = n[s.uuid]
            }
        }
        return r
    },
    parseAnimations: function(e)
    {
        for (var t = [], n = 0; n < e.length; n++)
        {
            var r = e[n],
                i = Id.parse(r);
            void 0 !== r.uuid && (i.uuid = r.uuid), t.push(i)
        }
        return t
    },
    parseImages: function(e, t)
    {
        var n = this,
            r = {};

        function i(e)
        {
            return n.manager.itemStart(e), o.load(e, (function()
            {
                n.manager.itemEnd(e)
            }), void 0, (function()
            {
                n.manager.itemError(e), n.manager.itemEnd(e)
            }))
        }
        if (void 0 !== e && e.length > 0)
        {
            var o = new Wd(new Bd(t));
            o.setCrossOrigin(this.crossOrigin);
            for (var a = 0, s = e.length; a < s; a++)
            {
                var c = e[a],
                    u = c.url;
                if (Array.isArray(u))
                {
                    r[c.uuid] = [];
                    for (var l = 0, f = u.length; l < f; l++)
                    {
                        var h = u[l],
                            d = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(h) ? h : n.resourcePath + h;
                        r[c.uuid].push(i(d))
                    }
                }
                else
                {
                    d = /^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url) ? c.url : n.resourcePath + c.url;
                    r[c.uuid] = i(d)
                }
            }
        }
        return r
    },
    parseTextures: function(e, t)
    {
        function n(e, t)
        {
            return "number" == typeof e ? e : (console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.", e), t[e])
        }
        var r = {};
        if (void 0 !== e)
            for (var i = 0, o = e.length; i < o; i++)
            {
                var a, s = e[i];
                void 0 === s.image && console.warn('THREE.ObjectLoader: No "image" specified for', s.uuid), void 0 === t[s.image] && console.warn("THREE.ObjectLoader: Undefined image", s.image), (a = Array.isArray(t[s.image]) ? new uu(t[s.image]) : new da(t[s.image])).needsUpdate = !0, a.uuid = s.uuid, void 0 !== s.name && (a.name = s.name), void 0 !== s.mapping && (a.mapping = n(s.mapping, Bp)), void 0 !== s.offset && a.offset.fromArray(s.offset), void 0 !== s.repeat && a.repeat.fromArray(s.repeat), void 0 !== s.center && a.center.fromArray(s.center), void 0 !== s.rotation && (a.rotation = s.rotation), void 0 !== s.wrap && (a.wrapS = n(s.wrap[0], jp), a.wrapT = n(s.wrap[1], jp)), void 0 !== s.format && (a.format = s.format), void 0 !== s.type && (a.type = s.type), void 0 !== s.encoding && (a.encoding = s.encoding), void 0 !== s.minFilter && (a.minFilter = n(s.minFilter, Fp)), void 0 !== s.magFilter && (a.magFilter = n(s.magFilter, Fp)), void 0 !== s.anisotropy && (a.anisotropy = s.anisotropy), void 0 !== s.flipY && (a.flipY = s.flipY), void 0 !== s.premultiplyAlpha && (a.premultiplyAlpha = s.premultiplyAlpha), void 0 !== s.unpackAlignment && (a.unpackAlignment = s.unpackAlignment), r[s.uuid] = a
            }
        return r
    },
    parseObject: function(e, t, n)
    {
        var r;

        function i(e)
        {
            return void 0 === t[e] && console.warn("THREE.ObjectLoader: Undefined geometry", e), t[e]
        }

        function o(e)
        {
            if (void 0 !== e)
            {
                if (Array.isArray(e))
                {
                    for (var t = [], r = 0, i = e.length; r < i; r++)
                    {
                        var o = e[r];
                        void 0 === n[o] && console.warn("THREE.ObjectLoader: Undefined material", o), t.push(n[o])
                    }
                    return t
                }
                return void 0 === n[e] && console.warn("THREE.ObjectLoader: Undefined material", e), n[e]
            }
        }
        switch (e.type)
        {
            case "Scene":
                r = new Va, void 0 !== e.background && Number.isInteger(e.background) && (r.background = new Is(e.background)), void 0 !== e.fog && ("Fog" === e.fog.type ? r.fog = new Kl(e.fog.color, e.fog.near, e.fog.far) : "FogExp2" === e.fog.type && (r.fog = new $l(e.fog.color, e.fog.density)));
                break;
            case "PerspectiveCamera":
                r = new Fc(e.fov, e.aspect, e.near, e.far), void 0 !== e.focus && (r.focus = e.focus), void 0 !== e.zoom && (r.zoom = e.zoom), void 0 !== e.filmGauge && (r.filmGauge = e.filmGauge), void 0 !== e.filmOffset && (r.filmOffset = e.filmOffset), void 0 !== e.view && (r.view = Object.assign(
                {}, e.view));
                break;
            case "OrthographicCamera":
                r = new Ep(e.left, e.right, e.top, e.bottom, e.near, e.far), void 0 !== e.zoom && (r.zoom = e.zoom), void 0 !== e.view && (r.view = Object.assign(
                {}, e.view));
                break;
            case "AmbientLight":
                r = new Tp(e.color, e.intensity);
                break;
            case "DirectionalLight":
                r = new Mp(e.color, e.intensity);
                break;
            case "PointLight":
                r = new xp(e.color, e.intensity, e.distance, e.decay);
                break;
            case "RectAreaLight":
                r = new kp(e.color, e.intensity, e.width, e.height);
                break;
            case "SpotLight":
                r = new wp(e.color, e.intensity, e.distance, e.angle, e.penumbra, e.decay);
                break;
            case "HemisphereLight":
                r = new gp(e.color, e.groundColor, e.intensity);
                break;
            case "SkinnedMesh":
                console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.");
            case "Mesh":
                var a = i(e.geometry),
                    s = o(e.material);
                r = a.bones && a.bones.length > 0 ? new yf(a, s) : new Mc(a, s);
                break;
            case "InstancedMesh":
                a = i(e.geometry), s = o(e.material);
                var c = e.count,
                    u = e.instanceMatrix;
                (r = new kf(a, s, c)).instanceMatrix = new Hs(new Float32Array(u.array), 16);
                break;
            case "LOD":
                r = new gf;
                break;
            case "Line":
                r = new Nf(i(e.geometry), o(e.material), e.mode);
                break;
            case "LineLoop":
                r = new Ff(i(e.geometry), o(e.material));
                break;
            case "LineSegments":
                r = new jf(i(e.geometry), o(e.material));
                break;
            case "PointCloud":
            case "Points":
                r = new Wf(i(e.geometry), o(e.material));
                break;
            case "Sprite":
                r = new df(o(e.material));
                break;
            case "Group":
                r = new Wl;
                break;
            default:
                r = new Ha
        }
        if (r.uuid = e.uuid, void 0 !== e.name && (r.name = e.name), void 0 !== e.matrix ? (r.matrix.fromArray(e.matrix), void 0 !== e.matrixAutoUpdate && (r.matrixAutoUpdate = e.matrixAutoUpdate), r.matrixAutoUpdate && r.matrix.decompose(r.position, r.quaternion, r.scale)) : (void 0 !== e.position && r.position.fromArray(e.position), void 0 !== e.rotation && r.rotation.fromArray(e.rotation), void 0 !== e.quaternion && r.quaternion.fromArray(e.quaternion), void 0 !== e.scale && r.scale.fromArray(e.scale)), void 0 !== e.castShadow && (r.castShadow = e.castShadow), void 0 !== e.receiveShadow && (r.receiveShadow = e.receiveShadow), e.shadow && (void 0 !== e.shadow.bias && (r.shadow.bias = e.shadow.bias), void 0 !== e.shadow.radius && (r.shadow.radius = e.shadow.radius), void 0 !== e.shadow.mapSize && r.shadow.mapSize.fromArray(e.shadow.mapSize), void 0 !== e.shadow.camera && (r.shadow.camera = this.parseObject(e.shadow.camera))), void 0 !== e.visible && (r.visible = e.visible), void 0 !== e.frustumCulled && (r.frustumCulled = e.frustumCulled), void 0 !== e.renderOrder && (r.renderOrder = e.renderOrder), void 0 !== e.userData && (r.userData = e.userData), void 0 !== e.layers && (r.layers.mask = e.layers), void 0 !== e.children)
            for (var l = e.children, f = 0; f < l.length; f++) r.add(this.parseObject(l[f], t, n));
        if ("LOD" === e.type)
        {
            void 0 !== e.autoUpdate && (r.autoUpdate = e.autoUpdate);
            for (var h = e.levels, d = 0; d < h.length; d++)
            {
                var p = h[d],
                    m = r.getObjectByProperty("uuid", p.object);
                void 0 !== m && r.addLevel(m, p.distance)
            }
        }
        return r
    }
});
var Lp, Bp = {
        UVMapping: 300,
        CubeReflectionMapping: 301,
        CubeRefractionMapping: 302,
        EquirectangularReflectionMapping: 303,
        EquirectangularRefractionMapping: 304,
        SphericalReflectionMapping: 305,
        CubeUVReflectionMapping: 306,
        CubeUVRefractionMapping: 307
    },
    jp = {
        RepeatWrapping: 1e3,
        ClampToEdgeWrapping: 1001,
        MirroredRepeatWrapping: 1002
    },
    Fp = {
        NearestFilter: 1003,
        NearestMipmapNearestFilter: 1004,
        NearestMipmapLinearFilter: 1005,
        LinearFilter: 1006,
        LinearMipmapNearestFilter: 1007,
        LinearMipmapLinearFilter: 1008
    };

function Up(e)
{
    "undefined" == typeof createImageBitmap && console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."), "undefined" == typeof fetch && console.warn("THREE.ImageBitmapLoader: fetch() not supported."), Fd.call(this, e), this.options = void 0
}

function Dp()
{
    this.type = "ShapePath", this.color = new Is, this.subPaths = [], this.currentPath = null
}

function zp(e)
{
    this.type = "Font", this.data = e
}

function Hp(e, t, n, r, i)
{
    var o = i.glyphs[e] || i.glyphs["?"];
    if (o)
    {
        var a, s, c, u, l, f, h, d, p = new Dp;
        if (o.o)
            for (var m = o._cachedOutline || (o._cachedOutline = o.o.split(" ")), v = 0, g = m.length; v < g;)
            {
                switch (m[v++])
                {
                    case "m":
                        a = m[v++] * t + n, s = m[v++] * t + r, p.moveTo(a, s);
                        break;
                    case "l":
                        a = m[v++] * t + n, s = m[v++] * t + r, p.lineTo(a, s);
                        break;
                    case "q":
                        c = m[v++] * t + n, u = m[v++] * t + r, l = m[v++] * t + n, f = m[v++] * t + r, p.quadraticCurveTo(l, f, c, u);
                        break;
                    case "b":
                        c = m[v++] * t + n, u = m[v++] * t + r, l = m[v++] * t + n, f = m[v++] * t + r, h = m[v++] * t + n, d = m[v++] * t + r, p.bezierCurveTo(l, f, h, d, c, u)
                }
            }
        return {
            offsetX: o.ha * t,
            path: p
        }
    }
    console.error('THREE.Font: character "' + e + '" does not exists in font family ' + i.familyName + ".")
}

function Vp(e)
{
    Fd.call(this, e)
}
Up.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Up,
    setOptions: function(e)
    {
        return this.options = e, this
    },
    load: function(e, t, n, r)
    {
        void 0 === e && (e = ""), void 0 !== this.path && (e = this.path + e), e = this.manager.resolveURL(e);
        var i = this,
            o = Ld.get(e);
        if (void 0 !== o) return i.manager.itemStart(e), setTimeout((function()
        {
            t && t(o), i.manager.itemEnd(e)
        }), 0), o;
        fetch(e).then((function(e)
        {
            return e.blob()
        })).then((function(e)
        {
            return void 0 === i.options ? createImageBitmap(e) : createImageBitmap(e, i.options)
        })).then((function(n)
        {
            Ld.add(e, n), t && t(n), i.manager.itemEnd(e)
        })).catch((function(t)
        {
            r && r(t), i.manager.itemError(e), i.manager.itemEnd(e)
        })), i.manager.itemStart(e)
    }
}), Object.assign(Dp.prototype,
{
    moveTo: function(e, t)
    {
        return this.currentPath = new pp, this.subPaths.push(this.currentPath), this.currentPath.moveTo(e, t), this
    },
    lineTo: function(e, t)
    {
        return this.currentPath.lineTo(e, t), this
    },
    quadraticCurveTo: function(e, t, n, r)
    {
        return this.currentPath.quadraticCurveTo(e, t, n, r), this
    },
    bezierCurveTo: function(e, t, n, r, i, o)
    {
        return this.currentPath.bezierCurveTo(e, t, n, r, i, o), this
    },
    splineThru: function(e)
    {
        return this.currentPath.splineThru(e), this
    },
    toShapes: function(e, t)
    {
        function n(e)
        {
            for (var t = [], n = 0, r = e.length; n < r; n++)
            {
                var i = e[n],
                    o = new mp;
                o.curves = i.curves, t.push(o)
            }
            return t
        }

        function r(e, t)
        {
            for (var n = t.length, r = !1, i = n - 1, o = 0; o < n; i = o++)
            {
                var a = t[i],
                    s = t[o],
                    c = s.x - a.x,
                    u = s.y - a.y;
                if (Math.abs(u) > Number.EPSILON)
                {
                    if (u < 0 && (a = t[o], c = -c, s = t[i], u = -u), e.y < a.y || e.y > s.y) continue;
                    if (e.y === a.y)
                    {
                        if (e.x === a.x) return !0
                    }
                    else
                    {
                        var l = u * (e.x - a.x) - c * (e.y - a.y);
                        if (0 === l) return !0;
                        if (l < 0) continue;
                        r = !r
                    }
                }
                else
                {
                    if (e.y !== a.y) continue;
                    if (s.x <= e.x && e.x <= a.x || a.x <= e.x && e.x <= s.x) return !0
                }
            }
            return r
        }
        var i = jh.isClockWise,
            o = this.subPaths;
        if (0 === o.length) return [];
        if (!0 === t) return n(o);
        var a, s, c, u = [];
        if (1 === o.length) return s = o[0], (c = new mp).curves = s.curves, u.push(c), u;
        var l = !i(o[0].getPoints());
        l = e ? !l : l;
        var f, h, d = [],
            p = [],
            m = [],
            v = 0;
        p[v] = void 0, m[v] = [];
        for (var g = 0, y = o.length; g < y; g++) a = i(f = (s = o[g]).getPoints()), (a = e ? !a : a) ? (!l && p[v] && v++, p[v] = {
            s: new mp,
            p: f
        }, p[v].s.curves = s.curves, l && v++, m[v] = []) : m[v].push(
        {
            h: s,
            p: f[0]
        });
        if (!p[0]) return n(o);
        if (p.length > 1)
        {
            for (var b = !1, w = [], _ = 0, x = p.length; _ < x; _++) d[_] = [];
            for (_ = 0, x = p.length; _ < x; _++)
                for (var E = m[_], S = 0; S < E.length; S++)
                {
                    for (var M = E[S], T = !0, k = 0; k < p.length; k++) r(M.p, p[k].p) && (_ !== k && w.push(
                    {
                        froms: _,
                        tos: k,
                        hole: S
                    }), T ? (T = !1, d[k].push(M)) : b = !0);
                    T && d[_].push(M)
                }
            w.length > 0 && (b || (m = d))
        }
        g = 0;
        for (var A = p.length; g < A; g++)
        {
            c = p[g].s, u.push(c);
            for (var C = 0, O = (h = m[g]).length; C < O; C++) c.holes.push(h[C].h)
        }
        return u
    }
}), Object.assign(zp.prototype,
{
    isFont: !0,
    generateShapes: function(e, t)
    {
        void 0 === t && (t = 100);
        for (var n = [], r = function(e, t, n)
            {
                for (var r = Array.from ? Array.from(e) : String(e).split(""), i = t / n.resolution, o = (n.boundingBox.yMax - n.boundingBox.yMin + n.underlineThickness) * i, a = [], s = 0, c = 0, u = 0; u < r.length; u++)
                {
                    var l = r[u];
                    if ("\n" === l) s = 0, c -= o;
                    else
                    {
                        var f = Hp(l, i, s, c, n);
                        s += f.offsetX, a.push(f.path)
                    }
                }
                return a
            }(e, t, this.data), i = 0, o = r.length; i < o; i++) Array.prototype.push.apply(n, r[i].toShapes());
        return n
    }
}), Vp.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Vp,
    load: function(e, t, n, r)
    {
        var i = this,
            o = new Dd(this.manager);
        o.setPath(this.path), o.load(e, (function(e)
        {
            var n;
            try
            {
                n = JSON.parse(e)
            }
            catch (t)
            {
                console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."), n = JSON.parse(e.substring(65, e.length - 2))
            }
            var r = i.parse(n);
            t && t(r)
        }), n, r)
    },
    parse: function(e)
    {
        return new zp(e)
    }
});
var Wp = function()
{
    return void 0 === Lp && (Lp = new(window.AudioContext || window.webkitAudioContext)), Lp
};

function Gp(e)
{
    Fd.call(this, e)
}

function qp()
{
    this.coefficients = [];
    for (var e = 0; e < 9; e++) this.coefficients.push(new sa)
}

function $p(e, t)
{
    vp.call(this, void 0, t), this.sh = void 0 !== e ? e : new qp
}

function Kp(e, t, n)
{
    $p.call(this, void 0, n);
    var r = (new Is).set(e),
        i = (new Is).set(t),
        o = new sa(r.r, r.g, r.b),
        a = new sa(i.r, i.g, i.b),
        s = Math.sqrt(Math.PI),
        c = s * Math.sqrt(.75);
    this.sh.coefficients[0].copy(o).add(a).multiplyScalar(s), this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(c)
}

function Yp(e, t)
{
    $p.call(this, void 0, t);
    var n = (new Is).set(e);
    this.sh.coefficients[0].set(n.r, n.g, n.b).multiplyScalar(2 * Math.sqrt(Math.PI))
}
Gp.prototype = Object.assign(Object.create(Fd.prototype),
{
    constructor: Gp,
    load: function(e, t, n, r)
    {
        var i = new Dd(this.manager);
        i.setResponseType("arraybuffer"), i.setPath(this.path), i.load(e, (function(e)
        {
            var n = e.slice(0);
            Wp().decodeAudioData(n, (function(e)
            {
                t(e)
            }))
        }), n, r)
    }
}), Object.assign(qp.prototype,
{
    isSphericalHarmonics3: !0,
    set: function(e)
    {
        for (var t = 0; t < 9; t++) this.coefficients[t].copy(e[t]);
        return this
    },
    zero: function()
    {
        for (var e = 0; e < 9; e++) this.coefficients[e].set(0, 0, 0);
        return this
    },
    getAt: function(e, t)
    {
        var n = e.x,
            r = e.y,
            i = e.z,
            o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.282095), t.addScale(o[1], .488603 * r), t.addScale(o[2], .488603 * i), t.addScale(o[3], .488603 * n), t.addScale(o[4], n * r * 1.092548), t.addScale(o[5], r * i * 1.092548), t.addScale(o[6], .315392 * (3 * i * i - 1)), t.addScale(o[7], n * i * 1.092548), t.addScale(o[8], .546274 * (n * n - r * r)), t
    },
    getIrradianceAt: function(e, t)
    {
        var n = e.x,
            r = e.y,
            i = e.z,
            o = this.coefficients;
        return t.copy(o[0]).multiplyScalar(.886227), t.addScale(o[1], 1.023328 * r), t.addScale(o[2], 1.023328 * i), t.addScale(o[3], 1.023328 * n), t.addScale(o[4], .858086 * n * r), t.addScale(o[5], .858086 * r * i), t.addScale(o[6], .743125 * i * i - .247708), t.addScale(o[7], .858086 * n * i), t.addScale(o[8], .429043 * (n * n - r * r)), t
    },
    add: function(e)
    {
        for (var t = 0; t < 9; t++) this.coefficients[t].add(e.coefficients[t]);
        return this
    },
    scale: function(e)
    {
        for (var t = 0; t < 9; t++) this.coefficients[t].multiplyScalar(e);
        return this
    },
    lerp: function(e, t)
    {
        for (var n = 0; n < 9; n++) this.coefficients[n].lerp(e.coefficients[n], t);
        return this
    },
    equals: function(e)
    {
        for (var t = 0; t < 9; t++)
            if (!this.coefficients[t].equals(e.coefficients[t])) return !1;
        return !0
    },
    copy: function(e)
    {
        return this.set(e.coefficients)
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    fromArray: function(e, t)
    {
        void 0 === t && (t = 0);
        for (var n = this.coefficients, r = 0; r < 9; r++) n[r].fromArray(e, t + 3 * r);
        return this
    },
    toArray: function(e, t)
    {
        void 0 === e && (e = []), void 0 === t && (t = 0);
        for (var n = this.coefficients, r = 0; r < 9; r++) n[r].toArray(e, t + 3 * r);
        return e
    }
}), Object.assign(qp,
{
    getBasisAt: function(e, t)
    {
        var n = e.x,
            r = e.y,
            i = e.z;
        t[0] = .282095, t[1] = .488603 * r, t[2] = .488603 * i, t[3] = .488603 * n, t[4] = 1.092548 * n * r, t[5] = 1.092548 * r * i, t[6] = .315392 * (3 * i * i - 1), t[7] = 1.092548 * n * i, t[8] = .546274 * (n * n - r * r)
    }
}), $p.prototype = Object.assign(Object.create(vp.prototype),
{
    constructor: $p,
    isLightProbe: !0,
    copy: function(e)
    {
        return vp.prototype.copy.call(this, e), this.sh.copy(e.sh), this.intensity = e.intensity, this
    },
    toJSON: function(e)
    {
        return vp.prototype.toJSON.call(this, e)
    }
}), Kp.prototype = Object.assign(Object.create($p.prototype),
{
    constructor: Kp,
    isHemisphereLightProbe: !0,
    copy: function(e)
    {
        return $p.prototype.copy.call(this, e), this
    },
    toJSON: function(e)
    {
        return $p.prototype.toJSON.call(this, e)
    }
}), Yp.prototype = Object.assign(Object.create($p.prototype),
{
    constructor: Yp,
    isAmbientLightProbe: !0,
    copy: function(e)
    {
        return $p.prototype.copy.call(this, e), this
    },
    toJSON: function(e)
    {
        return $p.prototype.toJSON.call(this, e)
    }
});
var Xp = new Sa,
    Jp = new Sa;

function Zp(e)
{
    this.autoStart = void 0 === e || e, this.startTime = 0, this.oldTime = 0, this.elapsedTime = 0, this.running = !1
}
Object.assign(function()
{
    this.type = "StereoCamera", this.aspect = 1, this.eyeSep = .064, this.cameraL = new Fc, this.cameraL.layers.enable(1), this.cameraL.matrixAutoUpdate = !1, this.cameraR = new Fc, this.cameraR.layers.enable(2), this.cameraR.matrixAutoUpdate = !1, this._cache = {
        focus: null,
        fov: null,
        aspect: null,
        near: null,
        far: null,
        zoom: null,
        eyeSep: null
    }
}.prototype,
{
    update: function(e)
    {
        var t = this._cache;
        if (t.focus !== e.focus || t.fov !== e.fov || t.aspect !== e.aspect * this.aspect || t.near !== e.near || t.far !== e.far || t.zoom !== e.zoom || t.eyeSep !== this.eyeSep)
        {
            t.focus = e.focus, t.fov = e.fov, t.aspect = e.aspect * this.aspect, t.near = e.near, t.far = e.far, t.zoom = e.zoom, t.eyeSep = this.eyeSep;
            var n, r, i = e.projectionMatrix.clone(),
                o = t.eyeSep / 2,
                a = o * t.near / t.focus,
                s = t.near * Math.tan(na.DEG2RAD * t.fov * .5) / t.zoom;
            Jp.elements[12] = -o, Xp.elements[12] = o, n = -s * t.aspect + a, r = s * t.aspect + a, i.elements[0] = 2 * t.near / (r - n), i.elements[8] = (r + n) / (r - n), this.cameraL.projectionMatrix.copy(i), n = -s * t.aspect - a, r = s * t.aspect - a, i.elements[0] = 2 * t.near / (r - n), i.elements[8] = (r + n) / (r - n), this.cameraR.projectionMatrix.copy(i)
        }
        this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Jp), this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Xp)
    }
}), Object.assign(Zp.prototype,
{
    start: function()
    {
        this.startTime = ("undefined" == typeof performance ? Date : performance).now(), this.oldTime = this.startTime, this.elapsedTime = 0, this.running = !0
    },
    stop: function()
    {
        this.getElapsedTime(), this.running = !1, this.autoStart = !1
    },
    getElapsedTime: function()
    {
        return this.getDelta(), this.elapsedTime
    },
    getDelta: function()
    {
        var e = 0;
        if (this.autoStart && !this.running) return this.start(), 0;
        if (this.running)
        {
            var t = ("undefined" == typeof performance ? Date : performance).now();
            e = (t - this.oldTime) / 1e3, this.oldTime = t, this.elapsedTime += e
        }
        return e
    }
});
var Qp = new sa,
    em = new ia,
    tm = new sa,
    nm = new sa;

function rm()
{
    Ha.call(this), this.type = "AudioListener", this.context = Wp(), this.gain = this.context.createGain(), this.gain.connect(this.context.destination), this.filter = null, this.timeDelta = 0, this._clock = new Zp
}

function im(e)
{
    Ha.call(this), this.type = "Audio", this.listener = e, this.context = e.context, this.gain = this.context.createGain(), this.gain.connect(e.getInput()), this.autoplay = !1, this.buffer = null, this.detune = 0, this.loop = !1, this.loopStart = 0, this.loopEnd = 0, this.offset = 0, this.duration = void 0, this.playbackRate = 1, this.isPlaying = !1, this.hasPlaybackControl = !0, this.sourceType = "empty", this._startedAt = 0, this._pausedAt = 0, this.filters = []
}
rm.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: rm,
    getInput: function()
    {
        return this.gain
    },
    removeFilter: function()
    {
        return null !== this.filter && (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination), this.gain.connect(this.context.destination), this.filter = null), this
    },
    getFilter: function()
    {
        return this.filter
    },
    setFilter: function(e)
    {
        return null !== this.filter ? (this.gain.disconnect(this.filter), this.filter.disconnect(this.context.destination)) : this.gain.disconnect(this.context.destination), this.filter = e, this.gain.connect(this.filter), this.filter.connect(this.context.destination), this
    },
    getMasterVolume: function()
    {
        return this.gain.gain.value
    },
    setMasterVolume: function(e)
    {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
    },
    updateMatrixWorld: function(e)
    {
        Ha.prototype.updateMatrixWorld.call(this, e);
        var t = this.context.listener,
            n = this.up;
        if (this.timeDelta = this._clock.getDelta(), this.matrixWorld.decompose(Qp, em, tm), nm.set(0, 0, -1).applyQuaternion(em), t.positionX)
        {
            var r = this.context.currentTime + this.timeDelta;
            t.positionX.linearRampToValueAtTime(Qp.x, r), t.positionY.linearRampToValueAtTime(Qp.y, r), t.positionZ.linearRampToValueAtTime(Qp.z, r), t.forwardX.linearRampToValueAtTime(nm.x, r), t.forwardY.linearRampToValueAtTime(nm.y, r), t.forwardZ.linearRampToValueAtTime(nm.z, r), t.upX.linearRampToValueAtTime(n.x, r), t.upY.linearRampToValueAtTime(n.y, r), t.upZ.linearRampToValueAtTime(n.z, r)
        }
        else t.setPosition(Qp.x, Qp.y, Qp.z), t.setOrientation(nm.x, nm.y, nm.z, n.x, n.y, n.z)
    }
}), im.prototype = Object.assign(Object.create(Ha.prototype),
{
    constructor: im,
    getOutput: function()
    {
        return this.gain
    },
    setNodeSource: function(e)
    {
        return this.hasPlaybackControl = !1, this.sourceType = "audioNode", this.source = e, this.connect(), this
    },
    setMediaElementSource: function(e)
    {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaNode", this.source = this.context.createMediaElementSource(e), this.connect(), this
    },
    setMediaStreamSource: function(e)
    {
        return this.hasPlaybackControl = !1, this.sourceType = "mediaStreamNode", this.source = this.context.createMediaStreamSource(e), this.connect(), this
    },
    setBuffer: function(e)
    {
        return this.buffer = e, this.sourceType = "buffer", this.autoplay && this.play(), this
    },
    play: function(e)
    {
        if (void 0 === e && (e = 0), !0 !== this.isPlaying)
        {
            if (!1 !== this.hasPlaybackControl)
            {
                this._startedAt = this.context.currentTime + e;
                var t = this.context.createBufferSource();
                return t.buffer = this.buffer, t.loop = this.loop, t.loopStart = this.loopStart, t.loopEnd = this.loopEnd, t.onended = this.onEnded.bind(this), t.start(this._startedAt, this._pausedAt + this.offset, this.duration), this.isPlaying = !0, this.source = t, this.setDetune(this.detune), this.setPlaybackRate(this.playbackRate), this.connect()
            }
            console.warn("THREE.Audio: this Audio has no playback control.")
        }
        else console.warn("THREE.Audio: Audio is already playing.")
    },
    pause: function()
    {
        if (!1 !== this.hasPlaybackControl) return !0 === this.isPlaying && (this._pausedAt = (this.context.currentTime - this._startedAt) * this.playbackRate, this.source.stop(), this.source.onended = null, this.isPlaying = !1), this;
        console.warn("THREE.Audio: this Audio has no playback control.")
    },
    stop: function()
    {
        if (!1 !== this.hasPlaybackControl) return this._pausedAt = 0, this.source.stop(), this.source.onended = null, this.isPlaying = !1, this;
        console.warn("THREE.Audio: this Audio has no playback control.")
    },
    connect: function()
    {
        if (this.filters.length > 0)
        {
            this.source.connect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].connect(this.filters[e]);
            this.filters[this.filters.length - 1].connect(this.getOutput())
        }
        else this.source.connect(this.getOutput());
        return this
    },
    disconnect: function()
    {
        if (this.filters.length > 0)
        {
            this.source.disconnect(this.filters[0]);
            for (var e = 1, t = this.filters.length; e < t; e++) this.filters[e - 1].disconnect(this.filters[e]);
            this.filters[this.filters.length - 1].disconnect(this.getOutput())
        }
        else this.source.disconnect(this.getOutput());
        return this
    },
    getFilters: function()
    {
        return this.filters
    },
    setFilters: function(e)
    {
        return e || (e = []), !0 === this.isPlaying ? (this.disconnect(), this.filters = e, this.connect()) : this.filters = e, this
    },
    setDetune: function(e)
    {
        if (this.detune = e, void 0 !== this.source.detune) return !0 === this.isPlaying && this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, .01), this
    },
    getDetune: function()
    {
        return this.detune
    },
    getFilter: function()
    {
        return this.getFilters()[0]
    },
    setFilter: function(e)
    {
        return this.setFilters(e ? [e] : [])
    },
    setPlaybackRate: function(e)
    {
        if (!1 !== this.hasPlaybackControl) return this.playbackRate = e, !0 === this.isPlaying && this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, .01), this;
        console.warn("THREE.Audio: this Audio has no playback control.")
    },
    getPlaybackRate: function()
    {
        return this.playbackRate
    },
    onEnded: function()
    {
        this.isPlaying = !1
    },
    getLoop: function()
    {
        return !1 === this.hasPlaybackControl ? (console.warn("THREE.Audio: this Audio has no playback control."), !1) : this.loop
    },
    setLoop: function(e)
    {
        if (!1 !== this.hasPlaybackControl) return this.loop = e, !0 === this.isPlaying && (this.source.loop = this.loop), this;
        console.warn("THREE.Audio: this Audio has no playback control.")
    },
    setLoopStart: function(e)
    {
        return this.loopStart = e, this
    },
    setLoopEnd: function(e)
    {
        return this.loopEnd = e, this
    },
    getVolume: function()
    {
        return this.gain.gain.value
    },
    setVolume: function(e)
    {
        return this.gain.gain.setTargetAtTime(e, this.context.currentTime, .01), this
    }
});
var om = new sa,
    am = new ia,
    sm = new sa,
    cm = new sa;

function um(e)
{
    im.call(this, e), this.panner = this.context.createPanner(), this.panner.panningModel = "HRTF", this.panner.connect(this.gain)
}

function lm(e, t)
{
    this.analyser = e.context.createAnalyser(), this.analyser.fftSize = void 0 !== t ? t : 2048, this.data = new Uint8Array(this.analyser.frequencyBinCount), e.getOutput().connect(this.analyser)
}

function fm(e, t, n)
{
    this.binding = e, this.valueSize = n;
    var r, i = Float64Array;
    switch (t)
    {
        case "quaternion":
            r = this._slerp;
            break;
        case "string":
        case "bool":
            i = Array, r = this._select;
            break;
        default:
            r = this._lerp
    }
    this.buffer = new i(4 * n), this._mixBufferRegion = r, this.cumulativeWeight = 0, this.useCount = 0, this.referenceCount = 0
}
um.prototype = Object.assign(Object.create(im.prototype),
{
    constructor: um,
    getOutput: function()
    {
        return this.panner
    },
    getRefDistance: function()
    {
        return this.panner.refDistance
    },
    setRefDistance: function(e)
    {
        return this.panner.refDistance = e, this
    },
    getRolloffFactor: function()
    {
        return this.panner.rolloffFactor
    },
    setRolloffFactor: function(e)
    {
        return this.panner.rolloffFactor = e, this
    },
    getDistanceModel: function()
    {
        return this.panner.distanceModel
    },
    setDistanceModel: function(e)
    {
        return this.panner.distanceModel = e, this
    },
    getMaxDistance: function()
    {
        return this.panner.maxDistance
    },
    setMaxDistance: function(e)
    {
        return this.panner.maxDistance = e, this
    },
    setDirectionalCone: function(e, t, n)
    {
        return this.panner.coneInnerAngle = e, this.panner.coneOuterAngle = t, this.panner.coneOuterGain = n, this
    },
    updateMatrixWorld: function(e)
    {
        if (Ha.prototype.updateMatrixWorld.call(this, e), !0 !== this.hasPlaybackControl || !1 !== this.isPlaying)
        {
            this.matrixWorld.decompose(om, am, sm), cm.set(0, 0, 1).applyQuaternion(am);
            var t = this.panner;
            if (t.positionX)
            {
                var n = this.context.currentTime + this.listener.timeDelta;
                t.positionX.linearRampToValueAtTime(om.x, n), t.positionY.linearRampToValueAtTime(om.y, n), t.positionZ.linearRampToValueAtTime(om.z, n), t.orientationX.linearRampToValueAtTime(cm.x, n), t.orientationY.linearRampToValueAtTime(cm.y, n), t.orientationZ.linearRampToValueAtTime(cm.z, n)
            }
            else t.setPosition(om.x, om.y, om.z), t.setOrientation(cm.x, cm.y, cm.z)
        }
    }
}), Object.assign(lm.prototype,
{
    getFrequencyData: function()
    {
        return this.analyser.getByteFrequencyData(this.data), this.data
    },
    getAverageFrequency: function()
    {
        for (var e = 0, t = this.getFrequencyData(), n = 0; n < t.length; n++) e += t[n];
        return e / t.length
    }
}), Object.assign(fm.prototype,
{
    accumulate: function(e, t)
    {
        var n = this.buffer,
            r = this.valueSize,
            i = e * r + r,
            o = this.cumulativeWeight;
        if (0 === o)
        {
            for (var a = 0; a !== r; ++a) n[i + a] = n[a];
            o = t
        }
        else
        {
            var s = t / (o += t);
            this._mixBufferRegion(n, i, 0, s, r)
        }
        this.cumulativeWeight = o
    },
    apply: function(e)
    {
        var t = this.valueSize,
            n = this.buffer,
            r = e * t + t,
            i = this.cumulativeWeight,
            o = this.binding;
        if (this.cumulativeWeight = 0, i < 1)
        {
            var a = 3 * t;
            this._mixBufferRegion(n, r, a, 1 - i, t)
        }
        for (var s = t, c = t + t; s !== c; ++s)
            if (n[s] !== n[s + t])
            {
                o.setValue(n, r);
                break
            }
    },
    saveOriginalState: function()
    {
        var e = this.binding,
            t = this.buffer,
            n = this.valueSize,
            r = 3 * n;
        e.getValue(t, r);
        for (var i = n, o = r; i !== o; ++i) t[i] = t[r + i % n];
        this.cumulativeWeight = 0
    },
    restoreOriginalState: function()
    {
        var e = 3 * this.valueSize;
        this.binding.setValue(this.buffer, e)
    },
    _select: function(e, t, n, r, i)
    {
        if (r >= .5)
            for (var o = 0; o !== i; ++o) e[t + o] = e[n + o]
    },
    _slerp: function(e, t, n, r)
    {
        ia.slerpFlat(e, t, e, t, e, n, r)
    },
    _lerp: function(e, t, n, r, i)
    {
        for (var o = 1 - r, a = 0; a !== i; ++a)
        {
            var s = t + a;
            e[s] = e[s] * o + e[n + a] * r
        }
    }
});
var hm = new RegExp("[\\[\\]\\.:\\/]", "g"),
    dm = "[^" + "\\[\\]\\.:\\/".replace("\\.", "") + "]",
    pm = /((?:WC+[\/:])*)/.source.replace("WC", "[^\\[\\]\\.:\\/]"),
    mm = /(WCOD+)?/.source.replace("WCOD", dm),
    vm = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC", "[^\\[\\]\\.:\\/]"),
    gm = /\.(WC+)(?:\[(.+)\])?/.source.replace("WC", "[^\\[\\]\\.:\\/]"),
    ym = new RegExp("^" + pm + mm + vm + gm + "$"),
    bm = ["material", "materials", "bones"];

function wm(e, t, n)
{
    var r = n || _m.parseTrackName(t);
    this._targetGroup = e, this._bindings = e.subscribe_(t, r)
}

function _m(e, t, n)
{
    this.path = t, this.parsedPath = n || _m.parseTrackName(t), this.node = _m.findNode(e, this.parsedPath.nodeName) || e, this.rootNode = e
}

function xm(e, t, n)
{
    this._mixer = e, this._clip = t, this._localRoot = n || null;
    for (var r = t.tracks, i = r.length, o = new Array(i), a = {
            endingStart: 2400,
            endingEnd: 2400
        }, s = 0; s !== i; ++s)
    {
        var c = r[s].createInterpolant(null);
        o[s] = c, c.settings = a
    }
    this._interpolantSettings = a, this._interpolants = o, this._propertyBindings = new Array(i), this._cacheIndex = null, this._byClipCacheIndex = null, this._timeScaleInterpolant = null, this._weightInterpolant = null, this.loop = 2201, this._loopCount = -1, this._startTime = null, this.time = 0, this.timeScale = 1, this._effectiveTimeScale = 1, this.weight = 1, this._effectiveWeight = 1, this.repetitions = 1 / 0, this.paused = !1, this.enabled = !0, this.clampWhenFinished = !1, this.zeroSlopeAtStart = !0, this.zeroSlopeAtEnd = !0
}

function Em(e)
{
    this._root = e, this._initMemoryManager(), this._accuIndex = 0, this.time = 0, this.timeScale = 1
}

function Sm(e)
{
    "string" == typeof e && (console.warn("THREE.Uniform: Type parameter is no longer needed."), e = arguments[1]), this.value = e
}

function Mm(e, t, n)
{
    Yl.call(this, e, t), this.meshPerAttribute = n || 1
}

function Tm(e, t)
{
    return e.distance - t.distance
}

function km(e, t, n, r)
{
    if (!1 !== e.visible && (e.raycast(t, n), !0 === r))
        for (var i = e.children, o = 0, a = i.length; o < a; o++) km(i[o], t, n, !0)
}
Object.assign(wm.prototype,
    {
        getValue: function(e, t)
        {
            this.bind();
            var n = this._targetGroup.nCachedObjects_,
                r = this._bindings[n];
            void 0 !== r && r.getValue(e, t)
        },
        setValue: function(e, t)
        {
            for (var n = this._bindings, r = this._targetGroup.nCachedObjects_, i = n.length; r !== i; ++r) n[r].setValue(e, t)
        },
        bind: function()
        {
            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].bind()
        },
        unbind: function()
        {
            for (var e = this._bindings, t = this._targetGroup.nCachedObjects_, n = e.length; t !== n; ++t) e[t].unbind()
        }
    }), Object.assign(_m,
    {
        Composite: wm,
        create: function(e, t, n)
        {
            return e && e.isAnimationObjectGroup ? new _m.Composite(e, t, n) : new _m(e, t, n)
        },
        sanitizeNodeName: function(e)
        {
            return e.replace(/\s/g, "_").replace(hm, "")
        },
        parseTrackName: function(e)
        {
            var t = ym.exec(e);
            if (!t) throw new Error("PropertyBinding: Cannot parse trackName: " + e);
            var n = {
                    nodeName: t[2],
                    objectName: t[3],
                    objectIndex: t[4],
                    propertyName: t[5],
                    propertyIndex: t[6]
                },
                r = n.nodeName && n.nodeName.lastIndexOf(".");
            if (void 0 !== r && -1 !== r)
            {
                var i = n.nodeName.substring(r + 1); - 1 !== bm.indexOf(i) && (n.nodeName = n.nodeName.substring(0, r), n.objectName = i)
            }
            if (null === n.propertyName || 0 === n.propertyName.length) throw new Error("PropertyBinding: can not parse propertyName from trackName: " + e);
            return n
        },
        findNode: function(e, t)
        {
            if (!t || "" === t || "root" === t || "." === t || -1 === t || t === e.name || t === e.uuid) return e;
            if (e.skeleton)
            {
                var n = e.skeleton.getBoneByName(t);
                if (void 0 !== n) return n
            }
            if (e.children)
            {
                var r = function e(n)
                {
                    for (var r = 0; r < n.length; r++)
                    {
                        var i = n[r];
                        if (i.name === t || i.uuid === t) return i;
                        var o = e(i.children);
                        if (o) return o
                    }
                    return null
                }(e.children);
                if (r) return r
            }
            return null
        }
    }), Object.assign(_m.prototype,
    {
        _getValue_unavailable: function() {},
        _setValue_unavailable: function() {},
        BindingType:
        {
            Direct: 0,
            EntireArray: 1,
            ArrayElement: 2,
            HasFromToArray: 3
        },
        Versioning:
        {
            None: 0,
            NeedsUpdate: 1,
            MatrixWorldNeedsUpdate: 2
        },
        GetterByBindingType: [function(e, t)
        {
            e[t] = this.node[this.propertyName]
        }, function(e, t)
        {
            for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) e[t++] = n[r]
        }, function(e, t)
        {
            e[t] = this.resolvedProperty[this.propertyIndex]
        }, function(e, t)
        {
            this.resolvedProperty.toArray(e, t)
        }],
        SetterByBindingTypeAndVersioning: [
            [function(e, t)
            {
                this.targetObject[this.propertyName] = e[t]
            }, function(e, t)
            {
                this.targetObject[this.propertyName] = e[t], this.targetObject.needsUpdate = !0
            }, function(e, t)
            {
                this.targetObject[this.propertyName] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
            }],
            [function(e, t)
            {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++]
            }, function(e, t)
            {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                this.targetObject.needsUpdate = !0
            }, function(e, t)
            {
                for (var n = this.resolvedProperty, r = 0, i = n.length; r !== i; ++r) n[r] = e[t++];
                this.targetObject.matrixWorldNeedsUpdate = !0
            }],
            [function(e, t)
            {
                this.resolvedProperty[this.propertyIndex] = e[t]
            }, function(e, t)
            {
                this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.needsUpdate = !0
            }, function(e, t)
            {
                this.resolvedProperty[this.propertyIndex] = e[t], this.targetObject.matrixWorldNeedsUpdate = !0
            }],
            [function(e, t)
            {
                this.resolvedProperty.fromArray(e, t)
            }, function(e, t)
            {
                this.resolvedProperty.fromArray(e, t), this.targetObject.needsUpdate = !0
            }, function(e, t)
            {
                this.resolvedProperty.fromArray(e, t), this.targetObject.matrixWorldNeedsUpdate = !0
            }]
        ],
        getValue: function(e, t)
        {
            this.bind(), this.getValue(e, t)
        },
        setValue: function(e, t)
        {
            this.bind(), this.setValue(e, t)
        },
        bind: function()
        {
            var e = this.node,
                t = this.parsedPath,
                n = t.objectName,
                r = t.propertyName,
                i = t.propertyIndex;
            if (e || (e = _m.findNode(this.rootNode, t.nodeName) || this.rootNode, this.node = e), this.getValue = this._getValue_unavailable, this.setValue = this._setValue_unavailable, e)
            {
                if (n)
                {
                    var o = t.objectIndex;
                    switch (n)
                    {
                        case "materials":
                            if (!e.material) return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.", this);
                            if (!e.material.materials) return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.", this);
                            e = e.material.materials;
                            break;
                        case "bones":
                            if (!e.skeleton) return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.", this);
                            e = e.skeleton.bones;
                            for (var a = 0; a < e.length; a++)
                                if (e[a].name === o)
                                {
                                    o = a;
                                    break
                                } break;
                        default:
                            if (void 0 === e[n]) return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.", this);
                            e = e[n]
                    }
                    if (void 0 !== o)
                    {
                        if (void 0 === e[o]) return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.", this, e);
                        e = e[o]
                    }
                }
                var s = e[r];
                if (void 0 !== s)
                {
                    var c = this.Versioning.None;
                    this.targetObject = e, void 0 !== e.needsUpdate ? c = this.Versioning.NeedsUpdate : void 0 !== e.matrixWorldNeedsUpdate && (c = this.Versioning.MatrixWorldNeedsUpdate);
                    var u = this.BindingType.Direct;
                    if (void 0 !== i)
                    {
                        if ("morphTargetInfluences" === r)
                        {
                            if (!e.geometry) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.", this);
                            if (e.geometry.isBufferGeometry)
                            {
                                if (!e.geometry.morphAttributes) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.", this);
                                for (a = 0; a < this.node.geometry.morphAttributes.position.length; a++)
                                    if (e.geometry.morphAttributes.position[a].name === i)
                                    {
                                        i = a;
                                        break
                                    }
                            }
                            else
                            {
                                if (!e.geometry.morphTargets) return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.", this);
                                for (a = 0; a < this.node.geometry.morphTargets.length; a++)
                                    if (e.geometry.morphTargets[a].name === i)
                                    {
                                        i = a;
                                        break
                                    }
                            }
                        }
                        u = this.BindingType.ArrayElement, this.resolvedProperty = s, this.propertyIndex = i
                    }
                    else void 0 !== s.fromArray && void 0 !== s.toArray ? (u = this.BindingType.HasFromToArray, this.resolvedProperty = s) : Array.isArray(s) ? (u = this.BindingType.EntireArray, this.resolvedProperty = s) : this.propertyName = r;
                    this.getValue = this.GetterByBindingType[u], this.setValue = this.SetterByBindingTypeAndVersioning[u][c]
                }
                else
                {
                    var l = t.nodeName;
                    console.error("THREE.PropertyBinding: Trying to update property for track: " + l + "." + r + " but it wasn't found.", e)
                }
            }
            else console.error("THREE.PropertyBinding: Trying to update node for track: " + this.path + " but it wasn't found.")
        },
        unbind: function()
        {
            this.node = null, this.getValue = this._getValue_unbound, this.setValue = this._setValue_unbound
        }
    }), //!\ DECLARE ALIAS AFTER assign prototype !
    Object.assign(_m.prototype,
    {
        _getValue_unbound: _m.prototype.getValue,
        _setValue_unbound: _m.prototype.setValue
    }), Object.assign(function()
    {
        this.uuid = na.generateUUID(), this._objects = Array.prototype.slice.call(arguments), this.nCachedObjects_ = 0;
        var e = {};
        this._indicesByUUID = e;
        for (var t = 0, n = arguments.length; t !== n; ++t) e[arguments[t].uuid] = t;
        this._paths = [], this._parsedPaths = [], this._bindings = [], this._bindingsIndicesByPath = {};
        var r = this;
        this.stats = {
            objects:
            {
                get total()
                {
                    return r._objects.length
                },
                get inUse()
                {
                    return this.total - r.nCachedObjects_
                }
            },
            get bindingsPerObject()
            {
                return r._bindings.length
            }
        }
    }.prototype,
    {
        isAnimationObjectGroup: !0,
        add: function()
        {
            for (var e = this._objects, t = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._paths, o = this._parsedPaths, a = this._bindings, s = a.length, c = void 0, u = 0, l = arguments.length; u !== l; ++u)
            {
                var f = arguments[u],
                    h = f.uuid,
                    d = r[h];
                if (void 0 === d)
                {
                    d = t++, r[h] = d, e.push(f);
                    for (var p = 0, m = s; p !== m; ++p) a[p].push(new _m(f, i[p], o[p]))
                }
                else if (d < n)
                {
                    c = e[d];
                    var v = --n,
                        g = e[v];
                    r[g.uuid] = d, e[d] = g, r[h] = v, e[v] = f;
                    for (p = 0, m = s; p !== m; ++p)
                    {
                        var y = a[p],
                            b = y[v],
                            w = y[d];
                        y[d] = b, void 0 === w && (w = new _m(f, i[p], o[p])), y[v] = w
                    }
                }
                else e[d] !== c && console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")
            }
            this.nCachedObjects_ = n
        },
        remove: function()
        {
            for (var e = this._objects, t = this.nCachedObjects_, n = this._indicesByUUID, r = this._bindings, i = r.length, o = 0, a = arguments.length; o !== a; ++o)
            {
                var s = arguments[o],
                    c = s.uuid,
                    u = n[c];
                if (void 0 !== u && u >= t)
                {
                    var l = t++,
                        f = e[l];
                    n[f.uuid] = u, e[u] = f, n[c] = l, e[l] = s;
                    for (var h = 0, d = i; h !== d; ++h)
                    {
                        var p = r[h],
                            m = p[l],
                            v = p[u];
                        p[u] = m, p[l] = v
                    }
                }
            }
            this.nCachedObjects_ = t
        },
        uncache: function()
        {
            for (var e = this._objects, t = e.length, n = this.nCachedObjects_, r = this._indicesByUUID, i = this._bindings, o = i.length, a = 0, s = arguments.length; a !== s; ++a)
            {
                var c = arguments[a],
                    u = c.uuid,
                    l = r[u];
                if (void 0 !== l)
                    if (delete r[u], l < n)
                    {
                        var f = --n,
                            h = e[f],
                            d = e[y = --t];
                        r[h.uuid] = l, e[l] = h, r[d.uuid] = f, e[f] = d, e.pop();
                        for (var p = 0, m = o; p !== m; ++p)
                        {
                            var v = (b = i[p])[f],
                                g = b[y];
                            b[l] = v, b[f] = g, b.pop()
                        }
                    }
                else
                {
                    var y;
                    r[(d = e[y = --t]).uuid] = l, e[l] = d, e.pop();
                    for (p = 0, m = o; p !== m; ++p)
                    {
                        var b;
                        (b = i[p])[l] = b[y], b.pop()
                    }
                }
            }
            this.nCachedObjects_ = n
        },
        subscribe_: function(e, t)
        {
            var n = this._bindingsIndicesByPath,
                r = n[e],
                i = this._bindings;
            if (void 0 !== r) return i[r];
            var o = this._paths,
                a = this._parsedPaths,
                s = this._objects,
                c = s.length,
                u = this.nCachedObjects_,
                l = new Array(c);
            r = i.length, n[e] = r, o.push(e), a.push(t), i.push(l);
            for (var f = u, h = s.length; f !== h; ++f)
            {
                var d = s[f];
                l[f] = new _m(d, e, t)
            }
            return l
        },
        unsubscribe_: function(e)
        {
            var t = this._bindingsIndicesByPath,
                n = t[e];
            if (void 0 !== n)
            {
                var r = this._paths,
                    i = this._parsedPaths,
                    o = this._bindings,
                    a = o.length - 1,
                    s = o[a];
                t[e[a]] = n, o[n] = s, o.pop(), i[n] = i[a], i.pop(), r[n] = r[a], r.pop()
            }
        }
    }), Object.assign(xm.prototype,
    {
        play: function()
        {
            return this._mixer._activateAction(this), this
        },
        stop: function()
        {
            return this._mixer._deactivateAction(this), this.reset()
        },
        reset: function()
        {
            return this.paused = !1, this.enabled = !0, this.time = 0, this._loopCount = -1, this._startTime = null, this.stopFading().stopWarping()
        },
        isRunning: function()
        {
            return this.enabled && !this.paused && 0 !== this.timeScale && null === this._startTime && this._mixer._isActiveAction(this)
        },
        isScheduled: function()
        {
            return this._mixer._isActiveAction(this)
        },
        startAt: function(e)
        {
            return this._startTime = e, this
        },
        setLoop: function(e, t)
        {
            return this.loop = e, this.repetitions = t, this
        },
        setEffectiveWeight: function(e)
        {
            return this.weight = e, this._effectiveWeight = this.enabled ? e : 0, this.stopFading()
        },
        getEffectiveWeight: function()
        {
            return this._effectiveWeight
        },
        fadeIn: function(e)
        {
            return this._scheduleFading(e, 0, 1)
        },
        fadeOut: function(e)
        {
            return this._scheduleFading(e, 1, 0)
        },
        crossFadeFrom: function(e, t, n)
        {
            if (e.fadeOut(t), this.fadeIn(t), n)
            {
                var r = this._clip.duration,
                    i = e._clip.duration,
                    o = i / r,
                    a = r / i;
                e.warp(1, o, t), this.warp(a, 1, t)
            }
            return this
        },
        crossFadeTo: function(e, t, n)
        {
            return e.crossFadeFrom(this, t, n)
        },
        stopFading: function()
        {
            var e = this._weightInterpolant;
            return null !== e && (this._weightInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
        },
        setEffectiveTimeScale: function(e)
        {
            return this.timeScale = e, this._effectiveTimeScale = this.paused ? 0 : e, this.stopWarping()
        },
        getEffectiveTimeScale: function()
        {
            return this._effectiveTimeScale
        },
        setDuration: function(e)
        {
            return this.timeScale = this._clip.duration / e, this.stopWarping()
        },
        syncWith: function(e)
        {
            return this.time = e.time, this.timeScale = e.timeScale, this.stopWarping()
        },
        halt: function(e)
        {
            return this.warp(this._effectiveTimeScale, 0, e)
        },
        warp: function(e, t, n)
        {
            var r = this._mixer,
                i = r.time,
                o = this._timeScaleInterpolant,
                a = this.timeScale;
            null === o && (o = r._lendControlInterpolant(), this._timeScaleInterpolant = o);
            var s = o.parameterPositions,
                c = o.sampleValues;
            return s[0] = i, s[1] = i + n, c[0] = e / a, c[1] = t / a, this
        },
        stopWarping: function()
        {
            var e = this._timeScaleInterpolant;
            return null !== e && (this._timeScaleInterpolant = null, this._mixer._takeBackControlInterpolant(e)), this
        },
        getMixer: function()
        {
            return this._mixer
        },
        getClip: function()
        {
            return this._clip
        },
        getRoot: function()
        {
            return this._localRoot || this._mixer._root
        },
        _update: function(e, t, n, r)
        {
            if (this.enabled)
            {
                var i = this._startTime;
                if (null !== i)
                {
                    var o = (e - i) * n;
                    if (o < 0 || 0 === n) return;
                    this._startTime = null, t = n * o
                }
                t *= this._updateTimeScale(e);
                var a = this._updateTime(t),
                    s = this._updateWeight(e);
                if (s > 0)
                    for (var c = this._interpolants, u = this._propertyBindings, l = 0, f = c.length; l !== f; ++l) c[l].evaluate(a), u[l].accumulate(r, s)
            }
            else this._updateWeight(e)
        },
        _updateWeight: function(e)
        {
            var t = 0;
            if (this.enabled)
            {
                t = this.weight;
                var n = this._weightInterpolant;
                if (null !== n)
                {
                    var r = n.evaluate(e)[0];
                    t *= r, e > n.parameterPositions[1] && (this.stopFading(), 0 === r && (this.enabled = !1))
                }
            }
            return this._effectiveWeight = t, t
        },
        _updateTimeScale: function(e)
        {
            var t = 0;
            if (!this.paused)
            {
                t = this.timeScale;
                var n = this._timeScaleInterpolant;
                if (null !== n) t *= n.evaluate(e)[0], e > n.parameterPositions[1] && (this.stopWarping(), 0 === t ? this.paused = !0 : this.timeScale = t)
            }
            return this._effectiveTimeScale = t, t
        },
        _updateTime: function(e)
        {
            var t = this.time + e,
                n = this._clip.duration,
                r = this.loop,
                i = this._loopCount,
                o = 2202 === r;
            if (0 === e) return -1 === i ? t : o && 1 == (1 & i) ? n - t : t;
            if (2200 === r)
            {
                -1 === i && (this._loopCount = 0, this._setEndings(!0, !0, !1));
                e:
                {
                    if (t >= n) t = n;
                    else
                    {
                        if (!(t < 0))
                        {
                            this.time = t;
                            break e
                        }
                        t = 0
                    }
                    this.clampWhenFinished ? this.paused = !0 : this.enabled = !1,
                    this.time = t,
                    this._mixer.dispatchEvent(
                    {
                        type: "finished",
                        action: this,
                        direction: e < 0 ? -1 : 1
                    })
                }
            }
            else
            {
                if (-1 === i && (e >= 0 ? (i = 0, this._setEndings(!0, 0 === this.repetitions, o)) : this._setEndings(0 === this.repetitions, !0, o)), t >= n || t < 0)
                {
                    var a = Math.floor(t / n);
                    t -= n * a, i += Math.abs(a);
                    var s = this.repetitions - i;
                    if (s <= 0) this.clampWhenFinished ? this.paused = !0 : this.enabled = !1, t = e > 0 ? n : 0, this.time = t, this._mixer.dispatchEvent(
                    {
                        type: "finished",
                        action: this,
                        direction: e > 0 ? 1 : -1
                    });
                    else
                    {
                        if (1 === s)
                        {
                            var c = e < 0;
                            this._setEndings(c, !c, o)
                        }
                        else this._setEndings(!1, !1, o);
                        this._loopCount = i, this.time = t, this._mixer.dispatchEvent(
                        {
                            type: "loop",
                            action: this,
                            loopDelta: a
                        })
                    }
                }
                else this.time = t;
                if (o && 1 == (1 & i)) return n - t
            }
            return t
        },
        _setEndings: function(e, t, n)
        {
            var r = this._interpolantSettings;
            n ? (r.endingStart = 2401, r.endingEnd = 2401) : (r.endingStart = e ? this.zeroSlopeAtStart ? 2401 : 2400 : 2402, r.endingEnd = t ? this.zeroSlopeAtEnd ? 2401 : 2400 : 2402)
        },
        _scheduleFading: function(e, t, n)
        {
            var r = this._mixer,
                i = r.time,
                o = this._weightInterpolant;
            null === o && (o = r._lendControlInterpolant(), this._weightInterpolant = o);
            var a = o.parameterPositions,
                s = o.sampleValues;
            return a[0] = i, s[0] = t, a[1] = i + e, s[1] = n, this
        }
    }), Em.prototype = Object.assign(Object.create(Qo.prototype),
    {
        constructor: Em,
        _bindAction: function(e, t)
        {
            var n = e._localRoot || this._root,
                r = e._clip.tracks,
                i = r.length,
                o = e._propertyBindings,
                a = e._interpolants,
                s = n.uuid,
                c = this._bindingsByRootAndName,
                u = c[s];
            void 0 === u && (u = {}, c[s] = u);
            for (var l = 0; l !== i; ++l)
            {
                var f = r[l],
                    h = f.name,
                    d = u[h];
                if (void 0 !== d) o[l] = d;
                else
                {
                    if (void 0 !== (d = o[l]))
                    {
                        null === d._cacheIndex && (++d.referenceCount, this._addInactiveBinding(d, s, h));
                        continue
                    }
                    var p = t && t._propertyBindings[l].binding.parsedPath;
                    ++(d = new fm(_m.create(n, h, p), f.ValueTypeName, f.getValueSize())).referenceCount, this._addInactiveBinding(d, s, h), o[l] = d
                }
                a[l].resultBuffer = d.buffer
            }
        },
        _activateAction: function(e)
        {
            if (!this._isActiveAction(e))
            {
                if (null === e._cacheIndex)
                {
                    var t = (e._localRoot || this._root).uuid,
                        n = e._clip.uuid,
                        r = this._actionsByClip[n];
                    this._bindAction(e, r && r.knownActions[0]), this._addInactiveAction(e, n, t)
                }
                for (var i = e._propertyBindings, o = 0, a = i.length; o !== a; ++o)
                {
                    var s = i[o];
                    0 == s.useCount++ && (this._lendBinding(s), s.saveOriginalState())
                }
                this._lendAction(e)
            }
        },
        _deactivateAction: function(e)
        {
            if (this._isActiveAction(e))
            {
                for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n)
                {
                    var i = t[n];
                    0 == --i.useCount && (i.restoreOriginalState(), this._takeBackBinding(i))
                }
                this._takeBackAction(e)
            }
        },
        _initMemoryManager: function()
        {
            this._actions = [], this._nActiveActions = 0, this._actionsByClip = {}, this._bindings = [], this._nActiveBindings = 0, this._bindingsByRootAndName = {}, this._controlInterpolants = [], this._nActiveControlInterpolants = 0;
            var e = this;
            this.stats = {
                actions:
                {
                    get total()
                    {
                        return e._actions.length
                    },
                    get inUse()
                    {
                        return e._nActiveActions
                    }
                },
                bindings:
                {
                    get total()
                    {
                        return e._bindings.length
                    },
                    get inUse()
                    {
                        return e._nActiveBindings
                    }
                },
                controlInterpolants:
                {
                    get total()
                    {
                        return e._controlInterpolants.length
                    },
                    get inUse()
                    {
                        return e._nActiveControlInterpolants
                    }
                }
            }
        },
        _isActiveAction: function(e)
        {
            var t = e._cacheIndex;
            return null !== t && t < this._nActiveActions
        },
        _addInactiveAction: function(e, t, n)
        {
            var r = this._actions,
                i = this._actionsByClip,
                o = i[t];
            if (void 0 === o) o = {
                knownActions: [e],
                actionByRoot:
                {}
            }, e._byClipCacheIndex = 0, i[t] = o;
            else
            {
                var a = o.knownActions;
                e._byClipCacheIndex = a.length, a.push(e)
            }
            e._cacheIndex = r.length, r.push(e), o.actionByRoot[n] = e
        },
        _removeInactiveAction: function(e)
        {
            var t = this._actions,
                n = t[t.length - 1],
                r = e._cacheIndex;
            n._cacheIndex = r, t[r] = n, t.pop(), e._cacheIndex = null;
            var i = e._clip.uuid,
                o = this._actionsByClip,
                a = o[i],
                s = a.knownActions,
                c = s[s.length - 1],
                u = e._byClipCacheIndex;
            c._byClipCacheIndex = u, s[u] = c, s.pop(), e._byClipCacheIndex = null, delete a.actionByRoot[(e._localRoot || this._root).uuid], 0 === s.length && delete o[i], this._removeInactiveBindingsForAction(e)
        },
        _removeInactiveBindingsForAction: function(e)
        {
            for (var t = e._propertyBindings, n = 0, r = t.length; n !== r; ++n)
            {
                var i = t[n];
                0 == --i.referenceCount && this._removeInactiveBinding(i)
            }
        },
        _lendAction: function(e)
        {
            var t = this._actions,
                n = e._cacheIndex,
                r = this._nActiveActions++,
                i = t[r];
            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
        },
        _takeBackAction: function(e)
        {
            var t = this._actions,
                n = e._cacheIndex,
                r = --this._nActiveActions,
                i = t[r];
            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
        },
        _addInactiveBinding: function(e, t, n)
        {
            var r = this._bindingsByRootAndName,
                i = r[t],
                o = this._bindings;
            void 0 === i && (i = {}, r[t] = i), i[n] = e, e._cacheIndex = o.length, o.push(e)
        },
        _removeInactiveBinding: function(e)
        {
            var t = this._bindings,
                n = e.binding,
                r = n.rootNode.uuid,
                i = n.path,
                o = this._bindingsByRootAndName,
                a = o[r],
                s = t[t.length - 1],
                c = e._cacheIndex;
            s._cacheIndex = c, t[c] = s, t.pop(), delete a[i], 0 === Object.keys(a).length && delete o[r]
        },
        _lendBinding: function(e)
        {
            var t = this._bindings,
                n = e._cacheIndex,
                r = this._nActiveBindings++,
                i = t[r];
            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
        },
        _takeBackBinding: function(e)
        {
            var t = this._bindings,
                n = e._cacheIndex,
                r = --this._nActiveBindings,
                i = t[r];
            e._cacheIndex = r, t[r] = e, i._cacheIndex = n, t[n] = i
        },
        _lendControlInterpolant: function()
        {
            var e = this._controlInterpolants,
                t = this._nActiveControlInterpolants++,
                n = e[t];
            return void 0 === n && ((n = new Ed(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer)).__cacheIndex = t, e[t] = n), n
        },
        _takeBackControlInterpolant: function(e)
        {
            var t = this._controlInterpolants,
                n = e.__cacheIndex,
                r = --this._nActiveControlInterpolants,
                i = t[r];
            e.__cacheIndex = r, t[r] = e, i.__cacheIndex = n, t[n] = i
        },
        _controlInterpolantsResultBuffer: new Float32Array(1),
        clipAction: function(e, t)
        {
            var n = t || this._root,
                r = n.uuid,
                i = "string" == typeof e ? Id.findByName(n, e) : e,
                o = null !== i ? i.uuid : e,
                a = this._actionsByClip[o],
                s = null;
            if (void 0 !== a)
            {
                var c = a.actionByRoot[r];
                if (void 0 !== c) return c;
                s = a.knownActions[0], null === i && (i = s._clip)
            }
            if (null === i) return null;
            var u = new xm(this, i, t);
            return this._bindAction(u, s), this._addInactiveAction(u, o, r), u
        },
        existingAction: function(e, t)
        {
            var n = t || this._root,
                r = n.uuid,
                i = "string" == typeof e ? Id.findByName(n, e) : e,
                o = i ? i.uuid : e,
                a = this._actionsByClip[o];
            return void 0 !== a && a.actionByRoot[r] || null
        },
        stopAllAction: function()
        {
            var e = this._actions,
                t = this._nActiveActions,
                n = this._bindings,
                r = this._nActiveBindings;
            this._nActiveActions = 0, this._nActiveBindings = 0;
            for (var i = 0; i !== t; ++i) e[i].reset();
            for (i = 0; i !== r; ++i) n[i].useCount = 0;
            return this
        },
        update: function(e)
        {
            e *= this.timeScale;
            for (var t = this._actions, n = this._nActiveActions, r = this.time += e, i = Math.sign(e), o = this._accuIndex ^= 1, a = 0; a !== n; ++a)
            {
                t[a]._update(r, e, i, o)
            }
            var s = this._bindings,
                c = this._nActiveBindings;
            for (a = 0; a !== c; ++a) s[a].apply(o);
            return this
        },
        setTime: function(e)
        {
            this.time = 0;
            for (var t = 0; t < this._actions.length; t++) this._actions[t].time = 0;
            return this.update(e)
        },
        getRoot: function()
        {
            return this._root
        },
        uncacheClip: function(e)
        {
            var t = this._actions,
                n = e.uuid,
                r = this._actionsByClip,
                i = r[n];
            if (void 0 !== i)
            {
                for (var o = i.knownActions, a = 0, s = o.length; a !== s; ++a)
                {
                    var c = o[a];
                    this._deactivateAction(c);
                    var u = c._cacheIndex,
                        l = t[t.length - 1];
                    c._cacheIndex = null, c._byClipCacheIndex = null, l._cacheIndex = u, t[u] = l, t.pop(), this._removeInactiveBindingsForAction(c)
                }
                delete r[n]
            }
        },
        uncacheRoot: function(e)
        {
            var t = e.uuid,
                n = this._actionsByClip;
            for (var r in n)
            {
                var i = n[r].actionByRoot[t];
                void 0 !== i && (this._deactivateAction(i), this._removeInactiveAction(i))
            }
            var o = this._bindingsByRootAndName[t];
            if (void 0 !== o)
                for (var a in o)
                {
                    var s = o[a];
                    s.restoreOriginalState(), this._removeInactiveBinding(s)
                }
        },
        uncacheAction: function(e, t)
        {
            var n = this.existingAction(e, t);
            null !== n && (this._deactivateAction(n), this._removeInactiveAction(n))
        }
    }), Sm.prototype.clone = function()
    {
        return new Sm(void 0 === this.value.clone ? this.value : this.value.clone())
    }, Mm.prototype = Object.assign(Object.create(Yl.prototype),
    {
        constructor: Mm,
        isInstancedInterleavedBuffer: !0,
        copy: function(e)
        {
            return Yl.prototype.copy.call(this, e), this.meshPerAttribute = e.meshPerAttribute, this
        }
    }), Object.assign(function(e, t, n, r)
    {
        this.ray = new ps(e, t), this.near = n || 0, this.far = r || 1 / 0, this.camera = null, this.params = {
            Mesh:
            {},
            Line:
            {},
            LOD:
            {},
            Points:
            {
                threshold: 1
            },
            Sprite:
            {}
        }, Object.defineProperties(this.params,
        {
            PointCloud:
            {
                get: function()
                {
                    return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."), this.Points
                }
            }
        })
    }.prototype,
    {
        linePrecision: 1,
        set: function(e, t)
        {
            this.ray.set(e, t)
        },
        setFromCamera: function(e, t)
        {
            t && t.isPerspectiveCamera ? (this.ray.origin.setFromMatrixPosition(t.matrixWorld), this.ray.direction.set(e.x, e.y, .5).unproject(t).sub(this.ray.origin).normalize(), this.camera = t) : t && t.isOrthographicCamera ? (this.ray.origin.set(e.x, e.y, (t.near + t.far) / (t.near - t.far)).unproject(t), this.ray.direction.set(0, 0, -1).transformDirection(t.matrixWorld), this.camera = t) : console.error("THREE.Raycaster: Unsupported camera type.")
        },
        intersectObject: function(e, t, n)
        {
            var r = n || [];
            return km(e, this, r, t), r.sort(Tm), r
        },
        intersectObjects: function(e, t, n)
        {
            var r = n || [];
            if (!1 === Array.isArray(e)) return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."), r;
            for (var i = 0, o = e.length; i < o; i++) km(e[i], this, r, t);
            return r.sort(Tm), r
        }
    }), Object.assign(function(e, t, n)
    {
        return this.radius = void 0 !== e ? e : 1, this.phi = void 0 !== t ? t : 0, this.theta = void 0 !== n ? n : 0, this
    }.prototype,
    {
        set: function(e, t, n)
        {
            return this.radius = e, this.phi = t, this.theta = n, this
        },
        clone: function()
        {
            return (new this.constructor).copy(this)
        },
        copy: function(e)
        {
            return this.radius = e.radius, this.phi = e.phi, this.theta = e.theta, this
        },
        makeSafe: function()
        {
            return this.phi = Math.max(1e-6, Math.min(Math.PI - 1e-6, this.phi)), this
        },
        setFromVector3: function(e)
        {
            return this.setFromCartesianCoords(e.x, e.y, e.z)
        },
        setFromCartesianCoords: function(e, t, n)
        {
            return this.radius = Math.sqrt(e * e + t * t + n * n), 0 === this.radius ? (this.theta = 0, this.phi = 0) : (this.theta = Math.atan2(e, n), this.phi = Math.acos(na.clamp(t / this.radius, -1, 1))), this
        }
    }), Object.assign(function(e, t, n)
    {
        return this.radius = void 0 !== e ? e : 1, this.theta = void 0 !== t ? t : 0, this.y = void 0 !== n ? n : 0, this
    }.prototype,
    {
        set: function(e, t, n)
        {
            return this.radius = e, this.theta = t, this.y = n, this
        },
        clone: function()
        {
            return (new this.constructor).copy(this)
        },
        copy: function(e)
        {
            return this.radius = e.radius, this.theta = e.theta, this.y = e.y, this
        },
        setFromVector3: function(e)
        {
            return this.setFromCartesianCoords(e.x, e.y, e.z)
        },
        setFromCartesianCoords: function(e, t, n)
        {
            return this.radius = Math.sqrt(e * e + n * n), this.theta = Math.atan2(e, n), this.y = t, this
        }
    });
var Am = new ra;

function Cm(e, t)
{
    this.min = void 0 !== e ? e : new ra(1 / 0, 1 / 0), this.max = void 0 !== t ? t : new ra(-1 / 0, -1 / 0)
}
Object.assign(Cm.prototype,
{
    set: function(e, t)
    {
        return this.min.copy(e), this.max.copy(t), this
    },
    setFromPoints: function(e)
    {
        this.makeEmpty();
        for (var t = 0, n = e.length; t < n; t++) this.expandByPoint(e[t]);
        return this
    },
    setFromCenterAndSize: function(e, t)
    {
        var n = Am.copy(t).multiplyScalar(.5);
        return this.min.copy(e).sub(n), this.max.copy(e).add(n), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.min.copy(e.min), this.max.copy(e.max), this
    },
    makeEmpty: function()
    {
        return this.min.x = this.min.y = 1 / 0, this.max.x = this.max.y = -1 / 0, this
    },
    isEmpty: function()
    {
        return this.max.x < this.min.x || this.max.y < this.min.y
    },
    getCenter: function(e)
    {
        return void 0 === e && (console.warn("THREE.Box2: .getCenter() target is now required"), e = new ra), this.isEmpty() ? e.set(0, 0) : e.addVectors(this.min, this.max).multiplyScalar(.5)
    },
    getSize: function(e)
    {
        return void 0 === e && (console.warn("THREE.Box2: .getSize() target is now required"), e = new ra), this.isEmpty() ? e.set(0, 0) : e.subVectors(this.max, this.min)
    },
    expandByPoint: function(e)
    {
        return this.min.min(e), this.max.max(e), this
    },
    expandByVector: function(e)
    {
        return this.min.sub(e), this.max.add(e), this
    },
    expandByScalar: function(e)
    {
        return this.min.addScalar(-e), this.max.addScalar(e), this
    },
    containsPoint: function(e)
    {
        return !(e.x < this.min.x || e.x > this.max.x || e.y < this.min.y || e.y > this.max.y)
    },
    containsBox: function(e)
    {
        return this.min.x <= e.min.x && e.max.x <= this.max.x && this.min.y <= e.min.y && e.max.y <= this.max.y
    },
    getParameter: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Box2: .getParameter() target is now required"), t = new ra), t.set((e.x - this.min.x) / (this.max.x - this.min.x), (e.y - this.min.y) / (this.max.y - this.min.y))
    },
    intersectsBox: function(e)
    {
        return !(e.max.x < this.min.x || e.min.x > this.max.x || e.max.y < this.min.y || e.min.y > this.max.y)
    },
    clampPoint: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Box2: .clampPoint() target is now required"), t = new ra), t.copy(e).clamp(this.min, this.max)
    },
    distanceToPoint: function(e)
    {
        return Am.copy(e).clamp(this.min, this.max).sub(e).length()
    },
    intersect: function(e)
    {
        return this.min.max(e.min), this.max.min(e.max), this
    },
    union: function(e)
    {
        return this.min.min(e.min), this.max.max(e.max), this
    },
    translate: function(e)
    {
        return this.min.add(e), this.max.add(e), this
    },
    equals: function(e)
    {
        return e.min.equals(this.min) && e.max.equals(this.max)
    }
});
var Om = new sa,
    Pm = new sa;

function Rm(e, t)
{
    this.start = void 0 !== e ? e : new sa, this.end = void 0 !== t ? t : new sa
}

function Im(e)
{
    Ha.call(this), this.material = e, this.render = function() {}
}
Object.assign(Rm.prototype,
{
    set: function(e, t)
    {
        return this.start.copy(e), this.end.copy(t), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    },
    copy: function(e)
    {
        return this.start.copy(e.start), this.end.copy(e.end), this
    },
    getCenter: function(e)
    {
        return void 0 === e && (console.warn("THREE.Line3: .getCenter() target is now required"), e = new sa), e.addVectors(this.start, this.end).multiplyScalar(.5)
    },
    delta: function(e)
    {
        return void 0 === e && (console.warn("THREE.Line3: .delta() target is now required"), e = new sa), e.subVectors(this.end, this.start)
    },
    distanceSq: function()
    {
        return this.start.distanceToSquared(this.end)
    },
    distance: function()
    {
        return this.start.distanceTo(this.end)
    },
    at: function(e, t)
    {
        return void 0 === t && (console.warn("THREE.Line3: .at() target is now required"), t = new sa), this.delta(t).multiplyScalar(e).add(this.start)
    },
    closestPointToPointParameter: function(e, t)
    {
        Om.subVectors(e, this.start), Pm.subVectors(this.end, this.start);
        var n = Pm.dot(Pm),
            r = Pm.dot(Om) / n;
        return t && (r = na.clamp(r, 0, 1)), r
    },
    closestPointToPoint: function(e, t, n)
    {
        var r = this.closestPointToPointParameter(e, t);
        return void 0 === n && (console.warn("THREE.Line3: .closestPointToPoint() target is now required"), n = new sa), this.delta(n).multiplyScalar(r).add(this.start)
    },
    applyMatrix4: function(e)
    {
        return this.start.applyMatrix4(e), this.end.applyMatrix4(e), this
    },
    equals: function(e)
    {
        return e.start.equals(this.start) && e.end.equals(this.end)
    }
}), Im.prototype = Object.create(Ha.prototype), Im.prototype.constructor = Im, Im.prototype.isImmediateRenderObject = !0;
var Nm = new sa;

function Lm(e, t)
{
    Ha.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = t;
    for (var n = new sc, r = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1], i = 0, o = 1; i < 32; i++, o++)
    {
        var a = i / 32 * Math.PI * 2,
            s = o / 32 * Math.PI * 2;
        r.push(Math.cos(a), Math.sin(a), 1, Math.cos(s), Math.sin(s), 1)
    }
    n.setAttribute("position", new Xs(r, 3));
    var c = new Af(
    {
        fog: !1
    });
    this.cone = new jf(n, c), this.add(this.cone), this.update()
}
Lm.prototype = Object.create(Ha.prototype), Lm.prototype.constructor = Lm, Lm.prototype.dispose = function()
{
    this.cone.geometry.dispose(), this.cone.material.dispose()
}, Lm.prototype.update = function()
{
    this.light.updateMatrixWorld();
    var e = this.light.distance ? this.light.distance : 1e3,
        t = e * Math.tan(this.light.angle);
    this.cone.scale.set(t, t, e), Nm.setFromMatrixPosition(this.light.target.matrixWorld), this.cone.lookAt(Nm), void 0 !== this.color ? this.cone.material.color.set(this.color) : this.cone.material.color.copy(this.light.color)
};
var Bm = new sa,
    jm = new Sa,
    Fm = new Sa;

function Um(e)
{
    for (var t = function e(t)
        {
            var n = [];
            t && t.isBone && n.push(t);
            for (var r = 0; r < t.children.length; r++) n.push.apply(n, e(t.children[r]));
            return n
        }(e), n = new sc, r = [], i = [], o = new Is(0, 0, 1), a = new Is(0, 1, 0), s = 0; s < t.length; s++)
    {
        var c = t[s];
        c.parent && c.parent.isBone && (r.push(0, 0, 0), r.push(0, 0, 0), i.push(o.r, o.g, o.b), i.push(a.r, a.g, a.b))
    }
    n.setAttribute("position", new Xs(r, 3)), n.setAttribute("color", new Xs(i, 3));
    var u = new Af(
    {
        vertexColors: 2,
        depthTest: !1,
        depthWrite: !1,
        transparent: !0
    });
    jf.call(this, n, u), this.root = e, this.bones = t, this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1
}

function Dm(e, t, n)
{
    this.light = e, this.light.updateMatrixWorld(), this.color = n;
    var r = new $h(t, 4, 2),
        i = new Ds(
        {
            wireframe: !0,
            fog: !1
        });
    Mc.call(this, r, i), this.matrix = this.light.matrixWorld, this.matrixAutoUpdate = !1, this.update()
}
Um.prototype = Object.create(jf.prototype), Um.prototype.constructor = Um, Um.prototype.updateMatrixWorld = function(e)
{
    var t = this.bones,
        n = this.geometry,
        r = n.getAttribute("position");
    Fm.getInverse(this.root.matrixWorld);
    for (var i = 0, o = 0; i < t.length; i++)
    {
        var a = t[i];
        a.parent && a.parent.isBone && (jm.multiplyMatrices(Fm, a.matrixWorld), Bm.setFromMatrixPosition(jm), r.setXYZ(o, Bm.x, Bm.y, Bm.z), jm.multiplyMatrices(Fm, a.parent.matrixWorld), Bm.setFromMatrixPosition(jm), r.setXYZ(o + 1, Bm.x, Bm.y, Bm.z), o += 2)
    }
    n.getAttribute("position").needsUpdate = !0, Ha.prototype.updateMatrixWorld.call(this, e)
}, Dm.prototype = Object.create(Mc.prototype), Dm.prototype.constructor = Dm, Dm.prototype.dispose = function()
{
    this.geometry.dispose(), this.material.dispose()
}, Dm.prototype.update = function()
{
    void 0 !== this.color ? this.material.color.set(this.color) : this.material.color.copy(this.light.color)
};
var zm = new sa,
    Hm = new Is,
    Vm = new Is;

function Wm(e, t, n)
{
    Ha.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n;
    var r = new ih(t);
    r.rotateY(.5 * Math.PI), this.material = new Ds(
    {
        wireframe: !0,
        fog: !1
    }), void 0 === this.color && (this.material.vertexColors = 2);
    var i = r.getAttribute("position"),
        o = new Float32Array(3 * i.count);
    r.setAttribute("color", new Hs(o, 3)), this.add(new Mc(r, this.material)), this.update()
}

function Gm(e, t, n, r)
{
    e = e || 10, t = t || 10, n = new Is(void 0 !== n ? n : 4473924), r = new Is(void 0 !== r ? r : 8947848);
    for (var i = t / 2, o = e / t, a = e / 2, s = [], c = [], u = 0, l = 0, f = -a; u <= t; u++, f += o)
    {
        s.push(-a, 0, f, a, 0, f), s.push(f, 0, -a, f, 0, a);
        var h = u === i ? n : r;
        h.toArray(c, l), l += 3, h.toArray(c, l), l += 3, h.toArray(c, l), l += 3, h.toArray(c, l), l += 3
    }
    var d = new sc;
    d.setAttribute("position", new Xs(s, 3)), d.setAttribute("color", new Xs(c, 3));
    var p = new Af(
    {
        vertexColors: 2
    });
    jf.call(this, d, p)
}

function qm(e, t, n, r, i, o)
{
    e = e || 10, t = t || 16, n = n || 8, r = r || 64, i = new Is(void 0 !== i ? i : 4473924), o = new Is(void 0 !== o ? o : 8947848);
    var a, s, c, u, l, f, h, d = [],
        p = [];
    for (u = 0; u <= t; u++) c = u / t * (2 * Math.PI), a = Math.sin(c) * e, s = Math.cos(c) * e, d.push(0, 0, 0), d.push(a, 0, s), h = 1 & u ? i : o, p.push(h.r, h.g, h.b), p.push(h.r, h.g, h.b);
    for (u = 0; u <= n; u++)
        for (h = 1 & u ? i : o, f = e - e / n * u, l = 0; l < r; l++) c = l / r * (2 * Math.PI), a = Math.sin(c) * f, s = Math.cos(c) * f, d.push(a, 0, s), p.push(h.r, h.g, h.b), c = (l + 1) / r * (2 * Math.PI), a = Math.sin(c) * f, s = Math.cos(c) * f, d.push(a, 0, s), p.push(h.r, h.g, h.b);
    var m = new sc;
    m.setAttribute("position", new Xs(d, 3)), m.setAttribute("color", new Xs(p, 3));
    var v = new Af(
    {
        vertexColors: 2
    });
    jf.call(this, m, v)
}
Wm.prototype = Object.create(Ha.prototype), Wm.prototype.constructor = Wm, Wm.prototype.dispose = function()
{
    this.children[0].geometry.dispose(), this.children[0].material.dispose()
}, Wm.prototype.update = function()
{
    var e = this.children[0];
    if (void 0 !== this.color) this.material.color.set(this.color);
    else
    {
        var t = e.geometry.getAttribute("color");
        Hm.copy(this.light.color), Vm.copy(this.light.groundColor);
        for (var n = 0, r = t.count; n < r; n++)
        {
            var i = n < r / 2 ? Hm : Vm;
            t.setXYZ(n, i.r, i.g, i.b)
        }
        t.needsUpdate = !0
    }
    e.lookAt(zm.setFromMatrixPosition(this.light.matrixWorld).negate())
}, Gm.prototype = Object.assign(Object.create(jf.prototype),
{
    constructor: Gm,
    copy: function(e)
    {
        return jf.prototype.copy.call(this, e), this.geometry.copy(e.geometry), this.material.copy(e.material), this
    },
    clone: function()
    {
        return (new this.constructor).copy(this)
    }
}), qm.prototype = Object.create(jf.prototype), qm.prototype.constructor = qm;
var $m = new sa,
    Km = new sa,
    Ym = new sa;

function Xm(e, t, n)
{
    Ha.call(this), this.light = e, this.light.updateMatrixWorld(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.color = n, void 0 === t && (t = 1);
    var r = new sc;
    r.setAttribute("position", new Xs([-t, t, 0, t, t, 0, t, -t, 0, -t, -t, 0, -t, t, 0], 3));
    var i = new Af(
    {
        fog: !1
    });
    this.lightPlane = new Nf(r, i), this.add(this.lightPlane), (r = new sc).setAttribute("position", new Xs([0, 0, 0, 0, 0, 1], 3)), this.targetLine = new Nf(r, i), this.add(this.targetLine), this.update()
}
Xm.prototype = Object.create(Ha.prototype), Xm.prototype.constructor = Xm, Xm.prototype.dispose = function()
{
    this.lightPlane.geometry.dispose(), this.lightPlane.material.dispose(), this.targetLine.geometry.dispose(), this.targetLine.material.dispose()
}, Xm.prototype.update = function()
{
    $m.setFromMatrixPosition(this.light.matrixWorld), Km.setFromMatrixPosition(this.light.target.matrixWorld), Ym.subVectors(Km, $m), this.lightPlane.lookAt(Km), void 0 !== this.color ? (this.lightPlane.material.color.set(this.color), this.targetLine.material.color.set(this.color)) : (this.lightPlane.material.color.copy(this.light.color), this.targetLine.material.color.copy(this.light.color)), this.targetLine.lookAt(Km), this.targetLine.scale.z = Ym.length()
};
var Jm = new sa,
    Zm = new jc;

function Qm(e)
{
    var t = new sc,
        n = new Af(
        {
            color: 16777215,
            vertexColors: 1
        }),
        r = [],
        i = [],
        o = {},
        a = new Is(16755200),
        s = new Is(16711680),
        c = new Is(43775),
        u = new Is(16777215),
        l = new Is(3355443);

    function f(e, t, n)
    {
        h(e, n), h(t, n)
    }

    function h(e, t)
    {
        r.push(0, 0, 0), i.push(t.r, t.g, t.b), void 0 === o[e] && (o[e] = []), o[e].push(r.length / 3 - 1)
    }
    f("n1", "n2", a), f("n2", "n4", a), f("n4", "n3", a), f("n3", "n1", a), f("f1", "f2", a), f("f2", "f4", a), f("f4", "f3", a), f("f3", "f1", a), f("n1", "f1", a), f("n2", "f2", a), f("n3", "f3", a), f("n4", "f4", a), f("p", "n1", s), f("p", "n2", s), f("p", "n3", s), f("p", "n4", s), f("u1", "u2", c), f("u2", "u3", c), f("u3", "u1", c), f("c", "t", u), f("p", "c", l), f("cn1", "cn2", l), f("cn3", "cn4", l), f("cf1", "cf2", l), f("cf3", "cf4", l), t.setAttribute("position", new Xs(r, 3)), t.setAttribute("color", new Xs(i, 3)), jf.call(this, t, n), this.camera = e, this.camera.updateProjectionMatrix && this.camera.updateProjectionMatrix(), this.matrix = e.matrixWorld, this.matrixAutoUpdate = !1, this.pointMap = o, this.update()
}

function ev(e, t, n, r, i, o, a)
{
    Jm.set(i, o, a).unproject(r);
    var s = t[e];
    if (void 0 !== s)
        for (var c = n.getAttribute("position"), u = 0, l = s.length; u < l; u++) c.setXYZ(s[u], Jm.x, Jm.y, Jm.z)
}
Qm.prototype = Object.create(jf.prototype), Qm.prototype.constructor = Qm, Qm.prototype.update = function()
{
    var e = this.geometry,
        t = this.pointMap;
    Zm.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse), ev("c", t, e, Zm, 0, 0, -1), ev("t", t, e, Zm, 0, 0, 1), ev("n1", t, e, Zm, -1, -1, -1), ev("n2", t, e, Zm, 1, -1, -1), ev("n3", t, e, Zm, -1, 1, -1), ev("n4", t, e, Zm, 1, 1, -1), ev("f1", t, e, Zm, -1, -1, 1), ev("f2", t, e, Zm, 1, -1, 1), ev("f3", t, e, Zm, -1, 1, 1), ev("f4", t, e, Zm, 1, 1, 1), ev("u1", t, e, Zm, .7, 1.1, -1), ev("u2", t, e, Zm, -.7, 1.1, -1), ev("u3", t, e, Zm, 0, 2, -1), ev("cf1", t, e, Zm, -1, 0, 1), ev("cf2", t, e, Zm, 1, 0, 1), ev("cf3", t, e, Zm, 0, -1, 1), ev("cf4", t, e, Zm, 0, 1, 1), ev("cn1", t, e, Zm, -1, 0, -1), ev("cn2", t, e, Zm, 1, 0, -1), ev("cn3", t, e, Zm, 0, -1, -1), ev("cn4", t, e, Zm, 0, 1, -1), e.getAttribute("position").needsUpdate = !0
};
var tv = new rs;

function nv(e, t)
{
    this.object = e, void 0 === t && (t = 16776960);
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
        r = new Float32Array(24),
        i = new sc;
    i.setIndex(new Hs(n, 1)), i.setAttribute("position", new Hs(r, 3)), jf.call(this, i, new Af(
    {
        color: t
    })), this.matrixAutoUpdate = !1, this.update()
}

function rv(e, t)
{
    this.type = "Box3Helper", this.box = e, t = t || 16776960;
    var n = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]),
        r = new sc;
    r.setIndex(new Hs(n, 1)), r.setAttribute("position", new Xs([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1], 3)), jf.call(this, r, new Af(
    {
        color: t
    })), this.geometry.computeBoundingSphere()
}

function iv(e, t, n)
{
    this.type = "PlaneHelper", this.plane = e, this.size = void 0 === t ? 1 : t;
    var r = void 0 !== n ? n : 16776960,
        i = new sc;
    i.setAttribute("position", new Xs([1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0], 3)), i.computeBoundingSphere(), Nf.call(this, i, new Af(
    {
        color: r
    }));
    var o = new sc;
    o.setAttribute("position", new Xs([1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1], 3)), o.computeBoundingSphere(), this.add(new Mc(o, new Ds(
    {
        color: r,
        opacity: .2,
        transparent: !0,
        depthWrite: !1
    })))
}
nv.prototype = Object.create(jf.prototype), nv.prototype.constructor = nv, nv.prototype.update = function(e)
{
    if (void 0 !== e && console.warn("THREE.BoxHelper: .update() has no longer arguments."), void 0 !== this.object && tv.setFromObject(this.object), !tv.isEmpty())
    {
        var t = tv.min,
            n = tv.max,
            r = this.geometry.attributes.position,
            i = r.array;
        i[0] = n.x, i[1] = n.y, i[2] = n.z, i[3] = t.x, i[4] = n.y, i[5] = n.z, i[6] = t.x, i[7] = t.y, i[8] = n.z, i[9] = n.x, i[10] = t.y, i[11] = n.z, i[12] = n.x, i[13] = n.y, i[14] = t.z, i[15] = t.x, i[16] = n.y, i[17] = t.z, i[18] = t.x, i[19] = t.y, i[20] = t.z, i[21] = n.x, i[22] = t.y, i[23] = t.z, r.needsUpdate = !0, this.geometry.computeBoundingSphere()
    }
}, nv.prototype.setFromObject = function(e)
{
    return this.object = e, this.update(), this
}, nv.prototype.copy = function(e)
{
    return jf.prototype.copy.call(this, e), this.object = e.object, this
}, nv.prototype.clone = function()
{
    return (new this.constructor).copy(this)
}, rv.prototype = Object.create(jf.prototype), rv.prototype.constructor = rv, rv.prototype.updateMatrixWorld = function(e)
{
    var t = this.box;
    t.isEmpty() || (t.getCenter(this.position), t.getSize(this.scale), this.scale.multiplyScalar(.5), Ha.prototype.updateMatrixWorld.call(this, e))
}, iv.prototype = Object.create(Nf.prototype), iv.prototype.constructor = iv, iv.prototype.updateMatrixWorld = function(e)
{
    var t = -this.plane.constant;
    Math.abs(t) < 1e-8 && (t = 1e-8), this.scale.set(.5 * this.size, .5 * this.size, t), this.children[0].material.side = t < 0 ? 1 : 0, this.lookAt(this.plane.normal), Ha.prototype.updateMatrixWorld.call(this, e)
};
var ov, av, sv = new sa;

function cv(e, t, n, r, i, o)
{
    Ha.call(this), void 0 === e && (e = new sa(0, 0, 1)), void 0 === t && (t = new sa(0, 0, 0)), void 0 === n && (n = 1), void 0 === r && (r = 16776960), void 0 === i && (i = .2 * n), void 0 === o && (o = .2 * i), void 0 === ov && ((ov = new sc).setAttribute("position", new Xs([0, 0, 0, 0, 1, 0], 3)), (av = new rd(0, .5, 1, 5, 1)).translate(0, -.5, 0)), this.position.copy(t), this.line = new Nf(ov, new Af(
    {
        color: r
    })), this.line.matrixAutoUpdate = !1, this.add(this.line), this.cone = new Mc(av, new Ds(
    {
        color: r
    })), this.cone.matrixAutoUpdate = !1, this.add(this.cone), this.setDirection(e), this.setLength(n, i, o)
}

function uv(e)
{
    var t = [0, 0, 0, e = e || 1, 0, 0, 0, 0, 0, 0, e, 0, 0, 0, 0, 0, 0, e],
        n = new sc;
    n.setAttribute("position", new Xs(t, 3)), n.setAttribute("color", new Xs([1, 0, 0, 1, .6, 0, 0, 1, 0, .6, 1, 0, 0, 0, 1, 0, .6, 1], 3));
    var r = new Af(
    {
        vertexColors: 2
    });
    jf.call(this, n, r)
}
cv.prototype = Object.create(Ha.prototype), cv.prototype.constructor = cv, cv.prototype.setDirection = function(e)
{
    if (e.y > .99999) this.quaternion.set(0, 0, 0, 1);
    else if (e.y < -.99999) this.quaternion.set(1, 0, 0, 0);
    else
    {
        sv.set(e.z, 0, -e.x).normalize();
        var t = Math.acos(e.y);
        this.quaternion.setFromAxisAngle(sv, t)
    }
}, cv.prototype.setLength = function(e, t, n)
{
    void 0 === t && (t = .2 * e), void 0 === n && (n = .2 * t), this.line.scale.set(1, Math.max(1e-4, e - t), 1), this.line.updateMatrix(), this.cone.scale.set(n, t, n), this.cone.position.y = e, this.cone.updateMatrix()
}, cv.prototype.setColor = function(e)
{
    this.line.material.color.set(e), this.cone.material.color.set(e)
}, cv.prototype.copy = function(e)
{
    return Ha.prototype.copy.call(this, e, !1), this.line.copy(e.line), this.cone.copy(e.cone), this
}, cv.prototype.clone = function()
{
    return (new this.constructor).copy(this)
}, uv.prototype = Object.create(jf.prototype), uv.prototype.constructor = uv;
var lv, fv, hv, dv, pv = Math.pow(2, 8),
    mv = [.125, .215, .35, .446, .526, .582],
    vv = 5 + mv.length,
    gv = {
        3e3: 0,
        3001: 1,
        3002: 2,
        3004: 3,
        3005: 4,
        3006: 5,
        3007: 6
    },
    yv = new Ep,
    bv = (lv = 20, fv = new Float32Array(lv), hv = new sa(0, 1, 0), (dv = new ld(
    {
        defines:
        {
            n: lv
        },
        uniforms:
        {
            envMap:
            {
                value: null
            },
            samples:
            {
                value: 1
            },
            weights:
            {
                value: fv
            },
            latitudinal:
            {
                value: !1
            },
            dTheta:
            {
                value: 0
            },
            mipInt:
            {
                value: 0
            },
            poleAxis:
            {
                value: hv
            },
            inputEncoding:
            {
                value: gv[3e3]
            },
            outputEncoding:
            {
                value: gv[3e3]
            }
        },
        vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t",
        fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n".concat("\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t", "\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tfor (int i = 0; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfor (int dir = -1; dir < 2; dir += 2) {\n\t\t\tif (i == 0 && dir == 1)\n\t\t\t\tcontinue;\n\t\t\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\t\t\tif (all(equal(axis, vec3(0.0))))\n\t\t\t\taxis = cross(vec3(0.0, 1.0, 0.0), vOutputDirection);\n\t\t\taxis = normalize(axis);\n\t\t\tfloat theta = dTheta * float(dir * i);\n\t\t\tfloat cosTheta = cos(theta);\n\t\t\t// Rodrigues' axis-angle rotation\n\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t\t\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\t\t\tgl_FragColor.rgb +=\n\t\t\t\t\tweights[i] * bilinearCubeUV(envMap, sampleDirection, mipInt);\n\t\t}\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),
        blending: 0,
        depthTest: !1,
        depthWrite: !1
    })).type = "SphericalGaussianBlur", dv),
    wv = null,
    _v = null,
    {
        _lodPlanes: xv,
        _sizeLods: Ev,
        _sigmas: Sv
    } = function()
    {
        for (var e = [], t = [], n = [], r = 8, i = 0; i < vv; i++)
        {
            var o = Math.pow(2, r);
            t.push(o);
            var a = 1 / o;
            i > 4 ? a = mv[i - 8 + 4 - 1] : 0 == i && (a = 0), n.push(a);
            for (var s = 1 / (o - 1), c = -s / 2, u = 1 + s / 2, l = [c, c, u, c, u, u, c, c, u, u, c, u], f = new Float32Array(108), h = new Float32Array(72), d = new Float32Array(36), p = 0; p < 6; p++)
            {
                var m = p % 3 * 2 / 3 - 1,
                    v = p > 2 ? 0 : -1,
                    g = [m, v, 0, m + 2 / 3, v, 0, m + 2 / 3, v + 1, 0, m, v, 0, m + 2 / 3, v + 1, 0, m, v + 1, 0];
                f.set(g, 18 * p), h.set(l, 12 * p);
                var y = [p, p, p, p, p, p];
                d.set(y, 6 * p)
            }
            var b = new sc;
            b.setAttribute("position", new Hs(f, 3)), b.setAttribute("uv", new Hs(h, 2)), b.setAttribute("faceIndex", new Hs(d, 1)), e.push(b), r > 4 && r--
        }
        return {
            _lodPlanes: e,
            _sizeLods: t,
            _sigmas: n
        }
    }(),
    Mv = null,
    Tv = null,
    kv = (1 + Math.sqrt(5)) / 2,
    Av = 1 / kv,
    Cv = [new sa(1, 1, 1), new sa(-1, 1, 1), new sa(1, 1, -1), new sa(-1, 1, -1), new sa(0, kv, Av), new sa(0, kv, -Av), new sa(Av, 0, kv), new sa(-Av, 0, kv), new sa(kv, Av, 0), new sa(-kv, Av, 0)];

function Ov(e)
{
    Tv = e, Nv(bv)
}

function Pv(e)
{
    var t = {
            magFilter: 1003,
            minFilter: 1003,
            generateMipmaps: !1,
            type: e ? e.type : 1009,
            format: e ? e.format : 1023,
            encoding: e ? e.encoding : 3002,
            depthBuffer: !1,
            stencilBuffer: !1
        },
        n = Lv(t);
    return n.depthBuffer = !e, Mv = Lv(t), n
}

function Rv()
{
    Mv.dispose(), Tv.setRenderTarget(null);
    var e = Tv.getSize(new ra);
    Tv.setViewport(0, 0, e.x, e.y)
}

function Iv(e, t, n, r)
{
    var i = new Fc(90, 1, t, n),
        o = [1, 1, 1, 1, -1, 1],
        a = [1, 1, -1, -1, -1, 1],
        s = Tv.outputEncoding,
        c = Tv.toneMapping,
        u = Tv.toneMappingExposure,
        l = Tv.getClearColor(),
        f = Tv.getClearAlpha();
    Tv.toneMapping = 1, Tv.toneMappingExposure = 1, Tv.outputEncoding = 3e3, e.scale.z *= -1;
    var h = e.background;
    if (h && h.isColor)
    {
        h.convertSRGBToLinear();
        var d = Math.max(h.r, h.g, h.b),
            p = Math.min(Math.max(Math.ceil(Math.log2(d)), -128), 127);
        h = h.multiplyScalar(Math.pow(2, -p));
        var m = (p + 128) / 255;
        Tv.setClearColor(h, m), e.background = null
    }
    Tv.setRenderTarget(r);
    for (var v = 0; v < 6; v++)
    {
        var g = v % 3;
        0 == g ? (i.up.set(0, o[v], 0), i.lookAt(a[v], 0, 0)) : 1 == g ? (i.up.set(0, 0, o[v]), i.lookAt(0, a[v], 0)) : (i.up.set(0, o[v], 0), i.lookAt(0, 0, a[v])), Bv(g * pv, v > 2 ? pv : 0, pv, pv), Tv.render(e, i)
    }
    Tv.toneMapping = c, Tv.toneMappingExposure = u, Tv.outputEncoding = s, Tv.setClearColor(l, f), e.scale.z *= -1
}

function Nv(e)
{
    var t = new Va;
    t.add(new Mc(xv[0], e)), Tv.compile(t, yv)
}

function Lv(e)
{
    var t = new ma(3 * pv, 3 * pv, e);
    return t.texture.mapping = 306, t.texture.name = "PMREM.cubeUv", t.scissorTest = !0, t
}

function Bv(e, t, n, r)
{
    var i = 1 / Tv.getPixelRatio();
    e *= i, t *= i, n *= i, r *= i, Tv.setViewport(e, t, n, r), Tv.setScissor(e, t, n, r)
}

function jv(e)
{
    var t = Tv.autoClear;
    Tv.autoClear = !1;
    for (var n = 1; n < vv; n++)
    {
        Fv(e, n - 1, n, Math.sqrt(Sv[n] * Sv[n] - Sv[n - 1] * Sv[n - 1]), Cv[(n - 1) % Cv.length])
    }
    Tv.autoClear = t
}

function Fv(e, t, n, r, i)
{
    Uv(e, Mv, t, n, r, "latitudinal", i), Uv(Mv, e, n, n, r, "longitudinal", i)
}

function Uv(e, t, n, r, i, o, a)
{
    "latitudinal" !== o && "longitudinal" !== o && console.error("blur direction must be either latitudinal or longitudinal!");
    var s = new Va;
    s.add(new Mc(xv[r], bv));
    var c = bv.uniforms,
        u = Ev[n] - 1,
        l = isFinite(i) ? Math.PI / (2 * u) : 2 * Math.PI / 39,
        f = i / l,
        h = isFinite(i) ? 1 + Math.floor(3 * f) : 20;
    h > 20 && console.warn("sigmaRadians, ".concat(i, ", is too large and will clip, as it requested ").concat(h, " samples when the maximum is set to ").concat(20));
    for (var d = [], p = 0, m = 0; m < 20; ++m)
    {
        var v = m / f,
            g = Math.exp(-v * v / 2);
        d.push(g), 0 == m ? p += g : m < h && (p += 2 * g)
    }
    for (m = 0; m < d.length; m++) d[m] = d[m] / p;
    c.envMap.value = e.texture, c.samples.value = h, c.weights.value = d, c.latitudinal.value = "latitudinal" === o, a && (c.poleAxis.value = a), c.dTheta.value = l, c.mipInt.value = 8 - n, c.inputEncoding.value = gv[e.texture.encoding], c.outputEncoding.value = gv[e.texture.encoding];
    var y = Ev[r],
        b = (v = 3 * Math.max(0, pv - 2 * y), (0 === r ? 0 : 2 * pv) + 2 * y * (r > 4 ? r - 8 + 4 : 0));
    Tv.setRenderTarget(t), Bv(v, b, 3 * y, 2 * y), Tv.render(s, yv)
}

function Dv()
{
    var e = new ld(
    {
        uniforms:
        {
            envMap:
            {
                value: null
            },
            texelSize:
            {
                value: new ra(1, 1)
            },
            inputEncoding:
            {
                value: gv[3e3]
            },
            outputEncoding:
            {
                value: gv[3e3]
            }
        },
        vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t",
        fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n".concat("\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t", "\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),
        blending: 0,
        depthTest: !1,
        depthWrite: !1
    });
    return e.type = "EquirectangularToCubeUV", e
}

function zv()
{
    var e = new ld(
    {
        uniforms:
        {
            envMap:
            {
                value: null
            },
            inputEncoding:
            {
                value: gv[3e3]
            },
            outputEncoding:
            {
                value: gv[3e3]
            }
        },
        vertexShader: "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t",
        fragmentShader: "\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n".concat("\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t", "\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),
        blending: 0,
        depthTest: !1,
        depthWrite: !1
    });
    return e.type = "CubemapToCubeUV", e
}
Ov.prototype = {
    constructor: Ov,
    fromScene: function(e)
    {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
            n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : .1,
            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 100,
            i = Pv();
        return Iv(e, n, r, i), t > 0 && Fv(i, 0, 0, t), jv(i), Rv(), i.scissorTest = !1, i
    },
    fromEquirectangular: function(e)
    {
        return e.magFilter = 1003, e.minFilter = 1003, e.generateMipmaps = !1, this.fromCubemap(e)
    },
    fromCubemap: function(e)
    {
        var t = Pv(e);
        return function(e, t)
        {
            var n = new Va;
            e.isCubeTexture ? null == _v && (_v = zv()) : null == wv && (wv = Dv());
            var r = e.isCubeTexture ? _v : wv;
            n.add(new Mc(xv[0], r));
            var i = r.uniforms;
            i.envMap.value = e, e.isCubeTexture || i.texelSize.value.set(1 / e.image.width, 1 / e.image.height);
            i.inputEncoding.value = gv[e.encoding], i.outputEncoding.value = gv[e.encoding], Tv.setRenderTarget(t), Bv(0, 0, 3 * pv, 2 * pv), Tv.render(n, yv)
        }(e, t), jv(t), Rv(), t.scissorTest = !1, t
    },
    compileCubemapShader: function()
    {
        null == _v && Nv(_v = zv())
    },
    compileEquirectangularShader: function()
    {
        null == wv && Nv(wv = Dv())
    },
    dispose: function()
    {
        bv.dispose(), null != _v && _v.dispose(), null != wv && wv.dispose();
        for (var e = 0; e < xv.length; e++) xv[e].dispose()
    }
};

function Hv(e)
{
    console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."), tp.call(this, e), this.type = "catmullrom"
}
$d.create = function(e, t)
{
    return console.log("THREE.Curve.create() has been deprecated"), e.prototype = Object.create($d.prototype), e.prototype.constructor = e, e.prototype.getPoint = t, e
}, Object.assign(dp.prototype,
{
    createPointsGeometry: function(e)
    {
        console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var t = this.getPoints(e);
        return this.createGeometry(t)
    },
    createSpacedPointsGeometry: function(e)
    {
        console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        var t = this.getSpacedPoints(e);
        return this.createGeometry(t)
    },
    createGeometry: function(e)
    {
        console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");
        for (var t = new Rc, n = 0, r = e.length; n < r; n++)
        {
            var i = e[n];
            t.vertices.push(new sa(i.x, i.y, i.z || 0))
        }
        return t
    }
}), Object.assign(pp.prototype,
{
    fromPoints: function(e)
    {
        return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."), this.setFromPoints(e)
    }
}), Object.create(tp.prototype), Object.create(tp.prototype), Hv.prototype = Object.create(tp.prototype), Object.assign(Hv.prototype,
{
    initFromArray: function()
    {
        console.error("THREE.Spline: .initFromArray() has been removed.")
    },
    getControlPointsArray: function()
    {
        console.error("THREE.Spline: .getControlPointsArray() has been removed.")
    },
    reparametrizeByArcLength: function()
    {
        console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")
    }
}), Gm.prototype.setColors = function()
{
    console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")
}, Um.prototype.update = function()
{
    console.error("THREE.SkeletonHelper: update() no longer needs to be called.")
}, Object.assign(Fd.prototype,
{
    extractUrlBase: function(e)
    {
        return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."), Cp(e)
    }
}), Fd.Handlers = {
    add: function()
    {
        console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")
    },
    get: function()
    {
        console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")
    }
}, Object.assign(Np.prototype,
{
    setTexturePath: function(e)
    {
        return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."), this.setResourcePath(e)
    }
}), Object.assign(Cm.prototype,
{
    center: function(e)
    {
        return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."), this.getCenter(e)
    },
    empty: function()
    {
        return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."), this.isEmpty()
    },
    isIntersectionBox: function(e)
    {
        return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
    },
    size: function(e)
    {
        return console.warn("THREE.Box2: .size() has been renamed to .getSize()."), this.getSize(e)
    }
}), Object.assign(rs.prototype,
{
    center: function(e)
    {
        return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."), this.getCenter(e)
    },
    empty: function()
    {
        return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."), this.isEmpty()
    },
    isIntersectionBox: function(e)
    {
        return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
    },
    isIntersectionSphere: function(e)
    {
        return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
    },
    size: function(e)
    {
        return console.warn("THREE.Box3: .size() has been renamed to .getSize()."), this.getSize(e)
    }
}), Rm.prototype.center = function(e)
{
    return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."), this.getCenter(e)
}, Object.assign(na,
{
    random16: function()
    {
        return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."), Math.random()
    },
    nearestPowerOfTwo: function(e)
    {
        return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."), na.floorPowerOfTwo(e)
    },
    nextPowerOfTwo: function(e)
    {
        return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."), na.ceilPowerOfTwo(e)
    }
}), Object.assign(la.prototype,
{
    flattenToArrayOffset: function(e, t)
    {
        return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
    },
    multiplyVector3: function(e)
    {
        return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."), e.applyMatrix3(this)
    },
    multiplyVector3Array: function()
    {
        console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")
    },
    applyToBuffer: function(e)
    {
        return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(e)
    },
    applyToVector3Array: function()
    {
        console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")
    }
}), Object.assign(Sa.prototype,
{
    extractPosition: function(e)
    {
        return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."), this.copyPosition(e)
    },
    flattenToArrayOffset: function(e, t)
    {
        return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."), this.toArray(e, t)
    },
    getPosition: function()
    {
        return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."), (new sa).setFromMatrixColumn(this, 3)
    },
    setRotationFromQuaternion: function(e)
    {
        return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."), this.makeRotationFromQuaternion(e)
    },
    multiplyToArray: function()
    {
        console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")
    },
    multiplyVector3: function(e)
    {
        return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
    },
    multiplyVector4: function(e)
    {
        return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
    },
    multiplyVector3Array: function()
    {
        console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")
    },
    rotateAxis: function(e)
    {
        console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."), e.transformDirection(this)
    },
    crossVector: function(e)
    {
        return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."), e.applyMatrix4(this)
    },
    translate: function()
    {
        console.error("THREE.Matrix4: .translate() has been removed.")
    },
    rotateX: function()
    {
        console.error("THREE.Matrix4: .rotateX() has been removed.")
    },
    rotateY: function()
    {
        console.error("THREE.Matrix4: .rotateY() has been removed.")
    },
    rotateZ: function()
    {
        console.error("THREE.Matrix4: .rotateZ() has been removed.")
    },
    rotateByAxis: function()
    {
        console.error("THREE.Matrix4: .rotateByAxis() has been removed.")
    },
    applyToBuffer: function(e)
    {
        return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."), this.applyToBufferAttribute(e)
    },
    applyToVector3Array: function()
    {
        console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")
    },
    makeFrustum: function(e, t, n, r, i, o)
    {
        return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."), this.makePerspective(e, t, r, n, i, o)
    }
}), ys.prototype.isIntersectionLine = function(e)
{
    return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."), this.intersectsLine(e)
}, ia.prototype.multiplyVector3 = function(e)
{
    return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."), e.applyQuaternion(this)
}, Object.assign(ps.prototype,
{
    isIntersectionBox: function(e)
    {
        return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."), this.intersectsBox(e)
    },
    isIntersectionPlane: function(e)
    {
        return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."), this.intersectsPlane(e)
    },
    isIntersectionSphere: function(e)
    {
        return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."), this.intersectsSphere(e)
    }
}), Object.assign(Cs.prototype,
{
    area: function()
    {
        return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."), this.getArea()
    },
    barycoordFromPoint: function(e, t)
    {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), this.getBarycoord(e, t)
    },
    midpoint: function(e)
    {
        return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."), this.getMidpoint(e)
    },
    normal: function(e)
    {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), this.getNormal(e)
    },
    plane: function(e)
    {
        return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."), this.getPlane(e)
    }
}), Object.assign(Cs,
{
    barycoordFromPoint: function(e, t, n, r, i)
    {
        return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."), Cs.getBarycoord(e, t, n, r, i)
    },
    normal: function(e, t, n, r)
    {
        return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."), Cs.getNormal(e, t, n, r)
    }
}), Object.assign(mp.prototype,
{
    extractAllPoints: function(e)
    {
        return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."), this.extractPoints(e)
    },
    extrude: function(e)
    {
        return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."), new Dh(this, e)
    },
    makeGeometry: function(e)
    {
        return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."), new Zh(this, e)
    }
}), Object.assign(ra.prototype,
{
    fromAttribute: function(e, t, n)
    {
        return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
    },
    distanceToManhattan: function(e)
    {
        return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
    },
    lengthManhattan: function()
    {
        return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
    }
}), Object.assign(sa.prototype,
{
    setEulerFromRotationMatrix: function()
    {
        console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")
    },
    setEulerFromQuaternion: function()
    {
        console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")
    },
    getPositionFromMatrix: function(e)
    {
        return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."), this.setFromMatrixPosition(e)
    },
    getScaleFromMatrix: function(e)
    {
        return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."), this.setFromMatrixScale(e)
    },
    getColumnFromMatrix: function(e, t)
    {
        return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."), this.setFromMatrixColumn(t, e)
    },
    applyProjection: function(e)
    {
        return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."), this.applyMatrix4(e)
    },
    fromAttribute: function(e, t, n)
    {
        return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
    },
    distanceToManhattan: function(e)
    {
        return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."), this.manhattanDistanceTo(e)
    },
    lengthManhattan: function()
    {
        return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
    }
}), Object.assign(pa.prototype,
{
    fromAttribute: function(e, t, n)
    {
        return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."), this.fromBufferAttribute(e, t, n)
    },
    lengthManhattan: function()
    {
        return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."), this.manhattanLength()
    }
}), Object.assign(Rc.prototype,
{
    computeTangents: function()
    {
        console.error("THREE.Geometry: .computeTangents() has been removed.")
    },
    computeLineDistances: function()
    {
        console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")
    }
}), Object.assign(Ha.prototype,
{
    getChildByName: function(e)
    {
        return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."), this.getObjectByName(e)
    },
    renderDepth: function()
    {
        console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")
    },
    translate: function(e, t)
    {
        return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."), this.translateOnAxis(t, e)
    },
    getWorldRotation: function()
    {
        console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")
    }
}), Object.defineProperties(Ha.prototype,
{
    eulerOrder:
    {
        get: function()
        {
            return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order
        },
        set: function(e)
        {
            console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."), this.rotation.order = e
        }
    },
    useQuaternion:
    {
        get: function()
        {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        },
        set: function()
        {
            console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")
        }
    }
}), Object.assign(Mc.prototype,
{
    setDrawMode: function()
    {
        console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
    }
}), Object.defineProperties(Mc.prototype,
{
    drawMode:
    {
        get: function()
        {
            return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."), 0
        },
        set: function()
        {
            console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")
        }
    }
}), Object.defineProperties(gf.prototype,
{
    objects:
    {
        get: function()
        {
            return console.warn("THREE.LOD: .objects has been renamed to .levels."), this.levels
        }
    }
}), Object.defineProperty(_f.prototype, "useVertexTexture",
{
    get: function()
    {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.")
    },
    set: function()
    {
        console.warn("THREE.Skeleton: useVertexTexture has been removed.")
    }
}), yf.prototype.initBones = function()
{
    console.error("THREE.SkinnedMesh: initBones() has been removed.")
}, Object.defineProperty($d.prototype, "__arcLengthDivisions",
{
    get: function()
    {
        return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions
    },
    set: function(e)
    {
        console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."), this.arcLengthDivisions = e
    }
}), Fc.prototype.setLens = function(e, t)
{
    console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."), void 0 !== t && (this.filmGauge = t), this.setFocalLength(e)
}, Object.defineProperties(vp.prototype,
{
    onlyShadow:
    {
        set: function()
        {
            console.warn("THREE.Light: .onlyShadow has been removed.")
        }
    },
    shadowCameraFov:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."), this.shadow.camera.fov = e
        }
    },
    shadowCameraLeft:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."), this.shadow.camera.left = e
        }
    },
    shadowCameraRight:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."), this.shadow.camera.right = e
        }
    },
    shadowCameraTop:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."), this.shadow.camera.top = e
        }
    },
    shadowCameraBottom:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."), this.shadow.camera.bottom = e
        }
    },
    shadowCameraNear:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."), this.shadow.camera.near = e
        }
    },
    shadowCameraFar:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."), this.shadow.camera.far = e
        }
    },
    shadowCameraVisible:
    {
        set: function()
        {
            console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")
        }
    },
    shadowBias:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowBias is now .shadow.bias."), this.shadow.bias = e
        }
    },
    shadowDarkness:
    {
        set: function()
        {
            console.warn("THREE.Light: .shadowDarkness has been removed.")
        }
    },
    shadowMapWidth:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."), this.shadow.mapSize.width = e
        }
    },
    shadowMapHeight:
    {
        set: function(e)
        {
            console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."), this.shadow.mapSize.height = e
        }
    }
}), Object.defineProperties(Hs.prototype,
{
    length:
    {
        get: function()
        {
            return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."), this.array.length
        }
    },
    dynamic:
    {
        get: function()
        {
            return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), 35048 === this.usage
        },
        set: function()
        {
            console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."), this.setUsage(35048)
        }
    }
}), Object.assign(Hs.prototype,
{
    setDynamic: function(e)
    {
        return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? 35048 : 35044), this
    },
    copyIndicesArray: function()
    {
        console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")
    },
    setArray: function()
    {
        console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
    }
}), Object.assign(sc.prototype,
{
    addIndex: function(e)
    {
        console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."), this.setIndex(e)
    },
    addAttribute: function(e, t)
    {
        return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."), t && t.isBufferAttribute || t && t.isInterleavedBufferAttribute ? "index" === e ? (console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."), this.setIndex(t), this) : this.setAttribute(e, t) : (console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."), this.setAttribute(e, new Hs(arguments[1], arguments[2])))
    },
    addDrawCall: function(e, t, n)
    {
        void 0 !== n && console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."), console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."), this.addGroup(e, t)
    },
    clearDrawCalls: function()
    {
        console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."), this.clearGroups()
    },
    computeTangents: function()
    {
        console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")
    },
    computeOffsets: function()
    {
        console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")
    },
    removeAttribute: function(e)
    {
        return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."), this.deleteAttribute(e)
    }
}), Object.defineProperties(sc.prototype,
{
    drawcalls:
    {
        get: function()
        {
            return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."), this.groups
        }
    },
    offsets:
    {
        get: function()
        {
            return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."), this.groups
        }
    }
}), Object.defineProperties(Yl.prototype,
{
    dynamic:
    {
        get: function()
        {
            return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."), 35048 === this.usage
        },
        set: function(e)
        {
            console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."), this.setUsage(e)
        }
    }
}), Object.assign(Yl.prototype,
{
    setDynamic: function(e)
    {
        return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."), this.setUsage(!0 === e ? 35048 : 35044), this
    },
    setArray: function()
    {
        console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")
    }
}), Object.assign(zh.prototype,
{
    getArrays: function()
    {
        console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")
    },
    addShapeList: function()
    {
        console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")
    },
    addShape: function()
    {
        console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")
    }
}), Object.defineProperties(Sm.prototype,
{
    dynamic:
    {
        set: function()
        {
            console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")
        }
    },
    onUpdate:
    {
        value: function()
        {
            return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."), this
        }
    }
}), Object.defineProperties(Us.prototype,
{
    wrapAround:
    {
        get: function()
        {
            console.warn("THREE.Material: .wrapAround has been removed.")
        },
        set: function()
        {
            console.warn("THREE.Material: .wrapAround has been removed.")
        }
    },
    overdraw:
    {
        get: function()
        {
            console.warn("THREE.Material: .overdraw has been removed.")
        },
        set: function()
        {
            console.warn("THREE.Material: .overdraw has been removed.")
        }
    },
    wrapRGB:
    {
        get: function()
        {
            return console.warn("THREE.Material: .wrapRGB has been removed."), new Is
        }
    },
    shading:
    {
        get: function()
        {
            console.error("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead.")
        },
        set: function(e)
        {
            console.warn("THREE." + this.type + ": .shading has been removed. Use the boolean .flatShading instead."), this.flatShading = 1 === e
        }
    },
    stencilMask:
    {
        get: function()
        {
            return console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask
        },
        set: function(e)
        {
            console.warn("THREE." + this.type + ": .stencilMask has been removed. Use .stencilFuncMask instead."), this.stencilFuncMask = e
        }
    }
}), Object.defineProperties(dd.prototype,
{
    metal:
    {
        get: function()
        {
            return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."), !1
        },
        set: function()
        {
            console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")
        }
    }
}), Object.defineProperties(Bc.prototype,
{
    derivatives:
    {
        get: function()
        {
            return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives
        },
        set: function(e)
        {
            console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."), this.extensions.derivatives = e
        }
    }
}), Object.assign(ql.prototype,
{
    clearTarget: function(e, t, n, r)
    {
        console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."), this.setRenderTarget(e), this.clear(t, n, r)
    },
    animate: function(e)
    {
        console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."), this.setAnimationLoop(e)
    },
    getCurrentRenderTarget: function()
    {
        return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."), this.getRenderTarget()
    },
    getMaxAnisotropy: function()
    {
        return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."), this.capabilities.getMaxAnisotropy()
    },
    getPrecision: function()
    {
        return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."), this.capabilities.precision
    },
    resetGLState: function()
    {
        return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."), this.state.reset()
    },
    supportsFloatTextures: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."), this.extensions.get("OES_texture_float")
    },
    supportsHalfFloatTextures: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."), this.extensions.get("OES_texture_half_float")
    },
    supportsStandardDerivatives: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."), this.extensions.get("OES_standard_derivatives")
    },
    supportsCompressedTextureS3TC: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."), this.extensions.get("WEBGL_compressed_texture_s3tc")
    },
    supportsCompressedTexturePVRTC: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."), this.extensions.get("WEBGL_compressed_texture_pvrtc")
    },
    supportsBlendMinMax: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."), this.extensions.get("EXT_blend_minmax")
    },
    supportsVertexTextures: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."), this.capabilities.vertexTextures
    },
    supportsInstancedArrays: function()
    {
        return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."), this.extensions.get("ANGLE_instanced_arrays")
    },
    enableScissorTest: function(e)
    {
        console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."), this.setScissorTest(e)
    },
    initMaterial: function()
    {
        console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")
    },
    addPrePlugin: function()
    {
        console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")
    },
    addPostPlugin: function()
    {
        console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")
    },
    updateShadowMap: function()
    {
        console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")
    },
    setFaceCulling: function()
    {
        console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")
    },
    allocTextureUnit: function()
    {
        console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")
    },
    setTexture: function()
    {
        console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")
    },
    setTexture2D: function()
    {
        console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")
    },
    setTextureCube: function()
    {
        console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")
    },
    getActiveMipMapLevel: function()
    {
        return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."), this.getActiveMipmapLevel()
    }
}), Object.defineProperties(ql.prototype,
{
    shadowMapEnabled:
    {
        get: function()
        {
            return this.shadowMap.enabled
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."), this.shadowMap.enabled = e
        }
    },
    shadowMapType:
    {
        get: function()
        {
            return this.shadowMap.type
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."), this.shadowMap.type = e
        }
    },
    shadowMapCullFace:
    {
        get: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
        },
        set: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")
        }
    },
    context:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."), this.getContext()
        }
    },
    vr:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"), this.xr
        }
    },
    gammaInput:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."), !1
        },
        set: function()
        {
            console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")
        }
    },
    gammaOutput:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), !1
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."), this.outputEncoding = !0 === e ? 3001 : 3e3
        }
    }
}), Object.defineProperties(jl.prototype,
{
    cullFace:
    {
        get: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
        },
        set: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")
        }
    },
    renderReverseSided:
    {
        get: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
        },
        set: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")
        }
    },
    renderSingleSided:
    {
        get: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
        },
        set: function()
        {
            console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")
        }
    }
}), Object.defineProperties(Dc.prototype,
{
    activeCubeFace:
    {
        set: function()
        {
            console.warn("THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().")
        }
    },
    activeMipMapLevel:
    {
        set: function()
        {
            console.warn("THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().")
        }
    }
}), Object.defineProperties(ma.prototype,
{
    wrapS:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."), this.texture.wrapS = e
        }
    },
    wrapT:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."), this.texture.wrapT = e
        }
    },
    magFilter:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."), this.texture.magFilter = e
        }
    },
    minFilter:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."), this.texture.minFilter = e
        }
    },
    anisotropy:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."), this.texture.anisotropy = e
        }
    },
    offset:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."), this.texture.offset = e
        }
    },
    repeat:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."), this.texture.repeat = e
        }
    },
    format:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."), this.texture.format = e
        }
    },
    type:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."), this.texture.type = e
        }
    },
    generateMipmaps:
    {
        get: function()
        {
            return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps
        },
        set: function(e)
        {
            console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."), this.texture.generateMipmaps = e
        }
    }
}), Object.defineProperties(im.prototype,
{
    load:
    {
        value: function(e)
        {
            console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");
            var t = this;
            return (new Gp).load(e, (function(e)
            {
                t.setBuffer(e)
            })), this
        }
    },
    startTime:
    {
        set: function()
        {
            console.warn("THREE.Audio: .startTime is now .play( delay ).")
        }
    }
}), lm.prototype.getData = function()
{
    return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."), this.getFrequencyData()
}, Uc.prototype.updateCubeMap = function(e, t)
{
    return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."), this.update(e, t)
};
fa.crossOrigin = void 0, fa.loadTexture = function(e, t, n, r)
{
    console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");
    var i = new qd;
    i.setCrossOrigin(this.crossOrigin);
    var o = i.load(e, n, void 0, r);
    return t && (o.mapping = t), o
}, fa.loadTextureCube = function(e, t, n, r)
{
    console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");
    var i = new Gd;
    i.setCrossOrigin(this.crossOrigin);
    var o = i.load(e, n, void 0, r);
    return t && (o.mapping = t), o
}, fa.loadCompressedTexture = function()
{
    console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")
}, fa.loadCompressedTextureCube = function()
{
    console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")
};
"undefined" != typeof __THREE_DEVTOOLS__ && __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",
{
    detail:
    {
        revision: "112"
    }
}));
var Vv = n(150),
    Wv = n.n(Vv);

function Gv(e, t)
{
    Object.keys(t).forEach((function(n)
    {
        e[n] = t[n]
    }))
}

function qv(e, t)
{
    var n = Wv()(e).format(t);
    return "NaN" === n ? Wv()(0).format(t) : n
}
var $v = n(111),
    Kv = n(649),
    Yv = n(271);
var Xv = "undefined" != typeof window ? o.useLayoutEffect : o.useEffect;
var Jv = o.forwardRef((function(e, t)
{
    var n = e.children,
        r = e.container,
        i = e.disablePortal,
        a = void 0 !== i && i,
        c = e.onRendered,
        u = o.useState(null),
        l = u[0],
        f = u[1],
        h = sr(o.isValidElement(n) ? n.ref : null, t);
    return Xv((function()
    {
        a || f(function(e)
        {
            return e = "function" == typeof e ? e() : e, s.findDOMNode(e)
        }(r) || document.body)
    }), [r, a]), Xv((function()
    {
        if (l && !a) return ar(t, l),
            function()
            {
                ar(t, null)
            }
    }), [t, l, a]), Xv((function()
    {
        c && (l || a) && c()
    }), [c, l, a]), a ? o.isValidElement(n) ? o.cloneElement(n,
    {
        ref: h
    }) : n : l ? s.createPortal(n, l) : l
}));

function Zv(e)
{
    return "function" == typeof e ? e() : e
}
var Qv = "undefined" != typeof window ? o.useLayoutEffect : o.useEffect,
    eg = {},
    tg = o.forwardRef((function(e, t)
    {
        var n = e.anchorEl,
            r = e.children,
            i = e.container,
            a = e.disablePortal,
            s = void 0 !== a && a,
            c = e.keepMounted,
            u = void 0 !== c && c,
            l = e.modifiers,
            f = e.open,
            h = e.placement,
            d = void 0 === h ? "bottom" : h,
            p = e.popperOptions,
            m = void 0 === p ? eg : p,
            v = e.popperRef,
            g = e.transition,
            y = void 0 !== g && g,
            b = Object(er.a)(e, ["anchorEl", "children", "container", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "transition"]),
            w = o.useRef(null),
            _ = sr(w, t),
            x = o.useRef(null),
            E = sr(x, v),
            S = o.useRef(E);
        Qv((function()
        {
            S.current = E
        }), [E]), o.useImperativeHandle(v, (function()
        {
            return x.current
        }), []);
        var M = o.useState(!0),
            T = M[0],
            k = M[1],
            A = function(e, t)
            {
                if ("ltr" === (t && t.direction || "ltr")) return e;
                switch (e)
                {
                    case "bottom-end":
                        return "bottom-start";
                    case "bottom-start":
                        return "bottom-end";
                    case "top-end":
                        return "top-start";
                    case "top-start":
                        return "top-end";
                    default:
                        return e
                }
            }(d, Object(Nt.a)()),
            C = o.useState(A),
            O = C[0],
            P = C[1];
        o.useEffect((function()
        {
            x.current && x.current.update()
        }));
        var R = o.useCallback((function()
            {
                if (w.current && n && f)
                {
                    x.current && (x.current.destroy(), S.current(null));
                    var e = function(e)
                        {
                            P(e.placement)
                        },
                        t = (Zv(n), new Yv.a(Zv(n), w.current, Object(H.a)(
                        {
                            placement: A
                        }, m,
                        {
                            modifiers: Object(H.a)(
                            {}, s ?
                            {} :
                            {
                                preventOverflow:
                                {
                                    boundariesElement: "window"
                                }
                            },
                            {}, l,
                            {}, m.modifiers),
                            onCreate: dr(e, m.onCreate),
                            onUpdate: dr(e, m.onUpdate)
                        })));
                    S.current(t)
                }
            }), [n, s, l, f, A, m]),
            I = o.useCallback((function(e)
            {
                ar(_, e), R()
            }), [_, R]),
            N = function()
            {
                x.current && (x.current.destroy(), S.current(null))
            };
        if (o.useEffect((function()
            {
                R()
            }), [R]), o.useEffect((function()
            {
                return function()
                {
                    N()
                }
            }), []), o.useEffect((function()
            {
                f || y || N()
            }), [f, y]), !u && !f && (!y || T)) return null;
        var L = {
            placement: O
        };
        return y && (L.TransitionProps = {
            in: f,
            onEnter: function()
            {
                k(!1)
            },
            onExited: function()
            {
                k(!0), N()
            }
        }), o.createElement(Jv,
        {
            disablePortal: s,
            container: i
        }, o.createElement("div", Object(H.a)(
        {
            ref: I,
            role: "tooltip"
        }, b,
        {
            style: Object(H.a)(
            {
                position: "fixed",
                top: 0,
                left: 0
            }, b.style)
        }), "function" == typeof r ? r(L) : r))
    }));

function ng(e)
{
    return Math.round(1e5 * e) / 1e5
}
var rg = !1,
    ig = null;
var og = o.forwardRef((function(e, t)
    {
        var n = e.arrow,
            r = void 0 !== n && n,
            i = e.children,
            a = e.classes,
            c = e.disableFocusListener,
            u = void 0 !== c && c,
            l = e.disableHoverListener,
            f = void 0 !== l && l,
            h = e.disableTouchListener,
            d = void 0 !== h && h,
            p = e.enterDelay,
            m = void 0 === p ? 100 : p,
            v = e.enterNextDelay,
            g = void 0 === v ? 0 : v,
            y = e.enterTouchDelay,
            b = void 0 === y ? 700 : y,
            w = e.id,
            _ = e.interactive,
            x = void 0 !== _ && _,
            E = e.leaveDelay,
            S = void 0 === E ? 0 : E,
            M = e.leaveTouchDelay,
            T = void 0 === M ? 1500 : M,
            k = e.onClose,
            A = e.onOpen,
            C = e.open,
            O = e.placement,
            P = void 0 === O ? "bottom" : O,
            R = e.PopperProps,
            I = e.title,
            N = e.TransitionComponent,
            L = void 0 === N ? Tr : N,
            B = e.TransitionProps,
            j = Object(er.a)(e, ["arrow", "children", "classes", "disableFocusListener", "disableHoverListener", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "id", "interactive", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "PopperProps", "title", "TransitionComponent", "TransitionProps"]),
            F = wr(),
            U = o.useState(),
            D = U[0],
            z = U[1],
            V = o.useState(null),
            W = V[0],
            G = V[1],
            q = o.useRef(!1),
            $ = o.useRef(),
            K = o.useRef(),
            Y = o.useRef(),
            X = o.useRef(),
            J = function(e)
            {
                var t = e.controlled,
                    n = e.default,
                    r = (e.name, o.useRef(void 0 !== t).current),
                    i = o.useState(n),
                    a = i[0],
                    s = i[1];
                return [r ? t : a, o.useCallback((function(e)
                {
                    r || s(e)
                }), [])]
            }(
            {
                controlled: C,
                default: !1,
                name: "Tooltip"
            }),
            Z = Object($v.a)(J, 2),
            Q = Z[0],
            ee = Z[1],
            te = Q,
            ne = o.useState(),
            re = ne[0],
            ie = ne[1],
            oe = w || re;
        o.useEffect((function()
        {
            te && !re && ie("mui-tooltip-".concat(Math.round(1e5 * Math.random())))
        }), [te, re]), o.useEffect((function()
        {
            return function()
            {
                clearTimeout($.current), clearTimeout(K.current), clearTimeout(Y.current), clearTimeout(X.current)
            }
        }), []);
        var ae = function(e)
            {
                clearTimeout(ig), rg = !0, ee(!0), A && A(e)
            },
            se = function(e)
            {
                var t = i.props;
                "mouseover" === e.type && t.onMouseOver && e.currentTarget === D && t.onMouseOver(e), q.current && "touchstart" !== e.type || (D && D.removeAttribute("title"), clearTimeout(K.current), clearTimeout(Y.current), m || rg && g ? (e.persist(), K.current = setTimeout((function()
                {
                    ae(e)
                }), rg ? g : m)) : ae(e))
            },
            ce = Gr(),
            ue = ce.isFocusVisible,
            le = ce.onBlurVisible,
            fe = ce.ref,
            he = o.useState(!1),
            de = he[0],
            pe = he[1],
            me = function(e)
            {
                clearTimeout(ig), ig = setTimeout((function()
                {
                    rg = !1
                }), 800 + S), ee(!1), k && k(e), clearTimeout($.current), $.current = setTimeout((function()
                {
                    q.current = !1
                }), F.transitions.duration.shortest)
            },
            ve = function(e)
            {
                var t = i.props;
                "blur" === e.type && (t.onBlur && e.currentTarget === D && t.onBlur(e), de && (pe(!1), le())), "mouseleave" === e.type && t.onMouseLeave && e.currentTarget === D && t.onMouseLeave(e), clearTimeout(K.current), clearTimeout(Y.current), e.persist(), Y.current = setTimeout((function()
                {
                    me(e)
                }), S)
            },
            ge = sr(z, t),
            ye = sr(fe, ge),
            be = o.useCallback((function(e)
            {
                ar(ye, s.findDOMNode(e))
            }), [ye]),
            we = sr(i.ref, be);
        "" === I && (te = !1);
        var _e = !te && !f,
            xe = Object(H.a)(
            {
                "aria-describedby": te ? oe : null,
                title: _e && "string" == typeof I ? I : null
            }, j,
            {}, i.props,
            {
                className: Object(nr.default)(j.className, i.props.className)
            });
        d || (xe.onTouchStart = function(e)
        {
            q.current = !0;
            var t = i.props;
            t.onTouchStart && t.onTouchStart(e), clearTimeout(Y.current), clearTimeout($.current), clearTimeout(X.current), e.persist(), X.current = setTimeout((function()
            {
                se(e)
            }), b)
        }, xe.onTouchEnd = function(e)
        {
            i.props.onTouchEnd && i.props.onTouchEnd(e), clearTimeout(X.current), clearTimeout(Y.current), e.persist(), Y.current = setTimeout((function()
            {
                me(e)
            }), T)
        }), f || (xe.onMouseOver = se, xe.onMouseLeave = ve), u || (xe.onFocus = function(e)
        {
            D || z(e.currentTarget), ue(e) && (pe(!0), se(e));
            var t = i.props;
            t.onFocus && e.currentTarget === D && t.onFocus(e)
        }, xe.onBlur = ve);
        var Ee = x ?
        {
            onMouseOver: xe.onMouseOver,
            onMouseLeave: xe.onMouseLeave,
            onFocus: xe.onFocus,
            onBlur: xe.onBlur
        } :
        {};
        var Se = o.useMemo((function()
        {
            return Object(Kv.a)(
            {
                popperOptions:
                {
                    modifiers:
                    {
                        arrow:
                        {
                            enabled: Boolean(W),
                            element: W
                        }
                    }
                }
            }, R)
        }), [W, R]);
        return o.createElement(o.Fragment, null, o.cloneElement(i, Object(H.a)(
        {
            ref: we
        }, xe)), o.createElement(tg, Object(H.a)(
        {
            className: Object(nr.default)(a.popper, x && a.popperInteractive, r && a.popperArrow),
            placement: P,
            anchorEl: D,
            open: !!D && te,
            id: xe["aria-describedby"],
            transition: !0
        }, Ee, Se), (function(e)
        {
            var t = e.placement,
                n = e.TransitionProps;
            return o.createElement(L, Object(H.a)(
            {
                timeout: F.transitions.duration.shorter
            }, n, B), o.createElement("div",
            {
                className: Object(nr.default)(a.tooltip, a["tooltipPlacement".concat(Object(hr.a)(t.split("-")[0]))], q.current && a.touch, r && a.tooltipArrow)
            }, I, r ? o.createElement("span",
            {
                className: a.arrow,
                ref: G
            }) : null))
        })))
    })),
    ag = Object(rr.a)((function(e)
    {
        return {
            popper:
            {
                zIndex: e.zIndex.tooltip,
                pointerEvents: "none",
                flip: !1
            },
            popperInteractive:
            {
                pointerEvents: "auto"
            },
            popperArrow:
            {
                '&[x-placement*="bottom"] $arrow':
                {
                    flip: !1,
                    top: 0,
                    left: 0,
                    marginTop: "-0.95em",
                    marginLeft: 4,
                    marginRight: 4,
                    width: "2em",
                    height: "1em",
                    "&::before":
                    {
                        flip: !1,
                        borderWidth: "0 1em 1em 1em",
                        borderColor: "transparent transparent currentcolor transparent"
                    }
                },
                '&[x-placement*="top"] $arrow':
                {
                    flip: !1,
                    bottom: 0,
                    left: 0,
                    marginBottom: "-0.95em",
                    marginLeft: 4,
                    marginRight: 4,
                    width: "2em",
                    height: "1em",
                    "&::before":
                    {
                        flip: !1,
                        borderWidth: "1em 1em 0 1em",
                        borderColor: "currentcolor transparent transparent transparent"
                    }
                },
                '&[x-placement*="right"] $arrow':
                {
                    flip: !1,
                    left: 0,
                    marginLeft: "-0.95em",
                    marginTop: 4,
                    marginBottom: 4,
                    height: "2em",
                    width: "1em",
                    "&::before":
                    {
                        flip: !1,
                        borderWidth: "1em 1em 1em 0",
                        borderColor: "transparent currentcolor transparent transparent"
                    }
                },
                '&[x-placement*="left"] $arrow':
                {
                    flip: !1,
                    right: 0,
                    marginRight: "-0.95em",
                    marginTop: 4,
                    marginBottom: 4,
                    height: "2em",
                    width: "1em",
                    "&::before":
                    {
                        flip: !1,
                        borderWidth: "1em 0 1em 1em",
                        borderColor: "transparent transparent transparent currentcolor"
                    }
                }
            },
            tooltip:
            {
                backgroundColor: Object(Cr.c)(e.palette.grey[700], .9),
                borderRadius: e.shape.borderRadius,
                color: e.palette.common.white,
                fontFamily: e.typography.fontFamily,
                padding: "4px 8px",
                fontSize: e.typography.pxToRem(10),
                lineHeight: "".concat(ng(1.4), "em"),
                maxWidth: 300,
                wordWrap: "break-word",
                fontWeight: e.typography.fontWeightMedium
            },
            tooltipArrow:
            {
                position: "relative",
                margin: "0"
            },
            arrow:
            {
                position: "absolute",
                fontSize: 6,
                color: Object(Cr.c)(e.palette.grey[700], .9),
                "&::before":
                {
                    content: '""',
                    margin: "auto",
                    display: "block",
                    width: 0,
                    height: 0,
                    borderStyle: "solid"
                }
            },
            touch:
            {
                padding: "8px 16px",
                fontSize: e.typography.pxToRem(14),
                lineHeight: "".concat(ng(16 / 14), "em"),
                fontWeight: e.typography.fontWeightRegular
            },
            tooltipPlacementLeft: Object(tr.a)(
            {
                transformOrigin: "right center",
                margin: "0 24px "
            }, e.breakpoints.up("sm"),
            {
                margin: "0 14px"
            }),
            tooltipPlacementRight: Object(tr.a)(
            {
                transformOrigin: "left center",
                margin: "0 24px"
            }, e.breakpoints.up("sm"),
            {
                margin: "0 14px"
            }),
            tooltipPlacementTop: Object(tr.a)(
            {
                transformOrigin: "center bottom",
                margin: "24px 0"
            }, e.breakpoints.up("sm"),
            {
                margin: "14px 0"
            }),
            tooltipPlacementBottom: Object(tr.a)(
            {
                transformOrigin: "center top",
                margin: "24px 0"
            }, e.breakpoints.up("sm"),
            {
                margin: "14px 0"
            })
        }
    }),
    {
        name: "MuiTooltip"
    })(og),
    sg = n(272),
    cg = n.n(sg);
n(586);
class ug extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            open: !1
        }
    }
    handleTooltipClose()
    {
        this.setState(
        {
            open: !1
        })
    }
    handleTooltipOpen()
    {
        this.setState(
        {
            open: !0
        })
    }
    render()
    {
        var
        {
            title: e,
            toolipClassName: t
        } = this.props;
        return a.a.createElement(fr,
        {
            onClickAway: () => this.handleTooltipClose()
        }, a.a.createElement(ag,
        {
            PopperProps:
            {
                disablePortal: !0
            },
            placement: "top",
            onClose: () => this.handleTooltipClose(),
            open: this.state.open,
            disableFocusListener: !0,
            disableTouchListener: !0,
            title: e
        }, a.a.createElement(cg.a,
        {
            onClick: () => this.handleTooltipOpen(),
            className: "AppTooltip-InfoIcon ".concat(t)
        })))
    }
}
var lg, fg, hg, dg, pg, mg, vg = ug;

function gg()
{
    pg = requestAnimationFrame(gg), dg.rotation.x += .0025, dg.rotation.y += .005, hg.render(fg, lg)
}
class yg extends a.a.Component
{
    componentDidMount()
    {
        ! function()
        {
            (lg = new Fc(55, 1, 1, 1e3)).position.z = 400, fg = new Va, mg = new Ds(
            {
                color: 0,
                wireframe: !0,
                opacity: 1
            });
            var e = new Ic(200, 200, 200);
            dg = new Mc(e, mg), fg.add(dg), (hg = new ql(
            {
                antialias: !0
            })).alpha = !0, hg.setPixelRatio(2), hg.setSize(65, 65), hg.setClearColor(16777215, 1), document.getElementById("depositInfoGraphic").appendChild(hg.domElement), lg.aspect = 1, lg.updateProjectionMatrix(), hg.setSize(65, 65)
        }(), gg()
    }
    componentWillUnmount()
    {
        ! function()
        {
            for (; fg.children.length > 0;) fg.remove(fg.children[0]);
            cancelAnimationFrame(pg), fg = null, hg = null, lg = null;
            var e = document.getElementById("depositInfoGraphic");
            e.removeChild(e.childNodes[0])
        }()
    }
    render()
    {
        var
        {
            userInfo: e,
            poolInfo: t,
            depositAmount: n
        } = this.props, r = Wn(t, e, parseFloat(n || 0), 2592e3);
        return a.a.createElement("div",
        {
            className: "DepositInfoContainer"
        }, a.a.createElement("table", null, a.a.createElement("tbody", null, a.a.createElement("tr", null, a.a.createElement("td", null, a.a.createElement("div",
        {
            id: "depositInfoGraphic"
        })), a.a.createElement("td", null, a.a.createElement(mi,
        {
            variant: "body2",
            className: "DepositInfoEstimation-Label",
            display: "inline"
        }, "Your Estimated Rewards"), a.a.createElement(vg,
        {
            title: "Estimated rewards assume you have achieved the maximum reward multiplier.",
            toolipClassName: "DepositInfoEstimation-Tooltip"
        }), a.a.createElement("div",
        {
            className: "DepositInfoEstimation-Data"
        }, qv(r, "0,0.00"), " ", t.distTokenName, " / month"))))))
    }
}
var bg = yg;
n(588);
class wg extends a.a.Component
{
    render()
    {
        var
        {
            type: e,
            body: t
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "generic-MsgAlert generic-MsgAlert-".concat(e)
        }, t))
    }
}
var _g = wg;
n(590);

function xg(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}
class Eg extends a.a.Component
{
    render()
    {
        var
        {
            web3State: e,
            userInfo: t,
            uiInteraction: n,
            openConnectModal: r,
            customWarnings: i
        } = this.props;
        if (!e.isConnected()) return a.a.createElement(_g,
        {
            type: "warning",
            body: a.a.createElement(a.a.Fragment, null, a.a.createElement(Fi,
            {
                container: !0
            }, a.a.createElement(Fi,
            {
                item: !0,
                xs: 6,
                sm: 6,
                md: 6,
                lg: 6,
                xl: 6
            }, a.a.createElement(mi,
            {
                variant: "h5",
                className: "FormContainer-ActionText"
            }, "Connect your ethereum wallet")), a.a.createElement(Fi,
            {
                item: !0,
                xs: 6,
                sm: 6,
                md: 6,
                lg: 6,
                xl: 6
            }, a.a.createElement(ai,
            {
                variant: "contained",
                size: "medium",
                onClick: () => e.connect(),
                color: "secondary",
                className: "FormContainer-WalletButton"
            }, "Connect"))))
        });
        if (!e.isAllowedNetwork()) return a.a.createElement(_g,
        {
            type: "warning",
            body: a.a.createElement(mi,
            {
                variant: "h5"
            }, "Connect your wallet to the Ethereum Mainnet")
        });
        for (var o in i)
            if (i[o].show) return i[o].body;
        return a.a.createElement(a.a.Fragment, null)
    }
}
var Sg = Ce((e, t) =>
{
    var n = t.activePoolRef;
    return {
        activePoolRef: n,
        userInfo: e.distributionPools.pools[n].userpool,
        web3State: e.distributionPools.web3State,
        uiInteraction: e.ui.uiInteraction
    }
}, e =>
{
    return {
        openConnectModal: (t = function*(t)
        {
            e(t.openConnectModal())
        }, n = function()
        {
            var e = this,
                n = arguments;
            return new Promise((function(r, i)
            {
                var o = t.apply(e, n);

                function a(e)
                {
                    xg(o, r, i, a, s, "next", e)
                }

                function s(e)
                {
                    xg(o, r, i, a, s, "throw", e)
                }
                a(void 0)
            }))
        }, function(e)
        {
            return n.apply(this, arguments)
        })
    };
    var t, n
})(Eg);
class Mg extends a.a.Component
{
    getExchangeLink(e, t)
    {
        var n = e.stakingTokenComposition;
        return 0 === n.length ? "" : t.includes("uniswap") ? "https://uniswap.exchange/add/".concat(n[0].address, "-").concat(n[1].address) : t.includes("mooniswap") ? "https://mooniswap.exchange/#/add/".concat(n[0].address, "/").concat(n[1].address) : void 0
    }
    render()
    {
        var
        {
            poolInfo: e,
            userInfo: t,
            depositAmount: n,
            activePoolRef: r
        } = this.props, i = [
        {
            show: t.stakingTokenBalance < n,
            body: a.a.createElement(_g,
            {
                type: "success",
                body: a.a.createElement(a.a.Fragment, null, a.a.createElement(Fi,
                {
                    container: !0,
                    className: "FormContainer-GridContainer"
                }, a.a.createElement(Fi,
                {
                    item: !0,
                    xs: 6,
                    sm: 6,
                    md: 6,
                    lg: 6,
                    xl: 6
                }, a.a.createElement(mi,
                {
                    variant: "h5",
                    className: "FormContainer-ActionText"
                }, "Insufficient balance")), a.a.createElement(Fi,
                {
                    item: !0,
                    xs: 6,
                    sm: 6,
                    md: 6,
                    lg: 6,
                    xl: 6
                }, a.a.createElement(ai,
                {
                    variant: "contained",
                    size: "medium",
                    color: "secondary",
                    className: "DepositFormContainer-BuyButton",
                    href: this.getExchangeLink(e, r),
                    target: "_blank"
                }, "Get ", e.stakingTokenName))))
            })
        }];
        return a.a.createElement(Sg,
        {
            customWarnings: i,
            activePoolRef: r
        })
    }
}
var Tg = Mg;

function kg(e)
{
    console.warn("[react-ga]", e)
}

function Ag(e)
{
    return (Ag = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e)
    {
        return typeof e
    } : function(e)
    {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}

function Cg(e, t)
{
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols)
    {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function(t)
        {
            return Object.getOwnPropertyDescriptor(e, t).enumerable
        }))), n.push.apply(n, r)
    }
    return n
}

function Og(e)
{
    for (var t = 1; t < arguments.length; t++)
    {
        var n = null != arguments[t] ? arguments[t] :
        {};
        t % 2 ? Cg(Object(n), !0).forEach((function(t)
        {
            Ug(e, t, n[t])
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Cg(Object(n)).forEach((function(t)
        {
            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
        }))
    }
    return e
}

function Pg(e, t)
{
    if (null == e) return {};
    var n, r, i = function(e, t)
    {
        if (null == e) return {};
        var n, r, i = {},
            o = Object.keys(e);
        for (r = 0; r < o.length; r++) n = o[r], t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i
    }(e, t);
    if (Object.getOwnPropertySymbols)
    {
        var o = Object.getOwnPropertySymbols(e);
        for (r = 0; r < o.length; r++) n = o[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n])
    }
    return i
}

function Rg(e, t)
{
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
}

function Ig(e, t)
{
    for (var n = 0; n < t.length; n++)
    {
        var r = t[n];
        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
    }
}

function Ng(e, t)
{
    return (Ng = Object.setPrototypeOf || function(e, t)
    {
        return e.__proto__ = t, e
    })(e, t)
}

function Lg(e)
{
    var t = function()
    {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try
        {
            return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
        }
        catch (e)
        {
            return !1
        }
    }();
    return function()
    {
        var n, r = Fg(e);
        if (t)
        {
            var i = Fg(this).constructor;
            n = Reflect.construct(r, arguments, i)
        }
        else n = r.apply(this, arguments);
        return Bg(this, n)
    }
}

function Bg(e, t)
{
    return !t || "object" !== Ag(t) && "function" != typeof t ? jg(e) : t
}

function jg(e)
{
    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    return e
}

function Fg(e)
{
    return (Fg = Object.setPrototypeOf ? Object.getPrototypeOf : function(e)
    {
        return e.__proto__ || Object.getPrototypeOf(e)
    })(e)
}

function Ug(e, t, n)
{
    return t in e ? Object.defineProperty(e, t,
    {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}
var Dg = function(e)
{
    ! function(e, t)
    {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype,
        {
            constructor:
            {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), t && Ng(e, t)
    }(o, e);
    var t, n, r, i = Lg(o);

    function o()
    {
        var e;
        Rg(this, o);
        for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
        return Ug(jg(e = i.call.apply(i, [this].concat(n))), "handleClick", (function(t)
        {
            var n = e.props,
                r = n.target,
                i = n.eventLabel,
                a = n.to,
                s = n.onClick,
                c = n.trackerNames,
                u = {
                    label: i
                },
                l = "_blank" !== r,
                f = !(t.ctrlKey || t.shiftKey || t.metaKey || 1 === t.button);
            l && f ? (t.preventDefault(), o.trackLink(u, (function()
            {
                window.location.href = a
            }), c)) : o.trackLink(u, (function() {}), c), s && s(t)
        })), e
    }
    return t = o, (n = [
    {
        key: "render",
        value: function()
        {
            var e = this.props,
                t = e.to,
                n = e.target,
                r = Og(Og(
                {}, Pg(e, ["to", "target"])),
                {},
                {
                    target: n,
                    href: t,
                    onClick: this.handleClick
                });
            return "_blank" === n && (r.rel = "noopener noreferrer"), delete r.eventLabel, delete r.trackerNames, a.a.createElement("a", r)
        }
    }]) && Ig(t.prototype, n), r && Ig(t, r), o
}(o.Component);
Ug(Dg, "trackLink", (function()
{
    kg("ga tracking not enabled")
})), Dg.propTypes = {
    eventLabel: j.a.string.isRequired,
    target: j.a.string,
    to: j.a.string,
    onClick: j.a.func,
    trackerNames: j.a.arrayOf(j.a.string)
}, Dg.defaultProps = {
    target: null,
    to: null,
    onClick: null,
    trackerNames: null
};

function zg(e)
{
    return "string" == typeof(t = e) && -1 !== t.indexOf("@") ? (kg("This arg looks like an email address, redacting."), "REDACTED (Potential Email Address)") : e;
    var t
}

function Hg(e)
{
    return e && e.toString().replace(/^\s+|\s+$/g, "")
}
var Vg = /^(a|an|and|as|at|but|by|en|for|if|in|nor|of|on|or|per|the|to|vs?\.?|via)$/i;

function Wg(e)
{
    return Hg(e).replace(/[A-Za-z0-9\u00C0-\u00FF]+[^\s-]*/g, (function(e, t, n)
    {
        return t > 0 && t + e.length !== n.length && e.search(Vg) > -1 && ":" !== n.charAt(t - 2) && ("-" !== n.charAt(t + e.length) || "-" === n.charAt(t - 1)) && n.charAt(t - 1).search(/[^\s-]/) < 0 ? e.toLowerCase() : e.substr(1).search(/[A-Z]|\../) > -1 ? e : e.charAt(0).toUpperCase() + e.substr(1)
    }))
}

function Gg(e)
{
    console.info("[react-ga]", e)
}
var qg = [],
    $g = {
        calls: qg,
        ga: function()
        {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
            qg.push([].concat(t))
        },
        resetCalls: function()
        {
            qg.length = 0
        }
    };

function Kg(e, t)
{
    if (null == e) return {};
    var n, r, i = function(e, t)
    {
        if (null == e) return {};
        var n, r, i = {},
            o = Object.keys(e);
        for (r = 0; r < o.length; r++) n = o[r], t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i
    }(e, t);
    if (Object.getOwnPropertySymbols)
    {
        var o = Object.getOwnPropertySymbols(e);
        for (r = 0; r < o.length; r++) n = o[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n])
    }
    return i
}

function Yg(e, t)
{
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols)
    {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function(t)
        {
            return Object.getOwnPropertyDescriptor(e, t).enumerable
        }))), n.push.apply(n, r)
    }
    return n
}

function Xg(e, t, n)
{
    return t in e ? Object.defineProperty(e, t,
    {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}

function Jg(e)
{
    return (Jg = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e)
    {
        return typeof e
    } : function(e)
    {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}

function Zg(e)
{
    return function(e)
    {
        if (Array.isArray(e)) return Qg(e)
    }(e) || function(e)
    {
        if ("undefined" != typeof Symbol && Symbol.iterator in Object(e)) return Array.from(e)
    }(e) || function(e, t)
    {
        if (!e) return;
        if ("string" == typeof e) return Qg(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        "Object" === n && e.constructor && (n = e.constructor.name);
        if ("Map" === n || "Set" === n) return Array.from(e);
        if ("Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Qg(e, t)
    }(e) || function()
    {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }()
}

function Qg(e, t)
{
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
    return r
}
var ey = "undefined" == typeof window || "undefined" == typeof document,
    ty = !1,
    ny = !0,
    ry = !1,
    iy = !0,
    oy = !0,
    ay = function()
    {
        var e;
        return ry ? $g.ga.apply($g, arguments) : !ey && (window.ga ? (e = window).ga.apply(e, arguments) : kg("ReactGA.initialize must be called first or GoogleAnalytics should be loaded manually"))
    };

function sy(e)
{
    return function()
    {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
            t = arguments.length > 1 ? arguments[1] : void 0,
            n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2],
            r = e || "";
        return t && (r = Wg(e)), n && (r = zg(r)), r
    }(e, ny, oy)
}

function cy(e)
{
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r];
    var i = n[0];
    "string" == typeof i ? (!iy && Array.isArray(e) || ay.apply(void 0, n), Array.isArray(e) && e.forEach((function(e)
    {
        ay.apply(void 0, Zg(["".concat(e, ".").concat(i)].concat(n.slice(1))))
    }))) : kg("ga command must be a string")
}

function uy(e, t)
{
    e ? t && (t.debug && !0 === t.debug && (ty = !0), !1 === t.titleCase && (ny = !1), !1 === t.redactEmail && (oy = !1), t.useExistingGa) || (t && t.gaOptions ? ay("create", e, t.gaOptions) : ay("create", e, "auto")) : kg("gaTrackingID is required in initialize()")
}

function ly(e, t)
{
    return Array.isArray(e) ? e.forEach((function(e)
    {
        "object" === Jg(e) ? uy(e.trackingId, e) : kg("All configs must be an object")
    })) : uy(e, t), !0
}

function fy(e, t)
{
    if (t && !0 === t.testMode) ry = !0;
    else
    {
        if (ey) return;
        t && !0 === t.standardImplementation || function(e)
        {
            var t = "https://www.google-analytics.com/analytics.js";
            e && e.gaAddress ? t = e.gaAddress : e && e.debug && (t = "https://www.google-analytics.com/analytics_debug.js");
            var n, r, i, o, a, s, c, u = e && e.onerror;
            n = window, r = document, i = "script", o = t, a = "ga", n.GoogleAnalyticsObject = a, n.ga = n.ga || function()
            {
                (n.ga.q = n.ga.q || []).push(arguments)
            }, n.ga.l = 1 * new Date, s = r.createElement(i), c = r.getElementsByTagName(i)[0], s.async = 1, s.src = o, s.onerror = u, c.parentNode.insertBefore(s, c)
        }(t)
    }
    iy = !t || "boolean" != typeof t.alwaysSendToDefaultTracker || t.alwaysSendToDefaultTracker, ly(e, t)
}

function hy()
{
    for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
    return t.length > 0 && (ay.apply(void 0, t), ty && (Gg("called ga('arguments');"), Gg("with arguments: ".concat(JSON.stringify(t))))), window.ga
}

function dy(e, t)
{
    e ? "object" === Jg(e) ? (0 === Object.keys(e).length && kg("empty `fieldsObject` given to .set()"), cy(t, "set", e), ty && (Gg("called ga('set', fieldsObject);"), Gg("with fieldsObject: ".concat(JSON.stringify(e))))) : kg("Expected `fieldsObject` arg to be an Object") : kg("`fieldsObject` is required in .set()")
}

function py(e, t)
{
    cy(t, "send", e), ty && (Gg("called ga('send', fieldObject);"), Gg("with fieldObject: ".concat(JSON.stringify(e))), Gg("with trackers: ".concat(JSON.stringify(t))))
}

function my(e, t, n)
{
    if (e)
    {
        var r = Hg(e);
        if ("" !== r)
        {
            var i = {};
            if (n && (i.title = n), cy(t, "send", function(e)
                {
                    for (var t = 1; t < arguments.length; t++)
                    {
                        var n = null != arguments[t] ? arguments[t] :
                        {};
                        t % 2 ? Yg(Object(n), !0).forEach((function(t)
                        {
                            Xg(e, t, n[t])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Yg(Object(n)).forEach((function(t)
                        {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                        }))
                    }
                    return e
                }(
                {
                    hitType: "pageview",
                    page: r
                }, i)), ty)
            {
                Gg("called ga('send', 'pageview', path);");
                var o = "";
                n && (o = " and title: ".concat(n)), Gg("with path: ".concat(r).concat(o))
            }
        }
        else kg("path cannot be an empty string in .pageview()")
    }
    else kg("path is required in .pageview()")
}

function vy(e, t)
{
    if (e)
    {
        var n, r = "/" === (n = Hg(e)).substring(0, 1) ? n.substring(1) : n;
        if ("" !== r)
        {
            var i = "/modal/".concat(r);
            cy(t, "send", "pageview", i), ty && (Gg("called ga('send', 'pageview', path);"), Gg("with path: ".concat(i)))
        }
        else kg("modalName cannot be an empty string or a single / in .modalview()")
    }
    else kg("modalName is required in .modalview(modalName)")
}

function gy()
{
    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
        {},
        t = e.category,
        n = e.variable,
        r = e.value,
        i = e.label,
        o = arguments.length > 1 ? arguments[1] : void 0;
    if (t && n && "number" == typeof r)
    {
        var a = {
            hitType: "timing",
            timingCategory: sy(t),
            timingVar: sy(n),
            timingValue: r
        };
        i && (a.timingLabel = sy(i)), py(a, o)
    }
    else kg("args.category, args.variable AND args.value are required in timing() AND args.value has to be a number")
}

function yy()
{
    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
        {},
        t = e.category,
        n = e.action,
        r = e.label,
        i = e.value,
        o = e.nonInteraction,
        a = e.transport,
        s = Kg(e, ["category", "action", "label", "value", "nonInteraction", "transport"]),
        c = arguments.length > 1 ? arguments[1] : void 0;
    if (t && n)
    {
        var u = {
            hitType: "event",
            eventCategory: sy(t),
            eventAction: sy(n)
        };
        r && (u.eventLabel = sy(r)), void 0 !== i && ("number" != typeof i ? kg("Expected `args.value` arg to be a Number.") : u.eventValue = i), void 0 !== o && ("boolean" != typeof o ? kg("`args.nonInteraction` must be a boolean.") : u.nonInteraction = o), void 0 !== a && ("string" != typeof a ? kg("`args.transport` must be a string.") : (-1 === ["beacon", "xhr", "image"].indexOf(a) && kg("`args.transport` must be either one of these values: `beacon`, `xhr` or `image`"), u.transport = a)), Object.keys(s).filter((function(e)
        {
            return "dimension" === e.substr(0, "dimension".length)
        })).forEach((function(e)
        {
            u[e] = s[e]
        })), Object.keys(s).filter((function(e)
        {
            return "metric" === e.substr(0, "metric".length)
        })).forEach((function(e)
        {
            u[e] = s[e]
        })), py(u, c)
    }
    else kg("args.category AND args.action are required in event()")
}

function by(e, t)
{
    var n = e.description,
        r = e.fatal,
        i = {
            hitType: "exception"
        };
    n && (i.exDescription = sy(n)), void 0 !== r && ("boolean" != typeof r ? kg("`args.fatal` must be a boolean.") : i.exFatal = r), py(i, t)
}
var wy = {
    require: function(e, t, n)
    {
        if (e)
        {
            var r = Hg(e);
            if ("" !== r)
            {
                var i = n ? "".concat(n, ".require") : "require";
                if (t)
                {
                    if ("object" !== Jg(t)) return void kg("Expected `options` arg to be an Object");
                    0 === Object.keys(t).length && kg("Empty `options` given to .require()"), hy(i, r, t), ty && Gg("called ga('require', '".concat(r, "', ").concat(JSON.stringify(t)))
                }
                else hy(i, r), ty && Gg("called ga('require', '".concat(r, "');"))
            }
            else kg("`name` cannot be an empty string in .require()")
        }
        else kg("`name` is required in .require()")
    },
    execute: function(e, t)
    {
        for (var n, r, i = arguments.length, o = new Array(i > 2 ? i - 2 : 0), a = 2; a < i; a++) o[a - 2] = arguments[a];
        if (1 === o.length ? n = o[0] : (r = o[0], n = o[1]), "string" != typeof e) kg("Expected `pluginName` arg to be a String.");
        else if ("string" != typeof t) kg("Expected `action` arg to be a String.");
        else
        {
            var s = "".concat(e, ":").concat(t);
            n = n || null, r && n ? (hy(s, r, n), ty && (Gg("called ga('".concat(s, "');")), Gg('actionType: "'.concat(r, '" with payload: ').concat(JSON.stringify(n))))) : n ? (hy(s, n), ty && (Gg("called ga('".concat(s, "');")), Gg("with payload: ".concat(JSON.stringify(n))))) : (hy(s), ty && Gg("called ga('".concat(s, "');")))
        }
    }
};

function _y(e, t, n)
{
    if ("function" == typeof t)
        if (e && e.label)
        {
            var r = {
                    hitType: "event",
                    eventCategory: "Outbound",
                    eventAction: "Click",
                    eventLabel: sy(e.label)
                },
                i = !1,
                o = setTimeout((function()
                {
                    i = !0, t()
                }), 250);
            r.hitCallback = function()
            {
                clearTimeout(o), i || t()
            }, py(r, n)
        }
    else kg("args.label is required in outboundLink()");
    else kg("hitCallback function is required")
}
var xy = $g,
    Ey = {
        initialize: fy,
        ga: hy,
        set: dy,
        send: py,
        pageview: my,
        modalview: vy,
        timing: gy,
        event: yy,
        exception: by,
        plugin: wy,
        outboundLink: _y,
        testModeAPI: $g
    };

function Sy(e, t)
{
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols)
    {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function(t)
        {
            return Object.getOwnPropertyDescriptor(e, t).enumerable
        }))), n.push.apply(n, r)
    }
    return n
}

function My(e)
{
    for (var t = 1; t < arguments.length; t++)
    {
        var n = null != arguments[t] ? arguments[t] :
        {};
        t % 2 ? Sy(Object(n), !0).forEach((function(t)
        {
            Ty(e, t, n[t])
        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Sy(Object(n)).forEach((function(t)
        {
            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
        }))
    }
    return e
}

function Ty(e, t, n)
{
    return t in e ? Object.defineProperty(e, t,
    {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}
Dg.origTrackLink = Dg.trackLink, Dg.trackLink = _y;
var ky = Dg,
    Ay = My(My(
    {}, r),
    {},
    {
        OutboundLink: ky
    });
Ay.initialize("UA-128230345-1");

function Cy(e, t, n)
{
    try
    {
        console.log("Logging", e, t, n), Ay.event(
        {
            category: "Geyser Pilot",
            label: e,
            action: t,
            value: n
        })
    }
    catch (e)
    {
        console.error("Error logging event", t)
    }
}
var Oy = class
{
    static trackWalletConnection(e, t)
    {
        Cy(e, "WALLET_CONNECTED-".concat(t))
    }
    static trackWalletDeposit(e, t, n)
    {
        var r = t / n.totalStaked * n.totalStakedVal;
        Cy(e, "WALLET_DEPOSITED", parseInt(r))
    }
    static trackWalletWithdraw(e, t, n)
    {
        var r = t / n.totalStaked * n.totalStakedVal;
        Cy(e, "WALLET_WITHDRAWN", parseInt(r))
    }
    static trackWalletMigration(e, t, n)
    {
        var r = t / n.totalStaked * n.totalStakedVal;
        Cy(e, "WALLET_MIGRATED", parseInt(r))
    }
};
class Py
{
    constructor()
    {
        var e, t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
        {};
        e = t, 0 === Object.entries(e).length && e.constructor === Object ? Gv(this, this.emptyObj()) : Gv(this, t)
    }
    toString()
    {
        return JSON.stringify(this)
    }
    toAction(e)
    {
        return {
            type: e,
            underlying: this.toString()
        }
    }
    static fromString(e)
    {
        return new this(JSON.parse(e))
    }
    static fromAction(e)
    {
        return this.fromString(e.underlying)
    }
}
var Ry = class extends Py
{
    emptyObj()
    {
        return {
            aType: "",
            status: ""
        }
    }
    constructor(e)
    {
        var
        {
            aType: t,
            status: n
        } = e;
        super(), this.aType = t, this.status = n || 0
    }
    isSuccess()
    {
        return 5 === this.status
    }
    isPending()
    {
        return 1 === this.status
    }
    isError()
    {
        return 2 === this.status || 3 === this.status
    }
    statusChanged()
    {
        return this.toAction("".concat(this.aType, "-").concat("REQUEST_STATE_CHANGED"))
    }
    success()
    {
        return this.status = 5, this.statusChanged()
    }
    pending()
    {
        return this.status = 1, this.statusChanged()
    }
    error()
    {
        return this.status = 2, this.statusChanged()
    }
    fatal()
    {
        return this.status = 3, this.statusChanged()
    }
};
var Iy = class
{
    constructor(e)
    {
        this.error = e
    }
    isUserRejection()
    {
        return this.error.message.includes("User denied transaction signature")
    }
    onChainFailure()
    {
        return this.error.message.includes("[ethjs-rpc] rpc error")
    }
    isConnectionRejection()
    {
        return this.error.message.includes("User denied account authorization")
    }
    reason()
    {
        return this.isUserRejection() ? "User rejected transaction signature" : this.onChainFailure() ? "Transaction failed on chain" : this.isConnectionRejection() ? "User rejected connection request" : "Transaction error"
    }
};

function Ny(e, t)
{
    var n = Object.keys(e);
    if (Object.getOwnPropertySymbols)
    {
        var r = Object.getOwnPropertySymbols(e);
        t && (r = r.filter((function(t)
        {
            return Object.getOwnPropertyDescriptor(e, t).enumerable
        }))), n.push.apply(n, r)
    }
    return n
}

function Ly(e, t, n)
{
    return t in e ? Object.defineProperty(e, t,
    {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}

function By(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}
var jy = class extends Ry
    {
        emptyObj()
        {
            return {
                aType: "",
                status: "",
                confirmations: 0,
                requiredConfs: 0,
                recepit:
                {},
                txHash: "0x",
                txError: ""
            }
        }
        constructor(e)
        {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            super(e), this.requiredConfs = t
        }
        isInitialized()
        {
            return 0 === this.status
        }
        isStarted()
        {
            return 1 === this.status
        }
        isCreated()
        {
            return 2 === this.status
        }
        isMined()
        {
            return 4 === this.status
        }
        isConfirmed()
        {
            return 5 === this.status
        }
        isWorking()
        {
            return 1 === this.status || 2 === this.status || 4 === this.status
        }
        isError()
        {
            return 10 === this.status
        }
        statusChanged()
        {
            return this.toAction("".concat(this.aType, "-").concat("TX_STATE_CHANGED"))
        }
        started()
        {
            return this.status = 1, this.statusChanged()
        }
        created(e)
        {
            return this.status = 2, this.txHash = e, this.statusChanged()
        }
        mined(e)
        {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
            return this.status = 4, this.receipt = e, this.confirmations = t, this.statusChanged()
        }
        confirmed(e)
        {
            return this.status = 5, this.confirmations = e, this.statusChanged()
        }
        error(e)
        {
            return this.status = 10, this.txError = e, this.statusChanged()
        }
        reset()
        {
            this.status = 0, this.confirmations = 0, this.recepit = {}, this.txHash = "0x", this.txError = ""
        }
        handle(e, t, n)
        {
            var r, i = arguments,
                o = this;
            return (r = function*()
            {
                var r = i.length > 3 && void 0 !== i[3] ? i[3] :
                    {},
                    a = o;
                try
                {
                    a.started(), n(a);
                    var s = yield e, c = 5e5;
                    try
                    {
                        c = yield s.estimateGas(
                        {
                            from: t
                        })
                    }
                    catch (e)
                    {
                        console.log("Error estimating gas", e)
                    }
                    var u = parseInt(1.25 * c),
                        l = function(e)
                        {
                            for (var t = 1; t < arguments.length; t++)
                            {
                                var n = null != arguments[t] ? arguments[t] :
                                {};
                                t % 2 ? Ny(Object(n), !0).forEach((function(t)
                                {
                                    Ly(e, t, n[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ny(Object(n)).forEach((function(t)
                                {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                }))
                            }
                            return e
                        }(
                        {
                            from: t,
                            gas: u
                        }, r);
                    return console.log("Tx params", l), new Promise((function(e, t)
                    {
                        s.send(l).on("transactionHash", (function(e)
                        {
                            a.isInitialized() || (a.created(e), n(a))
                        })).on("receipt", (function(t)
                        {
                            a.isInitialized() || (a.mined(t, 0), a.confirmations >= a.requiredConfs ? (a.confirmed(a.confirmations), n(a), e()) : n(a))
                        })).on("confirmation", (function(t, r)
                        {
                            a.isInitialized() || (t < a.requiredConfs && (a.mined(r, t), n(a)), t >= a.requiredConfs && !a.isConfirmed() && (a.confirmed(t), n(a), e()))
                        })).on("error", (function(e)
                        {
                            if (!a.isInitialized())
                            {
                                console.log(e);
                                var r = new Iy(e);
                                a.error(r.reason()), n(a), t()
                            }
                        }))
                    }))
                }
                catch (e)
                {
                    console.log(e);
                    var f = new Iy(e);
                    throw a.error(f.reason()), n(a), e
                }
            }, function()
            {
                var e = this,
                    t = arguments;
                return new Promise((function(n, i)
                {
                    var o = r.apply(e, t);

                    function a(e)
                    {
                        By(o, n, i, a, s, "next", e)
                    }

                    function s(e)
                    {
                        By(o, n, i, a, s, "throw", e)
                    }
                    a(void 0)
                }))
            })()
        }
    },
    Fy = n(705),
    Uy = n(110);
var Dy = n(65);

function zy(e, t)
{
    t ? e.setAttribute("aria-hidden", "true") : e.removeAttribute("aria-hidden")
}

function Hy(e)
{
    return parseInt(window.getComputedStyle(e)["padding-right"], 10) || 0
}

function Vy(e, t, n)
{
    var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : [],
        i = arguments.length > 4 ? arguments[4] : void 0,
        o = [t, n].concat(Object(qr.a)(r)),
        a = ["TEMPLATE", "SCRIPT", "STYLE"];
    [].forEach.call(e.children, (function(e)
    {
        1 === e.nodeType && -1 === o.indexOf(e) && -1 === a.indexOf(e.tagName) && zy(e, i)
    }))
}

function Wy(e, t)
{
    var n = -1;
    return e.some((function(e, r)
    {
        return !!t(e) && (n = r, !0)
    })), n
}

function Gy(e, t)
{
    var n, r = [],
        i = [],
        o = e.container;
    if (!t.disableScrollLock)
    {
        if (function(e)
            {
                var t = or(e);
                return t.body === e ? Eo(t).innerWidth > t.documentElement.clientWidth : e.scrollHeight > e.clientHeight
            }(o))
        {
            var a = function()
            {
                var e = document.createElement("div");
                e.style.width = "99px", e.style.height = "99px", e.style.position = "absolute", e.style.top = "-9999px", e.style.overflow = "scroll", document.body.appendChild(e);
                var t = e.offsetWidth - e.clientWidth;
                return document.body.removeChild(e), t
            }();
            r.push(
            {
                value: o.style.paddingRight,
                key: "padding-right",
                el: o
            }), o.style["padding-right"] = "".concat(Hy(o) + a, "px"), n = or(o).querySelectorAll(".mui-fixed"), [].forEach.call(n, (function(e)
            {
                i.push(e.style.paddingRight), e.style.paddingRight = "".concat(Hy(e) + a, "px")
            }))
        }
        var s = o.parentElement,
            c = "HTML" === s.nodeName && "scroll" === window.getComputedStyle(s)["overflow-y"] ? s : o;
        r.push(
        {
            value: c.style.overflow,
            key: "overflow",
            el: c
        }), c.style.overflow = "hidden"
    }
    return function()
    {
        n && [].forEach.call(n, (function(e, t)
        {
            i[t] ? e.style.paddingRight = i[t] : e.style.removeProperty("padding-right")
        })), r.forEach((function(e)
        {
            var t = e.value,
                n = e.el,
                r = e.key;
            t ? n.style.setProperty(r, t) : n.style.removeProperty(r)
        }))
    }
}
var qy = function()
{
    function e()
    {
        ! function(e, t)
        {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }(this, e), this.modals = [], this.containers = []
    }
    return Object(Dy.a)(e, [
    {
        key: "add",
        value: function(e, t)
        {
            var n = this.modals.indexOf(e);
            if (-1 !== n) return n;
            n = this.modals.length, this.modals.push(e), e.modalRef && zy(e.modalRef, !1);
            var r = function(e)
            {
                var t = [];
                return [].forEach.call(e.children, (function(e)
                {
                    e.getAttribute && "true" === e.getAttribute("aria-hidden") && t.push(e)
                })), t
            }(t);
            Vy(t, e.mountNode, e.modalRef, r, !0);
            var i = Wy(this.containers, (function(e)
            {
                return e.container === t
            }));
            return -1 !== i ? (this.containers[i].modals.push(e), n) : (this.containers.push(
            {
                modals: [e],
                container: t,
                restore: null,
                hiddenSiblingNodes: r
            }), n)
        }
    },
    {
        key: "mount",
        value: function(e, t)
        {
            var n = Wy(this.containers, (function(t)
                {
                    return -1 !== t.modals.indexOf(e)
                })),
                r = this.containers[n];
            r.restore || (r.restore = Gy(r, t))
        }
    },
    {
        key: "remove",
        value: function(e)
        {
            var t = this.modals.indexOf(e);
            if (-1 === t) return t;
            var n = Wy(this.containers, (function(t)
                {
                    return -1 !== t.modals.indexOf(e)
                })),
                r = this.containers[n];
            if (r.modals.splice(r.modals.indexOf(e), 1), this.modals.splice(t, 1), 0 === r.modals.length) r.restore && r.restore(), e.modalRef && zy(e.modalRef, !0), Vy(r.container, e.mountNode, e.modalRef, r.hiddenSiblingNodes, !1), this.containers.splice(n, 1);
            else
            {
                var i = r.modals[r.modals.length - 1];
                i.modalRef && zy(i.modalRef, !1)
            }
            return t
        }
    },
    {
        key: "isTopModal",
        value: function(e)
        {
            return this.modals.length > 0 && this.modals[this.modals.length - 1] === e
        }
    }]), e
}();
var $y = function(e)
    {
        var t = e.children,
            n = e.disableAutoFocus,
            r = void 0 !== n && n,
            i = e.disableEnforceFocus,
            a = void 0 !== i && i,
            c = e.disableRestoreFocus,
            u = void 0 !== c && c,
            l = e.getDoc,
            f = e.isEnabled,
            h = e.open,
            d = o.useRef(),
            p = o.useRef(null),
            m = o.useRef(null),
            v = o.useRef(),
            g = o.useRef(null),
            y = o.useCallback((function(e)
            {
                g.current = s.findDOMNode(e)
            }), []),
            b = sr(t.ref, y);
        return o.useMemo((function()
        {
            h && "undefined" != typeof window && (v.current = l().activeElement)
        }), [h]), o.useEffect((function()
        {
            if (h)
            {
                var e = or(g.current);
                r || !g.current || g.current.contains(e.activeElement) || (g.current.hasAttribute("tabIndex") || g.current.setAttribute("tabIndex", -1), g.current.focus());
                var t = function()
                    {
                        a || !f() || d.current ? d.current = !1 : g.current && !g.current.contains(e.activeElement) && g.current.focus()
                    },
                    n = function(t)
                    {
                        !a && f() && 9 === t.keyCode && e.activeElement === g.current && (d.current = !0, t.shiftKey ? m.current.focus() : p.current.focus())
                    };
                e.addEventListener("focus", t, !0), e.addEventListener("keydown", n, !0);
                var i = setInterval((function()
                {
                    t()
                }), 50);
                return function()
                {
                    clearInterval(i), e.removeEventListener("focus", t, !0), e.removeEventListener("keydown", n, !0), u || (v.current && v.current.focus && v.current.focus(), v.current = null)
                }
            }
        }), [r, a, u, f, h]), o.createElement(o.Fragment, null, o.createElement("div",
        {
            tabIndex: 0,
            ref: p,
            "data-test": "sentinelStart"
        }), o.cloneElement(t,
        {
            ref: b
        }), o.createElement("div",
        {
            tabIndex: 0,
            ref: m,
            "data-test": "sentinelEnd"
        }))
    },
    Ky = {
        root:
        {
            zIndex: -1,
            position: "fixed",
            right: 0,
            bottom: 0,
            top: 0,
            left: 0,
            backgroundColor: "rgba(0, 0, 0, 0.5)",
            WebkitTapHighlightColor: "transparent"
        },
        invisible:
        {
            backgroundColor: "transparent"
        }
    },
    Yy = o.forwardRef((function(e, t)
    {
        var n = e.invisible,
            r = void 0 !== n && n,
            i = e.open,
            a = Object(er.a)(e, ["invisible", "open"]);
        return i ? o.createElement("div", Object(H.a)(
        {
            "aria-hidden": !0,
            ref: t
        }, a,
        {
            style: Object(H.a)(
            {}, Ky.root,
            {}, r ? Ky.invisible :
            {},
            {}, a.style)
        })) : null
    }));
var Xy = new qy,
    Jy = o.forwardRef((function(e, t)
    {
        var n = Object(Nt.a)(),
            r = Object(Fy.a)(
            {
                name: "MuiModal",
                props: Object(H.a)(
                {}, e),
                theme: n
            }),
            i = r.BackdropComponent,
            a = void 0 === i ? Yy : i,
            c = r.BackdropProps,
            u = r.children,
            l = r.closeAfterTransition,
            f = void 0 !== l && l,
            h = r.container,
            d = r.disableAutoFocus,
            p = void 0 !== d && d,
            m = r.disableBackdropClick,
            v = void 0 !== m && m,
            g = r.disableEnforceFocus,
            y = void 0 !== g && g,
            b = r.disableEscapeKeyDown,
            w = void 0 !== b && b,
            _ = r.disablePortal,
            x = void 0 !== _ && _,
            E = r.disableRestoreFocus,
            S = void 0 !== E && E,
            M = r.disableScrollLock,
            T = void 0 !== M && M,
            k = r.hideBackdrop,
            A = void 0 !== k && k,
            C = r.keepMounted,
            O = void 0 !== C && C,
            P = r.manager,
            R = void 0 === P ? Xy : P,
            I = r.onBackdropClick,
            N = r.onClose,
            L = r.onEscapeKeyDown,
            B = r.onRendered,
            j = r.open,
            F = Object(er.a)(r, ["BackdropComponent", "BackdropProps", "children", "closeAfterTransition", "container", "disableAutoFocus", "disableBackdropClick", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onEscapeKeyDown", "onRendered", "open"]),
            U = o.useState(!0),
            D = U[0],
            z = U[1],
            V = o.useRef(
            {}),
            W = o.useRef(null),
            G = o.useRef(null),
            q = sr(G, t),
            $ = function(e)
            {
                return !!e.children && e.children.props.hasOwnProperty("in")
            }(r),
            K = function()
            {
                return or(W.current)
            },
            Y = function()
            {
                return V.current.modalRef = G.current, V.current.mountNode = W.current, V.current
            },
            X = function()
            {
                R.mount(Y(),
                {
                    disableScrollLock: T
                }), G.current.scrollTop = 0
            },
            J = ur((function()
            {
                var e = function(e)
                {
                    return e = "function" == typeof e ? e() : e, s.findDOMNode(e)
                }(h) || K().body;
                R.add(Y(), e), G.current && X()
            })),
            Z = o.useCallback((function()
            {
                return R.isTopModal(Y())
            }), [R]),
            Q = ur((function(e)
            {
                W.current = e, e && (B && B(), j && Z() ? X() : zy(G.current, !0))
            })),
            ee = o.useCallback((function()
            {
                R.remove(Y())
            }), [R]);
        if (o.useEffect((function()
            {
                return function()
                {
                    ee()
                }
            }), [ee]), o.useEffect((function()
            {
                j ? J() : $ && f || ee()
            }), [j, ee, $, f, J]), !O && !j && (!$ || D)) return null;
        var te = function(e)
            {
                return {
                    root:
                    {
                        position: "fixed",
                        zIndex: e.zIndex.modal,
                        right: 0,
                        bottom: 0,
                        top: 0,
                        left: 0
                    },
                    hidden:
                    {
                        visibility: "hidden"
                    }
                }
            }(n ||
            {
                zIndex: Uy.a
            }),
            ne = {};
        return void 0 === u.props.tabIndex && (ne.tabIndex = u.props.tabIndex || "-1"), $ && (ne.onEnter = dr((function()
        {
            z(!1)
        }), u.props.onEnter), ne.onExited = dr((function()
        {
            z(!0), f && ee()
        }), u.props.onExited)), o.createElement(Jv,
        {
            ref: Q,
            container: h,
            disablePortal: x
        }, o.createElement("div", Object(H.a)(
        {
            ref: q,
            onKeyDown: function(e)
            {
                "Escape" === e.key && Z() && (e.stopPropagation(), L && L(e), !w && N && N(e, "escapeKeyDown"))
            },
            role: "presentation"
        }, F,
        {
            style: Object(H.a)(
            {}, te.root,
            {}, !j && D ? te.hidden :
            {},
            {}, F.style)
        }), A ? null : o.createElement(a, Object(H.a)(
        {
            open: j,
            onClick: function(e)
            {
                e.target === e.currentTarget && (I && I(e), !v && N && N(e, "backdropClick"))
            }
        }, c)), o.createElement($y,
        {
            disableEnforceFocus: y,
            disableAutoFocus: p,
            disableRestoreFocus: S,
            getDoc: K,
            isEnabled: Z,
            open: j
        }, o.cloneElement(u, ne))))
    })),
    Zy = {
        entering:
        {
            opacity: 1
        },
        entered:
        {
            opacity: 1
        }
    },
    Qy = {
        enter: ir.b.enteringScreen,
        exit: ir.b.leavingScreen
    },
    eb = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.in,
            i = e.onEnter,
            a = e.onExit,
            s = e.style,
            c = e.timeout,
            u = void 0 === c ? Qy : c,
            l = Object(er.a)(e, ["children", "in", "onEnter", "onExit", "style", "timeout"]),
            f = wr(),
            h = sr(n.ref, t);
        return o.createElement(yr, Object(H.a)(
        {
            appear: !0,
            in: r,
            onEnter: function(e, t)
            {
                _r(e);
                var n = xr(
                {
                    style: s,
                    timeout: u
                },
                {
                    mode: "enter"
                });
                e.style.webkitTransition = f.transitions.create("opacity", n), e.style.transition = f.transitions.create("opacity", n), i && i(e, t)
            },
            onExit: function(e)
            {
                var t = xr(
                {
                    style: s,
                    timeout: u
                },
                {
                    mode: "exit"
                });
                e.style.webkitTransition = f.transitions.create("opacity", t), e.style.transition = f.transitions.create("opacity", t), a && a(e)
            },
            timeout: u
        }, l), (function(e, t)
        {
            return o.cloneElement(n, Object(H.a)(
            {
                style: Object(H.a)(
                {
                    opacity: 0,
                    visibility: "exited" !== e || r ? void 0 : "hidden"
                }, Zy[e],
                {}, s,
                {}, n.props.style),
                ref: h
            }, t))
        }))
    })),
    tb = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.classes,
            i = e.className,
            a = e.invisible,
            s = void 0 !== a && a,
            c = e.open,
            u = e.transitionDuration,
            l = Object(er.a)(e, ["children", "classes", "className", "invisible", "open", "transitionDuration"]);
        return o.createElement(eb, Object(H.a)(
        {
            in: c,
            timeout: u
        }, l), o.createElement("div",
        {
            className: Object(nr.default)(r.root, i, s && r.invisible),
            "aria-hidden": !0,
            ref: t
        }, n))
    })),
    nb = Object(rr.a)(
    {
        root:
        {
            zIndex: -1,
            position: "fixed",
            display: "flex",
            alignItems: "center",
            justifyContent: "center",
            right: 0,
            bottom: 0,
            top: 0,
            left: 0,
            backgroundColor: "rgba(0, 0, 0, 0.5)",
            WebkitTapHighlightColor: "transparent"
        },
        invisible:
        {
            backgroundColor: "transparent"
        }
    },
    {
        name: "MuiBackdrop"
    })(tb),
    rb = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.raised,
            a = void 0 !== i && i,
            s = Object(er.a)(e, ["classes", "className", "raised"]);
        return o.createElement(Ar, Object(H.a)(
        {
            className: Object(nr.default)(n.root, r),
            elevation: a ? 8 : 1,
            ref: t
        }, s))
    })),
    ib = Object(rr.a)(
    {
        root:
        {
            overflow: "hidden"
        }
    },
    {
        name: "MuiCard"
    })(rb),
    ob = o.forwardRef((function(e, t)
    {
        var n = e.action,
            r = e.avatar,
            i = e.classes,
            a = e.className,
            s = e.component,
            c = void 0 === s ? "div" : s,
            u = e.disableTypography,
            l = void 0 !== u && u,
            f = e.subheader,
            h = e.subheaderTypographyProps,
            d = e.title,
            p = e.titleTypographyProps,
            m = Object(er.a)(e, ["action", "avatar", "classes", "className", "component", "disableTypography", "subheader", "subheaderTypographyProps", "title", "titleTypographyProps"]),
            v = d;
        null == v || v.type === mi || l || (v = o.createElement(mi, Object(H.a)(
        {
            variant: r ? "body2" : "h5",
            className: i.title,
            component: "span",
            display: "block"
        }, p), v));
        var g = f;
        return null == g || g.type === mi || l || (g = o.createElement(mi, Object(H.a)(
        {
            variant: r ? "body2" : "body1",
            className: i.subheader,
            color: "textSecondary",
            component: "span",
            display: "block"
        }, h), g)), o.createElement(c, Object(H.a)(
        {
            className: Object(nr.default)(i.root, a),
            ref: t
        }, m), r && o.createElement("div",
        {
            className: i.avatar
        }, r), o.createElement("div",
        {
            className: i.content
        }, v, g), n && o.createElement("div",
        {
            className: i.action
        }, n))
    })),
    ab = Object(rr.a)(
    {
        root:
        {
            display: "flex",
            alignItems: "center",
            padding: 16
        },
        avatar:
        {
            flex: "0 0 auto",
            marginRight: 16
        },
        action:
        {
            flex: "0 0 auto",
            alignSelf: "flex-start",
            marginTop: -8,
            marginRight: -8
        },
        content:
        {
            flex: "1 1 auto"
        },
        title:
        {},
        subheader:
        {}
    },
    {
        name: "MuiCardHeader"
    })(ob),
    sb = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.component,
            a = void 0 === i ? "div" : i,
            s = Object(er.a)(e, ["classes", "className", "component"]);
        return o.createElement(a, Object(H.a)(
        {
            className: Object(nr.default)(n.root, r),
            ref: t
        }, s))
    })),
    cb = Object(rr.a)(
    {
        root:
        {
            padding: 16,
            "&:last-child":
            {
                paddingBottom: 24
            }
        }
    },
    {
        name: "MuiCardContent"
    })(sb);
n(592);
class ub extends a.a.Component
{
    render()
    {
        var
        {
            open: e,
            title: t,
            body: n,
            transparent: r
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(Jy,
        {
            disablePortal: !0,
            disableEnforceFocus: !0,
            disableAutoFocus: !0,
            open: e,
            closeAfterTransition: !0,
            BackdropComponent: nb,
            BackdropProps:
            {
                timeout: 500
            },
            className: r ? "GenericModal transparent" : "GenericModal"
        }, a.a.createElement("div",
        {
            className: "GenericModal-Container"
        }, a.a.createElement(ib,
        {
            className: "GenericModal-Card"
        }, a.a.createElement(ab,
        {
            className: "GenericModal-Title",
            title: t
        }), a.a.createElement(cb,
        {
            className: "GenericModal-Body"
        }, n)))))
    }
}
ub.propTypes = {
    open: j.a.bool.isRequired,
    transparent: j.a.bool,
    title: j.a.string,
    body: j.a.element
};
var lb = ub;
class fb extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            open: !0
        }
    }
    close()
    {
        this.setState(
        {
            open: !1
        }), this.props.onClose && this.props.onClose()
    }
    renderCloseButton()
    {
        return a.a.createElement(ai,
        {
            onClick: () => this.close()
        }, "x")
    }
    renderTitle()
    {
        return this.props.title
    }
    renderBody()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "DismissableModal-body"
        }, this.props.body), this.renderCloseButton())
    }
    render()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(lb,
        {
            title: this.renderTitle(),
            body: this.renderBody(),
            open: this.state.open,
            transparent: this.props.transparent
        }))
    }
}
fb.propTypes = {
    transparent: j.a.bool,
    title: j.a.string,
    body: j.a.element,
    onClose: j.a.func.isRequired
};
var hb = fb;
var db = class extends hb
{
    renderCloseButton()
    {
        return a.a.createElement(ai,
        {
            size: "large",
            className: "GenericModal-Button",
            color: "primary",
            onClick: () => this.close()
        }, "Close")
    }
};
n(594);
class pb extends a.a.Component
{
    render()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "GenericProgress-Container"
        }, a.a.createElement("div",
        {
            id: "bowlG"
        }, a.a.createElement("div",
        {
            id: "bowl_ringG"
        }, a.a.createElement("div",
        {
            className: "ball_holderG"
        }, a.a.createElement("div",
        {
            className: "ballG"
        }))))))
    }
}
var mb = pb;
n(596);
class vb extends a.a.Component
{
    renderTxStateMessage(e)
    {
        return e.isStarted() ? a.a.createElement(a.a.Fragment, null, "Waiting for user to sign ethereum transaction") : e.isCreated() ? a.a.createElement(a.a.Fragment, null, a.a.createElement("a",
        {
            href: "https://etherscan.io/tx/".concat(e.txHash),
            className: "highlight",
            target: "_blank"
        }, "Transaction"), " ", "successfully submitted to the blockchain, waiting to be mined") : e.isMined() ? a.a.createElement(a.a.Fragment, null, a.a.createElement("a",
        {
            href: "https://etherscan.io/tx/".concat(e.txHash),
            className: "highlight",
            target: "_blank"
        }, "Transaction"), " ", "mined, confirmed ", e.confirmations, "/", e.requiredConfs, " times") : e.isConfirmed() ? a.a.createElement(a.a.Fragment, null, a.a.createElement("a",
        {
            href: "https://etherscan.io/tx/".concat(e.txHash),
            className: "highlight",
            target: "_blank"
        }, "Transaction"), " ", "confirmed sufficiently") : void 0
    }
    render()
    {
        var
        {
            state: e
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "TxStateMessage"
        }, this.renderTxStateMessage(e)))
    }
}
var gb = vb;
class yb extends a.a.Component
{
    renderBody()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(mb, null), a.a.createElement(gb,
        {
            state: this.props.state
        }))
    }
    render()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(lb,
        {
            title: this.props.title,
            body: this.renderBody(),
            open: !0
        }))
    }
}
var bb = yb;

function wb(e, t)
{
    var n = function(e, t)
    {
        var n, r = t.getBoundingClientRect();
        if (t.fakeTransform) n = t.fakeTransform;
        else
        {
            var i = window.getComputedStyle(t);
            n = i.getPropertyValue("-webkit-transform") || i.getPropertyValue("transform")
        }
        var o = 0,
            a = 0;
        if (n && "none" !== n && "string" == typeof n)
        {
            var s = n.split("(")[1].split(")")[0].split(",");
            o = parseInt(s[4], 10), a = parseInt(s[5], 10)
        }
        return "left" === e ? "translateX(".concat(window.innerWidth, "px) translateX(-").concat(r.left - o, "px)") : "right" === e ? "translateX(-".concat(r.left + r.width - o, "px)") : "up" === e ? "translateY(".concat(window.innerHeight, "px) translateY(-").concat(r.top - a, "px)") : "translateY(-".concat(r.top + r.height - a, "px)")
    }(e, t);
    n && (t.style.webkitTransform = n, t.style.transform = n)
}
var _b = {
        enter: ir.b.enteringScreen,
        exit: ir.b.leavingScreen
    },
    xb = o.forwardRef((function(e, t)
    {
        var n = e.children,
            r = e.direction,
            i = void 0 === r ? "down" : r,
            a = e.in,
            c = e.onEnter,
            u = e.onEntering,
            l = e.onExit,
            f = e.onExited,
            h = e.style,
            d = e.timeout,
            p = void 0 === d ? _b : d,
            m = Object(er.a)(e, ["children", "direction", "in", "onEnter", "onEntering", "onExit", "onExited", "style", "timeout"]),
            v = wr(),
            g = o.useRef(null),
            y = o.useCallback((function(e)
            {
                g.current = s.findDOMNode(e)
            }), []),
            b = sr(n.ref, y),
            w = sr(b, t),
            _ = o.useCallback((function()
            {
                g.current && wb(i, g.current)
            }), [i]);
        return o.useEffect((function()
        {
            if (!a && "down" !== i && "right" !== i)
            {
                var e = xo((function()
                {
                    g.current && wb(i, g.current)
                }));
                return window.addEventListener("resize", e),
                    function()
                    {
                        e.clear(), window.removeEventListener("resize", e)
                    }
            }
        }), [i, a]), o.useEffect((function()
        {
            a || _()
        }), [a, _]), o.createElement(yr, Object(H.a)(
        {
            onEnter: function(e, t)
            {
                var n = g.current;
                wb(i, n), _r(n), c && c(n, t)
            },
            onEntering: function(e, t)
            {
                var n = g.current,
                    r = xr(
                    {
                        timeout: p,
                        style: h
                    },
                    {
                        mode: "enter"
                    });
                n.style.webkitTransition = v.transitions.create("-webkit-transform", Object(H.a)(
                {}, r,
                {
                    easing: v.transitions.easing.easeOut
                })), n.style.transition = v.transitions.create("transform", Object(H.a)(
                {}, r,
                {
                    easing: v.transitions.easing.easeOut
                })), n.style.webkitTransform = "none", n.style.transform = "none", u && u(n, t)
            },
            onExit: function()
            {
                var e = g.current,
                    t = xr(
                    {
                        timeout: p,
                        style: h
                    },
                    {
                        mode: "exit"
                    });
                e.style.webkitTransition = v.transitions.create("-webkit-transform", Object(H.a)(
                {}, t,
                {
                    easing: v.transitions.easing.sharp
                })), e.style.transition = v.transitions.create("transform", Object(H.a)(
                {}, t,
                {
                    easing: v.transitions.easing.sharp
                })), wb(i, e), l && l(e)
            },
            onExited: function()
            {
                var e = g.current;
                e.style.webkitTransition = "", e.style.transition = "", f && f(e)
            },
            appear: !0,
            in: a,
            timeout: p
        }, m), (function(e, t)
        {
            return o.cloneElement(n, Object(H.a)(
            {
                ref: w,
                style: Object(H.a)(
                {
                    visibility: "exited" !== e || a ? void 0 : "hidden"
                }, h,
                {}, n.props.style)
            }, t))
        }))
    })),
    Eb = (n(598), n(273)),
    Sb = n.n(Eb);
class Mb extends a.a.Component
{
    render()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "SuccessProgress-Container"
        }, a.a.createElement("img",
        {
            className: "SuccessProgress-Img",
            src: Sb.a
        })))
    }
}
var Tb = Mb,
    kb = {
        maxCount: 150,
        speed: 3,
        frameInterval: 15,
        alpha: 1,
        gradient: !1,
        start: null,
        stop: null,
        toggle: null,
        pause: null,
        resume: null,
        togglePause: null,
        remove: null,
        isPaused: null,
        isRunning: null
    };
! function()
{
    kb.start = h, kb.stop = d, kb.toggle = function()
    {
        n ? d() : h()
    }, kb.pause = u, kb.resume = l, kb.togglePause = function()
    {
        r ? l() : u()
    }, kb.isPaused = function()
    {
        return r
    }, kb.remove = function()
    {
        stop(), r = !1, o = []
    }, kb.isRunning = function()
    {
        return n
    };
    var e = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame,
        t = ["rgba(0,0,0,", "rgba(200,200,200,"],
        n = !1,
        r = !1,
        i = Date.now(),
        o = [],
        a = 0,
        s = null;

    function c(e, n, r)
    {
        return e.color = t[Math.random() * t.length | 0] + (kb.alpha + ")"), e.color2 = t[Math.random() * t.length | 0] + (kb.alpha + ")"), e.x = Math.random() * n, e.y = Math.random() * r - r, e.diameter = 10 * Math.random() + 5, e.tilt = 10 * Math.random() - 10, e.tiltAngleIncrement = .07 * Math.random() + .05, e.tiltAngle = Math.random() * Math.PI, e
    }

    function u()
    {
        r = !0
    }

    function l()
    {
        r = !1, f()
    }

    function f()
    {
        if (!r)
            if (0 === o.length) s.clearRect(0, 0, window.innerWidth, window.innerHeight), null;
            else
            {
                var t = Date.now(),
                    u = t - i;
                (!e || u > kb.frameInterval) && (s.clearRect(0, 0, window.innerWidth, window.innerHeight), function()
                {
                    var e, t = window.innerWidth,
                        r = window.innerHeight;
                    a += .01;
                    for (var i = 0; i < o.length; i++) e = o[i], !n && e.y < -15 ? e.y = r + 100 : (e.tiltAngle += e.tiltAngleIncrement, e.x += Math.sin(a) - .5, e.y += .5 * (Math.cos(a) + e.diameter + kb.speed), e.tilt = 15 * Math.sin(e.tiltAngle)), (e.x > t + 20 || e.x < -20 || e.y > r) && (n && o.length <= kb.maxCount ? c(e, t, r) : (o.splice(i, 1), i--))
                }(), function(e)
                {
                    var t, n, r, i;
                    for (var a = 0; a < o.length; a++)
                    {
                        if (t = o[a], e.beginPath(), e.lineWidth = t.diameter, r = t.x + t.tilt, n = r + t.diameter / 2, i = t.y + t.tilt + t.diameter / 2, kb.gradient)
                        {
                            var s = e.createLinearGradient(n, t.y, r, i);
                            s.addColorStop("0", t.color), s.addColorStop("1.0", t.color2), e.strokeStyle = s
                        }
                        else e.strokeStyle = t.color;
                        e.moveTo(n, t.y), e.lineTo(r, i), e.stroke()
                    }
                }(s), i = t - u % kb.frameInterval), requestAnimationFrame(f)
            }
    }

    function h(e, t, i)
    {
        var a = window.innerWidth,
            u = window.innerHeight;
        window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e)
        {
            return window.setTimeout(e, kb.frameInterval)
        };
        var l = document.getElementById("confetti-canvas");
        null === l ? ((l = document.createElement("canvas")).setAttribute("id", "confetti-canvas"), l.setAttribute("style", "display:block;z-index:999999;pointer-events:none;position:fixed;top:0"), document.body.prepend(l), l.width = a, l.height = u, window.addEventListener("resize", (function()
        {
            l.width = window.innerWidth, l.height = window.innerHeight
        }), !0), s = l.getContext("2d")) : null === s && (s = l.getContext("2d"));
        var h = kb.maxCount;
        if (t)
            if (i)
                if (t == i) h = o.length + i;
                else
                {
                    if (t > i)
                    {
                        var p = t;
                        t = i, i = p
                    }
                    h = o.length + (Math.random() * (i - t) + t | 0)
                }
        else h = o.length + t;
        else i && (h = o.length + i);
        for (; o.length < h;) o.push(c(
        {}, a, u));
        n = !0, r = !1, f(), e && window.setTimeout(d, e)
    }

    function d()
    {
        n = !1
    }
}();
var Ab = class extends hb
{
    componentDidMount()
    {
        kb.start(5e3)
    }
    componentWillUnmount()
    {
        kb.stop()
    }
    renderCloseButton()
    {
        return a.a.createElement(ai,
        {
            size: "large",
            className: "GenericModal-Button",
            color: "primary",
            onClick: () => this.close()
        }, "Close")
    }
    renderBody()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(xb,
        {
            direction: "down",
            timeout: 400,
            in: !0,
            mountOnEnter: !0,
            unmountOnExit: !0
        }, a.a.createElement(Tb, null)), this.props.body, this.renderCloseButton())
    }
};

function Cb(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function Ob(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                Cb(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                Cb(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
class Pb extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            approveTxS: new jy(
            {
                aType: "DEPOSIT_APPROVED"
            }),
            depositTxS: new jy(
            {
                aType: "DEPOSITED"
            })
        }
    }
    refreshTxState()
    {
        this.state.approveTxS.reset(), this.state.depositTxS.reset(), this.setState(
        {
            approveTxS: this.state.approveTxS,
            depositTxS: this.state.depositTxS
        })
    }
    refreshApp()
    {
        var e = this;
        return Ob((function*()
        {
            e.refreshTxState();
            var
            {
                refresh: t
            } = e.props;
            yield t()
        }))()
    }
    approveDeposit(e)
    {
        var t = this;
        return Ob((function*()
        {
            var
            {
                web3State: n,
                poolInfo: r
            } = t.props, i = $n(n.getWalletClient(), r, e);
            yield t.state.approveTxS.handle(i, n.getAccount(), e => t.setState(
            {
                approveTxS: e
            }))
        }))()
    }
    makeDeposit()
    {
        var e = this;
        return Ob((function*()
        {
            var
            {
                web3State: t,
                poolInfo: n,
                depositAmount: r
            } = e.props, i = Yn(t.getWalletClient(), n, r, t.getAccount());
            yield e.state.depositTxS.handle(i, t.getAccount(), t => e.setState(
            {
                depositTxS: t
            }),
            {
                gas: 45e4
            })
        }))()
    }
    handleDeposit()
    {
        var e = this;
        return Ob((function*()
        {
            var
            {
                web3State: t,
                depositAmount: n,
                poolInfo: r,
                userInfo: i
            } = e.props;
            try
            {
                i.userAllowance < n && (yield e.approveDeposit(n)), yield e.makeDeposit(), Oy.trackWalletDeposit(t.getAccount(), n, r)
            }
            catch (e)
            {
                console.log(e)
            }
        }))()
    }
    isDepositWorking()
    {
        return this.state.approveTxS.isWorking() || this.state.depositTxS.isWorking()
    }
    renderApproveMaxButton()
    {
        var
        {
            userInfo: e,
            depositAmount: t
        } = this.props;
        if (e.userAllowance < t)
        {
            var n = 1e6 > 10 * t ? 1e6 : 10 * t;
            return a.a.createElement(Wo,
            {
                href: "#",
                variant: "body2",
                className: "DepositFormContainer-ApproveMaxButton",
                onClick: e => this.approveDeposit(n) && e.preventDefault()
            }, "APPROVE MAX")
        }
    }
    renderModal()
    {
        var
        {
            poolInfo: e,
            depositAmount: t
        } = this.props;
        if (this.state.approveTxS.isWorking())
        {
            var n = a.a.createElement(a.a.Fragment, null, "Approving geyser to spend ", t, " ", e.stakingTokenName);
            return a.a.createElement(bb,
            {
                title: "approving_deposit ...",
                body: n,
                state: this.state.approveTxS
            })
        }
        if (this.state.depositTxS.isWorking())
        {
            var r = a.a.createElement(a.a.Fragment, null, "Depositing ", t, " ", e.stakingTokenName, " into geyser");
            return a.a.createElement(bb,
            {
                title: "depositing ...",
                body: r,
                state: this.state.depositTxS
            })
        }
        if (this.state.approveTxS.isError())
        {
            var i = a.a.createElement(a.a.Fragment, null, "Error executing approval: ", this.state.approveTxS.txError);
            return a.a.createElement(db,
            {
                title: "approval_error",
                onClose: () => this.refreshTxState(),
                body: i
            })
        }
        if (this.state.depositTxS.isError())
        {
            var o = a.a.createElement(a.a.Fragment, null, "Error executing deposit: ", this.state.depositTxS.txError);
            return a.a.createElement(db,
            {
                title: "deposit_error",
                onClose: () => this.refreshTxState(),
                body: o
            })
        }
        if (this.state.depositTxS.isConfirmed())
        {
            var s = a.a.createElement(a.a.Fragment, null, a.a.createElement("div", null, "Successfully deposited", " ", a.a.createElement("b", null, t, " ", a.a.createElement("span",
            {
                className: "small-text"
            }, e.stakingTokenName))));
            return a.a.createElement(Ab,
            {
                title: "success :)",
                onClose: () => this.refreshApp(),
                body: s
            })
        }
        return a.a.createElement(a.a.Fragment, null)
    }
    render()
    {
        var
        {
            userInfo: e,
            depositAmount: t
        } = this.props, n = e.stakingTokenBalance < t || 0 == t || this.isDepositWorking();
        return a.a.createElement(a.a.Fragment, null, this.renderModal(), a.a.createElement(ai,
        {
            variant: "contained",
            size: "large",
            color: "primary",
            disabled: n,
            onClick: () => this.handleDeposit(),
            className: "DepositFormContainer-DepositButton"
        }, "Deposit"))
    }
}
var Rb = Pb;
n(600);
class Ib extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            depositAmount: ""
        }
    }
    updateDepositAmount(e)
    {
        this.setState(
        {
            depositAmount: e
        })
    }
    handleAmountChange(e)
    {
        var t = e.target.value;
        t && !Number(t) || this.updateDepositAmount(t)
    }
    refreshForm()
    {
        var
        {
            refreshApp: e
        } = this.props;
        e(), this.updateDepositAmount("")
    }
    render()
    {
        var
        {
            userInfo: e,
            poolInfo: t,
            pilotPoolInfo: n,
            pilotUserInfo: r,
            web3State: i,
            notify: o,
            activePoolRef: s
        } = this.props, c = this.state.depositAmount ? parseFloat(this.state.depositAmount) : "";
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(Zo, null, a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal",
            className: "DepositFormContainer-FieldWrapper"
        }, a.a.createElement(mi,
        {
            variant: "body1",
            className: "DepositFormContainer-DepositBalance"
        }, "Wallet balance:", " ", qv(e.stakingTokenBalance, "0.000000"), "Â ", a.a.createElement("span",
        {
            className: "small-text"
        }, "(", t.stakingTokenName, ")")), a.a.createElement("input",
        {
            className: "DepositFormContainer-TextField",
            type: "text",
            placeholder: "Enter Amount",
            value: this.state.depositAmount,
            onChange: e => this.handleAmountChange(e),
            min: "0",
            step: "0.01",
            ref: e =>
            {
                this.depositInput = e
            }
        }), e.stakingTokenBalance > 0 ? a.a.createElement("div",
        {
            className: "DepositFormContainer-MaxButtonContainer"
        }, a.a.createElement(Wo,
        {
            href: "#",
            variant: "body2",
            className: "DepositFormContainer-MaxButton",
            onClick: t =>
            {
                var n;
                e.stakingTokenBalance > 0 && (this.setState(
                {
                    depositAmount: (n = e.stakingTokenBalance, Math.floor(1e10 * n) / 1e10)
                }), t.preventDefault())
            }
        }, "MAX")) : null), a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal"
        }, a.a.createElement(bg,
        {
            userInfo: e,
            poolInfo: t,
            depositAmount: c
        })), a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "none"
        }, a.a.createElement(Tg,
        {
            poolInfo: t,
            userInfo: e,
            depositAmount: c,
            activePoolRef: s
        })), a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal"
        }, a.a.createElement(Rb,
        {
            userInfo: e,
            poolInfo: t,
            depositAmount: c,
            web3State: i,
            notify: o,
            refresh: () => this.refreshForm()
        }))))
    }
}
var Nb = Ce((e, t) =>
    {
        var n = t.activePoolRef,
            r = e.distributionPools.pools[n],
            i = e.distributionPools.pools["pilot-uniswap-weth-ampl"];
        return {
            web3State: e.distributionPools.web3State,
            formData: e.distributionPools.formData,
            activePoolRef: n,
            poolInfo: r.pool,
            userInfo: r.userpool,
            pilotPoolInfo: i.pool,
            pilotUserInfo: i.userpool,
            reqState: e.distributionPools.poolRefreshRS
        }
    }, e => (
    {
        notify: t => e(t.added())
    }))(Ib),
    Lb = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.color,
            a = void 0 === i ? "primary" : i,
            s = e.value,
            c = e.valueBuffer,
            u = e.variant,
            l = void 0 === u ? "indeterminate" : u,
            f = Object(er.a)(e, ["classes", "className", "color", "value", "valueBuffer", "variant"]),
            h = wr(),
            d = {},
            p = {
                bar1:
                {},
                bar2:
                {}
            };
        if ("determinate" === l || "buffer" === l)
            if (void 0 !== s)
            {
                d["aria-valuenow"] = Math.round(s);
                var m = s - 100;
                "rtl" === h.direction && (m = -m), p.bar1.transform = "translateX(".concat(m, "%)")
            }
        else 0;
        if ("buffer" === l)
            if (void 0 !== c)
            {
                var v = (c || 0) - 100;
                "rtl" === h.direction && (v = -v), p.bar2.transform = "translateX(".concat(v, "%)")
            }
        else 0;
        return o.createElement("div", Object(H.a)(
        {
            className: Object(nr.default)(n.root, n["color".concat(Object(hr.a)(a))], r,
            {
                determinate: n.determinate,
                indeterminate: n.indeterminate,
                buffer: n.buffer,
                query: n.query
            } [l]),
            role: "progressbar"
        }, d,
        {
            ref: t
        }, f), "buffer" === l ? o.createElement("div",
        {
            className: Object(nr.default)(n.dashed, n["dashedColor".concat(Object(hr.a)(a))])
        }) : null, o.createElement("div",
        {
            className: Object(nr.default)(n.bar, n["barColor".concat(Object(hr.a)(a))], ("indeterminate" === l || "query" === l) && n.bar1Indeterminate,
            {
                determinate: n.bar1Determinate,
                buffer: n.bar1Buffer
            } [l]),
            style: p.bar1
        }), "determinate" === l ? null : o.createElement("div",
        {
            className: Object(nr.default)(n.bar, ("indeterminate" === l || "query" === l) && n.bar2Indeterminate, "buffer" === l ? [n["color".concat(Object(hr.a)(a))], n.bar2Buffer] : n["barColor".concat(Object(hr.a)(a))]),
            style: p.bar2
        }))
    })),
    Bb = Object(rr.a)((function(e)
    {
        var t = function(t)
            {
                return "light" === e.palette.type ? Object(Cr.e)(t, .62) : Object(Cr.a)(t, .5)
            },
            n = t(e.palette.primary.main),
            r = t(e.palette.secondary.main);
        return {
            root:
            {
                position: "relative",
                overflow: "hidden",
                height: 4
            },
            colorPrimary:
            {
                backgroundColor: n
            },
            colorSecondary:
            {
                backgroundColor: r
            },
            determinate:
            {},
            indeterminate:
            {},
            buffer:
            {
                backgroundColor: "transparent"
            },
            query:
            {
                transform: "rotate(180deg)"
            },
            dashed:
            {
                position: "absolute",
                marginTop: 0,
                height: "100%",
                width: "100%",
                animation: "$buffer 3s infinite linear"
            },
            dashedColorPrimary:
            {
                backgroundImage: "radial-gradient(".concat(n, " 0%, ").concat(n, " 16%, transparent 42%)"),
                backgroundSize: "10px 10px",
                backgroundPosition: "0px -23px"
            },
            dashedColorSecondary:
            {
                backgroundImage: "radial-gradient(".concat(r, " 0%, ").concat(r, " 16%, transparent 42%)"),
                backgroundSize: "10px 10px",
                backgroundPosition: "0px -23px"
            },
            bar:
            {
                width: "100%",
                position: "absolute",
                left: 0,
                bottom: 0,
                top: 0,
                transition: "transform 0.2s linear",
                transformOrigin: "left"
            },
            barColorPrimary:
            {
                backgroundColor: e.palette.primary.main
            },
            barColorSecondary:
            {
                backgroundColor: e.palette.secondary.main
            },
            bar1Indeterminate:
            {
                width: "auto",
                animation: "$indeterminate1 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite"
            },
            bar1Determinate:
            {
                transition: "transform .".concat(4, "s linear")
            },
            bar1Buffer:
            {
                zIndex: 1,
                transition: "transform .".concat(4, "s linear")
            },
            bar2Indeterminate:
            {
                width: "auto",
                animation: "$indeterminate2 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite"
            },
            bar2Buffer:
            {
                transition: "transform .".concat(4, "s linear")
            },
            "@keyframes indeterminate1":
            {
                "0%":
                {
                    left: "-35%",
                    right: "100%"
                },
                "60%":
                {
                    left: "100%",
                    right: "-90%"
                },
                "100%":
                {
                    left: "100%",
                    right: "-90%"
                }
            },
            "@keyframes indeterminate2":
            {
                "0%":
                {
                    left: "-200%",
                    right: "100%"
                },
                "60%":
                {
                    left: "107%",
                    right: "-8%"
                },
                "100%":
                {
                    left: "107%",
                    right: "-8%"
                }
            },
            "@keyframes buffer":
            {
                "0%":
                {
                    opacity: 1,
                    backgroundPosition: "0px -23px"
                },
                "50%":
                {
                    opacity: 0,
                    backgroundPosition: "0px -23px"
                },
                "100%":
                {
                    opacity: 1,
                    backgroundPosition: "-200px -23px"
                }
            }
        }
    }),
    {
        name: "MuiLinearProgress"
    })(Lb);
class jb extends a.a.Component
{
    render()
    {
        var e, t, n, r,
            {
                userInfo: i,
                poolInfo: o,
                withdrawAmount: s,
                withdrawReward: c,
                withdrawCheckRS: u
            } = this.props,
            l = a.a.createElement(Bb,
            {
                variant: "query",
                color: "primary",
                className: "WithdrawInfo-WithdrawAmountLoader"
            }),
            f = c >= .01 ? c : 0,
            h = (e = s || 0, t = i.totalStakedFor, e <= t ? e : t);
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(Fi,
        {
            container: !0,
            className: "WithdrawGridContainer",
            alignItems: "stretch",
            justify: "space-around",
            alignContent: "center",
            spacing: 10
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "WithdrawBoxDiv WithdrawBoxDivAdj"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Amount to Withdraw"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, (n = h, r = i.totalStakedFor, new wn.a(n.toString()).eq(new wn.a(r.toString())) && h > 0 ? "MAX" : "".concat(h, " $").concat(o.stakingTokenName))))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "WithdrawBoxDiv WithdrawBoxDivAdj"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Rewards Claimed"), a.a.createElement(mi,
        {
            component: "div",
            variant: "body2"
        }, a.a.createElement("b", null, u.isPending() ? l : "".concat(qv(f, "0,0.00"), " ").concat(o.distTokenName))))))))
    }
}
var Fb = jb;
class Ub extends a.a.Component
{
    render()
    {
        var
        {
            poolInfo: e,
            userInfo: t,
            withdrawAmount: n,
            activePoolRef: r
        } = this.props, i = [
        {
            show: n > t.totalStakedFor,
            body: a.a.createElement(_g,
            {
                type: "warning",
                body: a.a.createElement(mi,
                {
                    variant: "h5",
                    className: "topFix"
                }, "Cannot withdraw more than your deposit")
            })
        }];
        return a.a.createElement(Sg,
        {
            customWarnings: i,
            activePoolRef: r
        })
    }
}
var Db = Ub;
var zb = o.createContext(),
    Hb = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.component,
            a = void 0 === i ? "table" : i,
            s = e.padding,
            c = void 0 === s ? "default" : s,
            u = e.size,
            l = void 0 === u ? "medium" : u,
            f = e.stickyHeader,
            h = void 0 !== f && f,
            d = Object(er.a)(e, ["classes", "className", "component", "padding", "size", "stickyHeader"]),
            p = o.useMemo((function()
            {
                return {
                    padding: c,
                    size: l,
                    stickyHeader: h
                }
            }), [c, l, h]);
        return o.createElement(zb.Provider,
        {
            value: p
        }, o.createElement(a, Object(H.a)(
        {
            ref: t,
            className: Object(nr.default)(n.root, r, h && n.stickyHeader)
        }, d)))
    })),
    Vb = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                display: "table",
                width: "100%",
                borderCollapse: "collapse",
                borderSpacing: 0,
                "& caption": Object(H.a)(
                {}, e.typography.body2,
                {
                    padding: e.spacing(2),
                    color: e.palette.text.secondary,
                    textAlign: "left",
                    captionSide: "bottom"
                })
            },
            stickyHeader:
            {
                borderCollapse: "separate"
            }
        }
    }),
    {
        name: "MuiTable"
    })(Hb);
var Wb = o.createContext(),
    Gb = {
        variant: "body"
    },
    qb = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.component,
            a = void 0 === i ? "tbody" : i,
            s = Object(er.a)(e, ["classes", "className", "component"]);
        return o.createElement(Wb.Provider,
        {
            value: Gb
        }, o.createElement(a, Object(H.a)(
        {
            className: Object(nr.default)(n.root, r),
            ref: t
        }, s)))
    })),
    $b = Object(rr.a)(
    {
        root:
        {
            display: "table-row-group"
        }
    },
    {
        name: "MuiTableBody"
    })(qb),
    Kb = o.forwardRef((function(e, t)
    {
        var n, r = e.align,
            i = void 0 === r ? "inherit" : r,
            a = e.classes,
            s = e.className,
            c = e.component,
            u = e.padding,
            l = e.scope,
            f = e.size,
            h = e.sortDirection,
            d = e.variant,
            p = Object(er.a)(e, ["align", "classes", "className", "component", "padding", "scope", "size", "sortDirection", "variant"]),
            m = o.useContext(zb),
            v = o.useContext(Wb);
        n = c || (v && "head" === v.variant ? "th" : "td");
        var g = l;
        !g && v && "head" === v.variant && (g = "col");
        var y = u || (m && m.padding ? m.padding : "default"),
            b = f || (m && m.size ? m.size : "medium"),
            w = d || v && v.variant,
            _ = null;
        return h && (_ = "asc" === h ? "ascending" : "descending"), o.createElement(n, Object(H.a)(
        {
            ref: t,
            className: Object(nr.default)(a.root, a[w], s, "inherit" !== i && a["align".concat(Object(hr.a)(i))], "default" !== y && a["padding".concat(Object(hr.a)(y))], "medium" !== b && a["size".concat(Object(hr.a)(b))], "head" === w && m && m.stickyHeader && a.stickyHeader),
            "aria-sort": _,
            scope: g
        }, p))
    })),
    Yb = Object(rr.a)((function(e)
    {
        return {
            root: Object(H.a)(
            {}, e.typography.body2,
            {
                display: "table-cell",
                verticalAlign: "inherit",
                borderBottom: "1px solid\n    ".concat("light" === e.palette.type ? Object(Cr.e)(Object(Cr.c)(e.palette.divider, 1), .88) : Object(Cr.a)(Object(Cr.c)(e.palette.divider, 1), .68)),
                textAlign: "left",
                padding: 16
            }),
            head:
            {
                color: e.palette.text.primary,
                lineHeight: e.typography.pxToRem(24),
                fontWeight: e.typography.fontWeightMedium
            },
            body:
            {
                color: e.palette.text.primary
            },
            footer:
            {
                color: e.palette.text.secondary,
                lineHeight: e.typography.pxToRem(21),
                fontSize: e.typography.pxToRem(12)
            },
            sizeSmall:
            {
                padding: "6px 24px 6px 16px",
                "&:last-child":
                {
                    paddingRight: 16
                },
                "&$paddingCheckbox":
                {
                    width: 24,
                    padding: "0px 12px 0 16px",
                    "&:last-child":
                    {
                        paddingLeft: 12,
                        paddingRight: 16
                    },
                    "& > *":
                    {
                        padding: 0
                    }
                }
            },
            paddingCheckbox:
            {
                width: 48,
                padding: "0 0 0 4px",
                "&:last-child":
                {
                    paddingLeft: 0,
                    paddingRight: 4
                }
            },
            paddingNone:
            {
                padding: 0,
                "&:last-child":
                {
                    padding: 0
                }
            },
            alignLeft:
            {
                textAlign: "left"
            },
            alignCenter:
            {
                textAlign: "center"
            },
            alignRight:
            {
                textAlign: "right",
                flexDirection: "row-reverse"
            },
            alignJustify:
            {
                textAlign: "justify"
            },
            stickyHeader:
            {
                position: "sticky",
                top: 0,
                left: 0,
                zIndex: 2,
                backgroundColor: e.palette.background.default
            }
        }
    }),
    {
        name: "MuiTableCell"
    })(Kb),
    Xb = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.component,
            a = void 0 === i ? "tr" : i,
            s = e.hover,
            c = void 0 !== s && s,
            u = e.selected,
            l = void 0 !== u && u,
            f = Object(er.a)(e, ["classes", "className", "component", "hover", "selected"]),
            h = o.useContext(Wb);
        return o.createElement(a, Object(H.a)(
        {
            ref: t,
            className: Object(nr.default)(n.root, r, h &&
            {
                head: n.head,
                footer: n.footer
            } [h.variant], c && n.hover, l && n.selected)
        }, f))
    })),
    Jb = Object(rr.a)((function(e)
    {
        return {
            root:
            {
                color: "inherit",
                display: "table-row",
                verticalAlign: "middle",
                outline: 0,
                "&$hover:hover":
                {
                    backgroundColor: e.palette.action.hover
                },
                "&$selected, &$selected:hover":
                {
                    backgroundColor: Object(Cr.c)(e.palette.secondary.main, e.palette.action.selectedOpacity)
                }
            },
            selected:
            {},
            hover:
            {},
            head:
            {},
            footer:
            {}
        }
    }),
    {
        name: "MuiTableRow"
    })(Xb);
class Zb extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            open: !0
        }
    }
    close()
    {
        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
        this.setState(
        {
            open: !1
        }), this.props.onClose && this.props.onClose(e)
    }
    renderButtons()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(ai,
        {
            size: "large",
            className: "GenericModal-Button Cancel",
            onClick: () => this.close(!1)
        }, "No"), a.a.createElement(ai,
        {
            size: "large",
            className: "GenericModal-Button",
            onClick: () => this.close(!0)
        }, "Yes"))
    }
    renderTitle()
    {
        return this.props.title
    }
    renderBody()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "DialogModal-body"
        }, this.props.body), this.renderButtons())
    }
    render()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(lb,
        {
            title: this.renderTitle(),
            body: this.renderBody(),
            open: this.state.open,
            transparent: this.props.transparent
        }))
    }
}
Zb.propTypes = {
    transparent: j.a.bool,
    title: j.a.string,
    body: j.a.element,
    onClose: j.a.func.isRequired
};
var Qb = Zb;
var ew = class extends Qb
{
    renderButtons()
    {
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(ai,
        {
            size: "large",
            className: "GenericModal-DialogButton GenericModal-Button Cancel",
            onClick: () => this.close(!1)
        }, "No, Wait"), a.a.createElement(ai,
        {
            size: "large",
            className: "GenericModal-DialogButton GenericModal-Button",
            onClick: () => this.close(!0)
        }, "Withdraw Anyway"))
    }
    renderBonusMsg()
    {
        var
        {
            userInfo: e,
            poolInfo: t,
            withdrawAmount: n,
            withdrawReward: r
        } = this.props, i = Wn(t, e, 0, 2592e3) - Gn(t, e, n, 2592e3);
        if (i > .01) return a.a.createElement("span", null, "If you stayed deposited for 1 more month,", a.a.createElement("br", null), "You could be eligible for an additionalÂ ", a.a.createElement("b", null, qv(i, "0,0.00"), " ", t.distTokenName), " ", "reward.");
        var o = Wn(t, e, 0, 604800) - Gn(t, e, n, 604800);
        if (o > .01) return a.a.createElement("span", null, "If you stayed deposited for 1 more week,", a.a.createElement("br", null), "You could be eligible for an additionalÂ ", a.a.createElement("b", null, qv(o, "0,0.00"), " ", t.distTokenName), " ", "reward.");
        var s = t.totalLocked + t.totalUnlocked - r;
        return s > .01 ? a.a.createElement("span", null, "Currently", " ", a.a.createElement("b", null, qv(s, "0,0.00"), " ", t.distTokenName), " ", "are unclaimed.", a.a.createElement("br", null), "You could claim a higher portion of the unclaimed rewards if you stayed longer.") : void 0
    }
    renderBody()
    {
        var
        {
            poolInfo: e,
            withdrawAmount: t,
            withdrawReward: n
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, a.a.createElement("div",
        {
            className: "DialogModal-body WithdrawConfirmationModal-body"
        }, a.a.createElement(a.a.Fragment, null, this.renderBonusMsg(), a.a.createElement(Vb,
        {
            className: "WithdrawFormContainer-WithdrawConfirmationTable"
        }, a.a.createElement($b, null, a.a.createElement(Jb, null, a.a.createElement(Yb, null, "Withdraw"), a.a.createElement(Yb, null, t, " ", a.a.createElement("span",
        {
            className: "small-text"
        }, e.stakingTokenName))), a.a.createElement(Jb, null, a.a.createElement(Yb, null, "Reward"), a.a.createElement(Yb, null, n, " ", a.a.createElement("span",
        {
            className: "small-text"
        }, e.distTokenName))))))), this.renderButtons())
    }
};

function tw(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function nw(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                tw(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                tw(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
class rw extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            withdrawTxS: new jy(
            {
                aType: "WITHDRAWN"
            }),
            showWithdrawConfirmation: !1
        }
    }
    refreshTxState()
    {
        this.state.withdrawTxS.reset(), this.setState(
        {
            withdrawTxS: this.state.withdrawTxS
        })
    }
    refreshApp()
    {
        var e = this;
        return nw((function*()
        {
            e.refreshTxState();
            var
            {
                refresh: t
            } = e.props;
            yield t()
        }))()
    }
    handleWithdraw()
    {
        var e = this;
        return nw((function*()
        {
            var
            {
                web3State: t,
                poolInfo: n,
                withdrawAmount: r
            } = e.props;
            try
            {
                var i = Jn(t.getWalletClient(), n, r, t.getAccount());
                yield e.state.withdrawTxS.handle(i, t.getAccount(), t => e.setState(
                {
                    withdrawTxS: t
                })), Oy.trackWalletWithdraw(t.getAccount(), r, n)
            }
            catch (e)
            {
                console.log(e)
            }
        }))()
    }
    renderConfirmationModal()
    {
        if (this.state.showWithdrawConfirmation)
        {
            var
            {
                userInfo: e,
                poolInfo: t,
                withdrawAmount: n,
                withdrawReward: r
            } = this.props, i = e =>
            {
                e && this.handleWithdraw(), this.setState(
                {
                    showWithdrawConfirmation: !1
                })
            };
            return a.a.createElement(ew,
            {
                title: "Are you sure?",
                userInfo: e,
                poolInfo: t,
                withdrawAmount: n,
                withdrawReward: r,
                onClose: e => i(e)
            })
        }
    }
    confirmWithdraw()
    {
        this.setState(
        {
            showWithdrawConfirmation: !0
        })
    }
    renderTransactionFlowModal()
    {
        var
        {
            poolInfo: e,
            withdrawAmount: t,
            withdrawReward: n
        } = this.props;
        if (this.state.withdrawTxS.isWorking())
        {
            var r = a.a.createElement(a.a.Fragment, null, t > .01 ? a.a.createElement("span", null, "Claiming ", n, " ", a.a.createElement("span",
            {
                className: "small-text"
            }, e.distTokenName), " ", "reward") : a.a.createElement("span", null, "Withdrawing ", t, " ", a.a.createElement("span",
            {
                className: "small-text"
            }, e.stakingTokenName)));
            return a.a.createElement(bb,
            {
                title: "withdrawing ...",
                body: r,
                state: this.state.withdrawTxS
            })
        }
        if (this.state.withdrawTxS.isError())
        {
            var i = a.a.createElement(a.a.Fragment, null, "Error withdrawing: ", this.state.withdrawTxS.txError);
            return a.a.createElement(db,
            {
                title: "withdraw_error",
                onClose: () => this.refreshTxState(),
                body: i
            })
        }
        if (this.state.withdrawTxS.isConfirmed())
        {
            var o = a.a.createElement(a.a.Fragment, null, a.a.createElement("div", null, n > .01 ? a.a.createElement("span", null, "Successfully claimed", " ", a.a.createElement("b", null, n, " ", a.a.createElement("span",
            {
                className: "small-text"
            }, e.distTokenName)), " ", "reward") : a.a.createElement("span", null, "Successfully withdrawn ", t, " ", a.a.createElement("span",
            {
                className: "small-text"
            }, e.stakingTokenName))));
            return a.a.createElement(Ab,
            {
                title: "success :)",
                onClose: () => this.refreshApp(),
                body: o
            })
        }
        return a.a.createElement(a.a.Fragment, null)
    }
    render()
    {
        var
        {
            poolInfo: e,
            userInfo: t,
            withdrawAmount: n,
            withdrawCheckRS: r
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, this.renderConfirmationModal(), this.renderTransactionFlowModal(), a.a.createElement(ai,
        {
            variant: "contained",
            size: "large",
            color: "primary",
            disabled: 0 == n || 0 == t.totalStakedFor || n > t.totalStakedFor || this.state.withdrawTxS.isWorking() || r.isPending(),
            onClick: () => "pilot-uniswap-weth-ampl" == e.poolRef ? this.handleWithdraw() : this.confirmWithdraw(),
            className: "WithdrawFormContainer-WithdrawButton"
        }, "Withdraw"))
    }
}
var iw = rw;
n(602);

function ow(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}
class aw extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            withdrawAmount: "",
            withdrawReward: 0,
            debounceTimeout: null,
            withdrawCheckRS: new Ry(
            {
                aType: "WITHDRAW_CHECK"
            })
        }
    }
    updateReqState(e, t)
    {
        this.state[e][t](), this.setState(
        {
            s: this.state
        })
    }
    updateWithdrawAmount(e)
    {
        this.setState(
        {
            withdrawAmount: e
        })
    }
    updateWithdrawReward(e)
    {
        this.setState(
        {
            withdrawReward: e
        })
    }
    fetchRewardAmount(e)
    {
        var t, n = this;
        return (t = function*()
        {
            var
            {
                web3State: t,
                userInfo: r,
                poolInfo: i
            } = n.props;
            if (0 == n.state.withdrawAmount) return n.updateWithdrawReward(0), void n.updateReqState("withdrawCheckRS", "success");
            if (n.state.withdrawAmount >= r.totalStakedFor) return n.updateWithdrawReward(r.totalCurrentRewardsFor), void n.updateReqState("withdrawCheckRS", "success");
            try
            {
                var
                {
                    rewardAmount: o
                } = yield function(e, t, n, r)
                {
                    return qn.apply(this, arguments)
                }(t.getWalletClient(), i, t.getAccount(), e);
                n.updateWithdrawReward(o), n.updateReqState("withdrawCheckRS", "success")
            }
            catch (e)
            {
                console.error(e), n.updateWithdrawReward(0), n.updateReqState("withdrawCheckRS", "error")
            }
        }, function()
        {
            var e = this,
                n = arguments;
            return new Promise((function(r, i)
            {
                var o = t.apply(e, n);

                function a(e)
                {
                    ow(o, r, i, a, s, "next", e)
                }

                function s(e)
                {
                    ow(o, r, i, a, s, "throw", e)
                }
                a(void 0)
            }))
        })()
    }
    handleAmountChange(e)
    {
        if (!e || Number(e))
        {
            this.updateWithdrawAmount(e);
            var t = this;
            clearTimeout(this.state.debounceTimeout), this.updateReqState("withdrawCheckRS", "pending"), this.setState(
            {
                debounceTimeout: setTimeout(() => t.fetchRewardAmount(e), 1e3)
            })
        }
    }
    refreshForm()
    {
        var
        {
            refreshApp: e
        } = this.props;
        e(), this.updateWithdrawAmount(""), this.updateWithdrawReward(0)
    }
    renderWarning()
    {
        var
        {
            poolInfo: e,
            userInfo: t,
            activePoolRef: n
        } = this.props;
        return a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "none"
        }, a.a.createElement(Db,
        {
            poolInfo: e,
            userInfo: t,
            withdrawAmount: this.state.withdrawAmount,
            activePoolRef: n
        }))
    }
    renderTooltip()
    {
        var
        {
            userInfo: e,
            poolInfo: t
        } = this.props;
        if (0 != e.totalStakedFor)
        {
            var n = e.totalStakedFor / t.stakingTokenTotalSupply,
                r = t.stakingTokenComposition.reduce((e, t) =>
                {
                    var r = t.balance * n;
                    return "".concat(e, " ").concat(qv(r, "0.000"), " ").concat(t.name)
                }, ""),
                i = "Deposited liquidity tokens are worth ".concat(qv(e.totalStakedForVal, "0.00"), " USD (i.e)").concat(r, ".");
            return a.a.createElement(vg,
            {
                title: i,
                toolipClassName: "WithdrawFormContainer-Tooltip"
            })
        }
    }
    render()
    {
        var
        {
            userInfo: e,
            poolInfo: t,
            web3State: n,
            notify: r
        } = this.props, i = this.state.withdrawAmount ? parseFloat(this.state.withdrawAmount) : "";
        return !n.isConnected() || !n.isAllowedNetwork() ? a.a.createElement(a.a.Fragment, null, a.a.createElement(Zo, null, a.a.createElement("div",
        {
            className: "WithdrawFormContainer-EmptyWarningContainer"
        }, this.renderWarning()))) : a.a.createElement(a.a.Fragment, null, a.a.createElement(Zo, null, a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal",
            className: "WithdrawFormContainer-FieldWrapper"
        }, a.a.createElement(mi,
        {
            variant: "body1",
            className: "WithdrawFormContainer-WithdrawBalance",
            display: "inline"
        }, this.renderTooltip(), "Deposited: ", qv(e.totalStakedFor, "0.000000"), "Â ", a.a.createElement("span",
        {
            className: "small-text"
        }, "(", t.stakingTokenName, ")")), a.a.createElement("input",
        {
            className: "WithdrawFormContainer-TextField",
            type: "text",
            placeholder: "Enter Amount",
            value: i,
            onChange: e => this.handleAmountChange(e.target.value),
            min: "0",
            step: "0.01",
            ref: e =>
            {
                this.withdrawInput = e
            }
        }), e.totalStakedFor > 0 ? a.a.createElement("div",
        {
            className: "WithdrawFormContainer-MaxButtonContainer"
        }, a.a.createElement(Wo,
        {
            href: "#",
            variant: "body2",
            className: "WithdrawFormContainer-MaxButton",
            onClick: t =>
            {
                e.totalStakedFor > 0 && (this.handleAmountChange(e.totalStakedFor), t.preventDefault())
            }
        }, "MAX")) : null), a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal"
        }, a.a.createElement(Fb,
        {
            userInfo: e,
            poolInfo: t,
            withdrawAmount: this.state.withdrawAmount,
            withdrawReward: this.state.withdrawReward,
            withdrawCheckRS: this.state.withdrawCheckRS
        })), this.renderWarning(), a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal"
        }, a.a.createElement(iw,
        {
            userInfo: e,
            poolInfo: t,
            web3State: n,
            withdrawAmount: this.state.withdrawAmount,
            withdrawReward: this.state.withdrawReward,
            withdrawCheckRS: this.state.withdrawCheckRS,
            refresh: () => this.refreshForm(),
            notify: r
        }))))
    }
}
var sw = Ce((e, t) =>
{
    var n = t.activePoolRef,
        r = e.distributionPools.pools[n];
    return {
        web3State: e.distributionPools.web3State,
        formData: e.distributionPools.formData,
        activePoolRef: n,
        userInfo: r.userpool,
        poolInfo: r.pool,
        reqState: e.distributionPools.poolRefreshRS
    }
}, e => (
{
    notify: t => e(t.added())
}))(aw);
class cw extends a.a.Component
{
    render()
    {
        var
        {
            poolInfo: e
        } = this.props, t = e.totalOfferedRewards - (e.totalLocked + e.totalUnlocked);
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(Fi,
        {
            container: !0,
            className: "PoolGridContainer",
            alignItems: "stretch",
            justify: "space-around",
            alignContent: "center",
            spacing: 10
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 6,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "PoolBoxDiv"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Total Rewards"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, qv(e.totalOfferedRewards, "0,0.00"), " ", e.distTokenName))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 6,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "PoolBoxDiv"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Total Deposits"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, qv(e.totalStakedVal, "0,0.00"), " USD"))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 6,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "PoolBoxDiv"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Locked Rewards"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, qv(e.totalLocked, "0,0.00"), " ", e.distTokenName))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 6,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "PoolBoxDiv"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Unlocked Rewards"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, qv(e.totalUnlocked + t, "0,0.00"), " ", e.distTokenName))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "PoolBoxDiv"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Program duration"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, qv(e.periodSec / 86400, "0.0"), " days left"))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 6,
            md: 6,
            lg: 6,
            xl: 6
        }, a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "PoolBoxDiv"
        }, a.a.createElement(mi,
        {
            variant: "body1"
        }, "Reward unlock rate"), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, qv(e.poolMonthlyDrip.unlockRate, "0,0.00"), " ", e.distTokenName, " / month")))))))
    }
}
var uw = cw;
n(604);
class lw extends a.a.Component
{
    renderWarning()
    {
        var
        {
            poolInfo: e
        } = this.props;
        if ("pilot-uniswap-weth-ampl" == e.poolRef) return a.a.createElement(_g,
        {
            type: "success",
            body: a.a.createElement(mi,
            {
                variant: "h5",
                className: "topFix"
            }, "Migrate tokens to Geyser V1 (Beehive) for higher rewards")
        })
    }
    render()
    {
        var
        {
            userInfo: e,
            poolInfo: t
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(Zo, null, a.a.createElement(Xo,
        {
            fullWidth: !0,
            margin: "normal"
        }, a.a.createElement(uw,
        {
            userInfo: e,
            poolInfo: t
        }))))
    }
}
var fw = Ce((e, t) =>
{
    var n = e.distributionPools.pools[t.activePoolRef];
    return {
        userInfo: n.userpool,
        poolInfo: n.pool
    }
}, null)(lw);
class hw extends a.a.Component
{
    render()
    {
        var
        {
            title: e,
            tooltipText: t,
            value: n
        } = this.props;
        return a.a.createElement(Ar,
        {
            elevation: 0,
            square: !1
        }, a.a.createElement("div",
        {
            className: "BalanceBoxDiv"
        }, a.a.createElement(Fi,
        {
            container: !0
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 10,
            sm: 10,
            md: 10,
            lg: 10,
            xl: 10
        }, a.a.createElement(mi,
        {
            variant: "body1",
            className: "BalanceCard-Title"
        }, e)), a.a.createElement(Fi,
        {
            item: !0,
            xs: 2,
            sm: 2,
            md: 2,
            lg: 2,
            xl: 2,
            className: "BalanceCard-TooltipContainer"
        }, a.a.createElement(vg,
        {
            title: t,
            toolipClassName: "BalanceCard-Tooltip"
        }))), a.a.createElement(mi,
        {
            variant: "body2"
        }, a.a.createElement("b", null, n))))
    }
}
class dw extends a.a.Component
{
    render()
    {
        var
        {
            userInfo: e,
            poolInfo: t
        } = this.props, n = function(e)
        {
            return (1 + e.poolBiMonthlyDrip.roi) ** (31536e3 / 5184e3) - 1
        }(t), r = function(e, t)
        {
            var n = Wn(e, t, 0, 5184e3),
                r = t.totalStakedForVal;
            return (1 + n * e.totalLockedVal / e.totalLocked / r) ** (31536e3 / 5184e3) - 1
        }(t, e), i = e.totalStakedFor > 0 ? r : n;
        i >= 1e6 && (i = 1e6);
        var o = "Deposit liquidity tokens for 60 days to achieve a ".concat(qv(t.maxMultiplier, "0"), "x reward multiplier."),
            s = a.a.createElement(a.a.Fragment, null, qv(e.totalCurrentRewardsFor, "0,0.00"), "Â ", a.a.createElement("span",
            {
                className: "BalanceBoxTokenSymbol"
            }, t.distTokenName));
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(Fi,
        {
            container: !0,
            className: "BalanceGridContainer",
            alignItems: "stretch",
            justify: "space-around",
            alignContent: "center",
            spacing: 10
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 6,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
        }, a.a.createElement(hw,
        {
            title: "APY",
            tooltipText: "APY is estimated for a new deposit over the next 60 days, and does not account for gains or losses from holding liquidity tokens.",
            value: qv(i, "0.00%")
        })), a.a.createElement(Fi,
        {
            item: !0,
            xs: 6,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
        }, a.a.createElement(hw,
        {
            title: "Reward Multiplier",
            tooltipText: o,
            value: "".concat(qv(e.bonusMultiplier, "0.0"), "x")
        })), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 4,
            md: 4,
            lg: 4,
            xl: 4
        }, a.a.createElement(hw,
        {
            title: "Accrued Rewards",
            tooltipText: "Total rewards you have accrued till date. Larger your deposit and for longer, higher the accrual rate.",
            value: s
        }))))
    }
}
var pw = dw;

function mw(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function vw(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                mw(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                mw(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
class gw extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            approveTxS: new jy(
            {
                aType: "DEPOSIT_APPROVED"
            }),
            depositTxS: new jy(
            {
                aType: "DEPOSITED"
            }),
            withdrawTxS: new jy(
            {
                aType: "WITHDRAWN"
            }),
            migrateFlow: !1
        }
    }
    refreshTxState()
    {
        this.state.approveTxS.reset(), this.state.depositTxS.reset(), this.state.withdrawTxS.reset(), this.setState(
        {
            approveTxS: this.state.approveTxS,
            depositTxS: this.state.depositTxS,
            withdrawTxS: this.state.withdrawTxS
        })
    }
    refreshApp()
    {
        var e = this;
        return vw((function*()
        {
            var
            {
                refresh: t
            } = e.props;
            e.refreshTxState(), yield t()
        }))()
    }
    handleWithdraw(e, t, n)
    {
        var r = Jn(e.getWalletClient(), t, n);
        return this.state.withdrawTxS.handle(r, e.getAccount(), e => this.setState(
        {
            withdrawTxS: e
        }))
    }
    handleApprove(e, t, n)
    {
        var r = $n(e.getWalletClient(), t, n);
        return this.state.approveTxS.handle(r, e.getAccount(), e => this.setState(
        {
            approveTxS: e
        }))
    }
    handleDeposit(e, t, n)
    {
        var r = Yn(e.getWalletClient(), t, n);
        return this.state.depositTxS.handle(r, e.getAccount(), e => this.setState(
        {
            depositTxS: e
        }))
    }
    handleMigrateFlow()
    {
        var e = this;
        return vw((function*()
        {
            var
            {
                web3State: t,
                poolInfo: n,
                userInfo: r,
                pilotPoolInfo: i,
                pilotUserInfo: o
            } = e.props;
            e.setState(
            {
                migrateFlow: !0
            });
            try
            {
                var a = o.totalStakedFor;
                yield e.handleWithdraw(t, i, a), r.userAllowance < a && (yield e.handleApprove(t, n, a)), yield e.handleDeposit(t, n, a), Oy.trackWalletMigration(t.getAccount(), a, n)
            }
            catch (e)
            {
                console.log(e)
            }
        }))()
    }
    handleWithdrawFlow()
    {
        var e = this;
        return vw((function*()
        {
            var
            {
                web3State: t,
                poolInfo: n,
                userInfo: r,
                pilotPoolInfo: i,
                pilotUserInfo: o
            } = e.props;
            e.setState(
            {
                migrateFlow: !1
            });
            try
            {
                var a = o.totalStakedFor;
                yield e.handleWithdraw(t, i, a), Oy.trackWalletWithdraw(t.getAccount(), a, n)
            }
            catch (e)
            {
                console.log(e)
            }
        }))()
    }
    renderModal()
    {
        var
        {
            web3State: e,
            poolInfo: t,
            userInfo: n,
            pilotPoolInfo: r,
            pilotUserInfo: i
        } = this.props, o = i.totalStakedFor;
        if (this.state.withdrawTxS.isWorking())
        {
            var s = a.a.createElement(a.a.Fragment, null, "Withdrawing all your liquidity tokens and rewards from the Pilot");
            return a.a.createElement(bb,
            {
                title: "withdrawing from pilot ...",
                body: s,
                state: this.state.withdrawTxS
            })
        }
        if (this.state.withdrawTxS.isError())
        {
            var c = a.a.createElement(a.a.Fragment, null, "Error withdrawing: ", this.state.withdrawTxS.txError);
            return a.a.createElement(db,
            {
                title: "withdraw_error",
                onClose: () => this.refreshTxState(),
                body: c
            })
        }
        if (this.state.approveTxS.isWorking())
        {
            var u = a.a.createElement(a.a.Fragment, null, "Approving Beehive V1.0 to spend ", o, " ", t.stakingTokenName);
            return a.a.createElement(bb,
            {
                title: "approving_deposit ...",
                body: u,
                state: this.state.approveTxS
            })
        }
        if (this.state.depositTxS.isWorking())
        {
            var l = a.a.createElement(a.a.Fragment, null, "Depositing ", o, " ", t.stakingTokenName, " into Beehive V1.0");
            return a.a.createElement(bb,
            {
                title: "migrating to beehive...",
                body: l,
                state: this.state.depositTxS
            })
        }
        if (this.state.withdrawTxS.isError())
        {
            var f = a.a.createElement(a.a.Fragment, null, "Error withdrawing: ", this.state.withdrawTxS.txError);
            return a.a.createElement(db,
            {
                title: "withdraw_error",
                onClose: () => this.refreshApp(),
                body: f
            })
        }
        if (this.state.approveTxS.isError())
        {
            var h = a.a.createElement(a.a.Fragment, null, "Error executing approval: ", this.state.approveTxS.txError);
            return a.a.createElement(db,
            {
                title: "approval_error",
                onClose: () => this.refreshApp(),
                body: h
            })
        }
        if (this.state.depositTxS.isError())
        {
            var d = a.a.createElement(a.a.Fragment, null, "Error executing deposit: ", this.state.depositTxS.txError);
            return a.a.createElement(db,
            {
                title: "deposit_error",
                onClose: () => this.refreshApp(),
                body: d
            })
        }
        if (this.state.withdrawTxS.isConfirmed() && !this.state.migrateFlow)
        {
            var p = a.a.createElement(a.a.Fragment, null, a.a.createElement("div", null, "Successfully withdrew all funds from pilot"));
            return a.a.createElement(Ab,
            {
                title: "success :)",
                onClose: () => this.refreshApp(),
                body: p
            })
        }
        if (this.state.depositTxS.isConfirmed() && this.state.migrateFlow)
        {
            var m = a.a.createElement(a.a.Fragment, null, a.a.createElement("div", null, "Successfully migrated", " ", a.a.createElement("b", null, o, " ", a.a.createElement("span",
            {
                className: "small-text"
            }, t.stakingTokenName))));
            return a.a.createElement(Ab,
            {
                title: "success :)",
                onClose: () => this.refreshApp(),
                body: m
            })
        }
        return a.a.createElement(a.a.Fragment, null)
    }
    render()
    {
        var
        {
            pilotPoolInfo: e,
            pilotUserInfo: t,
            poolInfo: n,
            userInfo: r
        } = this.props;
        return "pilot-uniswap-weth-ampl" == n.poolRef || 0 == t.totalStakedFor ? null : a.a.createElement(a.a.Fragment, null, this.renderModal(), a.a.createElement("div",
        {
            className: "migration-message"
        }, a.a.createElement(Fi,
        {
            container: !0
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 12,
            md: 7,
            lg: 7,
            xl: 7
        }, a.a.createElement("h3", null, "You still have funds in Pilot"), a.a.createElement("table", null, a.a.createElement("tbody",
        {
            cellSpacing: "0"
        }, a.a.createElement("tr", null, a.a.createElement("td",
        {
            className: "migration-td-label"
        }, "Pilot Balance"), a.a.createElement("td",
        {
            className: "migration-td-data"
        }, qv(t.totalStakedFor, "0.000000"), " ", a.a.createElement("small", null, "(UWETHAMPL-V2)"))), a.a.createElement("tr", null, a.a.createElement("td",
        {
            className: "migration-td-label"
        }, "Pilot Rewards"), a.a.createElement("td",
        {
            className: "migration-td-data"
        }, qv(t.totalCurrentRewardsFor, "0,0.00"), " ", a.a.createElement("small", null, "AMPL")))))), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 12,
            md: 5,
            lg: 5,
            xl: 5
        }, a.a.createElement(mi,
        {
            variant: "body1",
            align: "center",
            className: "migration-text"
        }, a.a.createElement(ai,
        {
            className: "migrate-button",
            onClick: () => this.handleMigrateFlow(),
            size: "medium",
            variant: "outlined"
        }, "Migrate to Beehive V1.0"), a.a.createElement(ai,
        {
            className: "migrate-button withdraw",
            onClick: () => this.handleWithdrawFlow(),
            size: "medium",
            variant: "outlined"
        }, "Withdraw from Pilot"))))))
    }
}
var yw = gw,
    bw = n(49);
var ww = function(e)
{
    var t = function(t)
    {
        var n = e(t);
        return t.css ? Object(H.a)(
        {}, Object(bw.a)(n, e(Object(H.a)(
        {
            theme: t.theme
        }, t.css))),
        {}, function(e, t)
        {
            var n = {};
            return Object.keys(e).forEach((function(r)
            {
                -1 === t.indexOf(r) && (n[r] = e[r])
            })), n
        }(t.css, [e.filterProps])) : n
    };
    return t.propTypes = {}, t.filterProps = ["css"].concat(Object(qr.a)(e.filterProps)), t
};
var _w = function()
    {
        for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
        var r = function(e)
        {
            return t.reduce((function(t, n)
            {
                var r = n(e);
                return r ? Object(bw.a)(t, r) : t
            }),
            {})
        };
        return r.propTypes = {}, r.filterProps = t.reduce((function(e, t)
        {
            return e.concat(t.filterProps)
        }), []), r
    },
    xw = n(109);

function Ew(e, t)
{
    return t && "string" == typeof t ? t.split(".").reduce((function(e, t)
    {
        return e && e[t] ? e[t] : null
    }), e) : null
}
var Sw = function(e)
{
    var t = e.prop,
        n = e.cssProperty,
        r = void 0 === n ? e.prop : n,
        i = e.themeKey,
        o = e.transform,
        a = function(e)
        {
            if (null == e[t]) return null;
            var n = e[t],
                a = Ew(e.theme, i) ||
                {};
            return Object(xw.a)(e, n, (function(e)
            {
                var t;
                return "function" == typeof a ? t = a(e) : Array.isArray(a) ? t = a[e] || e : (t = Ew(a, e) || e, o && (t = o(t))), !1 === r ? t : Object(tr.a)(
                {}, r, t)
            }))
        };
    return a.propTypes = {}, a.filterProps = [t], a
};

function Mw(e)
{
    return "number" != typeof e ? e : "".concat(e, "px solid")
}
var Tw = _w(Sw(
    {
        prop: "border",
        themeKey: "borders",
        transform: Mw
    }), Sw(
    {
        prop: "borderTop",
        themeKey: "borders",
        transform: Mw
    }), Sw(
    {
        prop: "borderRight",
        themeKey: "borders",
        transform: Mw
    }), Sw(
    {
        prop: "borderBottom",
        themeKey: "borders",
        transform: Mw
    }), Sw(
    {
        prop: "borderLeft",
        themeKey: "borders",
        transform: Mw
    }), Sw(
    {
        prop: "borderColor",
        themeKey: "palette"
    }), Sw(
    {
        prop: "borderRadius",
        themeKey: "shape"
    })),
    kw = _w(Sw(
    {
        prop: "displayPrint",
        cssProperty: !1,
        transform: function(e)
        {
            return {
                "@media print":
                {
                    display: e
                }
            }
        }
    }), Sw(
    {
        prop: "display"
    }), Sw(
    {
        prop: "overflow"
    }), Sw(
    {
        prop: "textOverflow"
    }), Sw(
    {
        prop: "visibility"
    }), Sw(
    {
        prop: "whiteSpace"
    })),
    Aw = _w(Sw(
    {
        prop: "flexBasis"
    }), Sw(
    {
        prop: "flexDirection"
    }), Sw(
    {
        prop: "flexWrap"
    }), Sw(
    {
        prop: "justifyContent"
    }), Sw(
    {
        prop: "alignItems"
    }), Sw(
    {
        prop: "alignContent"
    }), Sw(
    {
        prop: "order"
    }), Sw(
    {
        prop: "flex"
    }), Sw(
    {
        prop: "flexGrow"
    }), Sw(
    {
        prop: "flexShrink"
    }), Sw(
    {
        prop: "alignSelf"
    }), Sw(
    {
        prop: "justifyItems"
    }), Sw(
    {
        prop: "justifySelf"
    })),
    Cw = _w(Sw(
    {
        prop: "gridGap"
    }), Sw(
    {
        prop: "gridColumnGap"
    }), Sw(
    {
        prop: "gridRowGap"
    }), Sw(
    {
        prop: "gridColumn"
    }), Sw(
    {
        prop: "gridRow"
    }), Sw(
    {
        prop: "gridAutoFlow"
    }), Sw(
    {
        prop: "gridAutoColumns"
    }), Sw(
    {
        prop: "gridAutoRows"
    }), Sw(
    {
        prop: "gridTemplateColumns"
    }), Sw(
    {
        prop: "gridTemplateRows"
    }), Sw(
    {
        prop: "gridTemplateAreas"
    }), Sw(
    {
        prop: "gridArea"
    })),
    Ow = _w(Sw(
    {
        prop: "position"
    }), Sw(
    {
        prop: "zIndex",
        themeKey: "zIndex"
    }), Sw(
    {
        prop: "top"
    }), Sw(
    {
        prop: "right"
    }), Sw(
    {
        prop: "bottom"
    }), Sw(
    {
        prop: "left"
    })),
    Pw = _w(Sw(
    {
        prop: "color",
        themeKey: "palette"
    }), Sw(
    {
        prop: "bgcolor",
        cssProperty: "backgroundColor",
        themeKey: "palette"
    })),
    Rw = Sw(
    {
        prop: "boxShadow",
        themeKey: "shadows"
    });

function Iw(e)
{
    return e <= 1 ? "".concat(100 * e, "%") : e
}
var Nw = Sw(
    {
        prop: "width",
        transform: Iw
    }),
    Lw = Sw(
    {
        prop: "maxWidth",
        transform: Iw
    }),
    Bw = Sw(
    {
        prop: "minWidth",
        transform: Iw
    }),
    jw = Sw(
    {
        prop: "height",
        transform: Iw
    }),
    Fw = Sw(
    {
        prop: "maxHeight",
        transform: Iw
    }),
    Uw = Sw(
    {
        prop: "minHeight",
        transform: Iw
    }),
    Dw = (Sw(
    {
        prop: "size",
        cssProperty: "width",
        transform: Iw
    }), Sw(
    {
        prop: "size",
        cssProperty: "height",
        transform: Iw
    }), _w(Nw, Lw, Bw, jw, Fw, Uw, Sw(
    {
        prop: "boxSizing"
    }))),
    zw = n(707),
    Hw = _w(Sw(
    {
        prop: "fontFamily",
        themeKey: "typography"
    }), Sw(
    {
        prop: "fontSize",
        themeKey: "typography"
    }), Sw(
    {
        prop: "fontStyle",
        themeKey: "typography"
    }), Sw(
    {
        prop: "fontWeight",
        themeKey: "typography"
    }), Sw(
    {
        prop: "letterSpacing"
    }), Sw(
    {
        prop: "lineHeight"
    }), Sw(
    {
        prop: "textAlign"
    })),
    Vw = n(706);

function Ww(e, t)
{
    var n = {};
    return Object.keys(e).forEach((function(r)
    {
        -1 === t.indexOf(r) && (n[r] = e[r])
    })), n
}
var Gw = function(e)
    {
        var t = function(e)
        {
            return function(t)
            {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] :
                    {},
                    r = n.name,
                    i = Object(er.a)(n, ["name"]);
                var o, s = r,
                    c = "function" == typeof t ? function(e)
                    {
                        return {
                            root: function(n)
                            {
                                return t(Object(H.a)(
                                {
                                    theme: e
                                }, n))
                            }
                        }
                    } :
                    {
                        root: t
                    },
                    u = Object(Vw.a)(c, Object(H.a)(
                    {
                        Component: e,
                        name: r || e.displayName,
                        classNamePrefix: s
                    }, i));
                t.filterProps && (o = t.filterProps, delete t.filterProps), t.propTypes && (t.propTypes, delete t.propTypes);
                var l = a.a.forwardRef((function(t, n)
                {
                    var r = t.children,
                        i = t.className,
                        s = t.clone,
                        c = t.component,
                        l = Object(er.a)(t, ["children", "className", "clone", "component"]),
                        f = u(t),
                        h = Object(nr.default)(f.root, i),
                        d = l;
                    if (o && (d = Ww(d, o)), s) return a.a.cloneElement(r, Object(H.a)(
                    {
                        className: Object(nr.default)(r.props.className, h)
                    }, d));
                    if ("function" == typeof r) return r(Object(H.a)(
                    {
                        className: h
                    }, d));
                    var p = c || e;
                    return a.a.createElement(p, Object(H.a)(
                    {
                        ref: n,
                        className: h
                    }, d), r)
                }));
                return G()(l, e), l
            }
        }(e);
        return function(e, n)
        {
            return t(e, Object(H.a)(
            {
                defaultTheme: br.a
            }, n))
        }
    },
    qw = ww(_w(Tw, kw, Aw, Cw, Ow, Pw, Rw, Dw, zw.b, Hw)),
    $w = Gw("div")(qw,
    {
        name: "MuiBox"
    });

function Kw()
{
    return (Kw = Object.assign || function(e)
    {
        for (var t = 1; t < arguments.length; t++)
        {
            var n = arguments[t];
            for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
        }
        return e
    }).apply(this, arguments)
}

function Yw(e, t)
{
    if (null == e) return {};
    var n, r, i = function(e, t)
    {
        if (null == e) return {};
        var n, r, i = {},
            o = Object.keys(e);
        for (r = 0; r < o.length; r++) n = o[r], t.indexOf(n) >= 0 || (i[n] = e[n]);
        return i
    }(e, t);
    if (Object.getOwnPropertySymbols)
    {
        var o = Object.getOwnPropertySymbols(e);
        for (r = 0; r < o.length; r++) n = o[r], t.indexOf(n) >= 0 || Object.prototype.propertyIsEnumerable.call(e, n) && (i[n] = e[n])
    }
    return i
}
var Xw = function(e)
{
    var
    {
        children: t,
        value: n,
        index: r
    } = e, i = Yw(e, ["children", "value", "index"]);
    return a.a.createElement(mi, Kw(
    {
        component: "div",
        role: "tabpanel",
        hidden: n !== r,
        id: "body-tabpanel-".concat(r)
    }, i), n === r && a.a.createElement($w,
    {
        p: 3
    }, t))
};
n(606);

function Jw()
{
    var e = new Date;
    return Math.round(e.getTime() / 1e3)
}
class Zw extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            lastRefresh: Jw()
        }
    }
    handleViewChange(e)
    {
        var
        {
            dispatch: t,
            ui: n,
            refreshApp: r
        } = this.props, i = Jw();
        t(n.viewChanged(e)), i - this.state.lastRefresh >= 300 && (r(), this.setState(
        {
            lastRefresh: i
        }))
    }
    renderMigrationTool()
    {
        var
        {
            web3State: e,
            userInfo: t,
            poolInfo: n,
            pilotPoolInfo: r,
            pilotUserInfo: i,
            refreshApp: o
        } = this.props;
        return a.a.createElement(yw,
        {
            web3State: e,
            userInfo: t,
            poolInfo: n,
            pilotPoolInfo: r,
            pilotUserInfo: i,
            refresh: () => o()
        })
    }
    renderBalanceInfo()
    {
        var
        {
            web3State: e,
            userInfo: t,
            poolInfo: n
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, a.a.createElement(pw,
        {
            userInfo: t,
            poolInfo: n
        }))
    }
    render()
    {
        var
        {
            web3State: e,
            userInfo: t,
            poolInfo: n,
            ui: r,
            activePoolRef: i,
            refreshApp: o
        } = this.props;
        return a.a.createElement(a.a.Fragment, null, this.renderBalanceInfo(), a.a.createElement("br", null), a.a.createElement(a.a.Fragment, null, a.a.createElement(Do,
        {
            value: r.currentView,
            className: "AppTabs",
            variant: "fullWidth",
            scrollButtons: "off",
            indicatorColor: "primary",
            textColor: "primary",
            onChange: (e, t) => this.handleViewChange(t)
        }, a.a.createElement(Ho,
        {
            label: "Deposit"
        }), a.a.createElement(Ho,
        {
            label: "Withdraw"
        }), a.a.createElement(Ho,
        {
            label: "Stats"
        })), a.a.createElement(Xw,
        {
            value: r.currentView,
            index: 0
        }, a.a.createElement(Nb,
        {
            activePoolRef: i,
            refreshApp: o
        })), a.a.createElement(Xw,
        {
            value: r.currentView,
            index: 1
        }, a.a.createElement(sw,
        {
            activePoolRef: i,
            refreshApp: o
        })), a.a.createElement(Xw,
        {
            value: r.currentView,
            index: 2
        }, a.a.createElement(fw,
        {
            activePoolRef: i
        }))))
    }
}
var Qw = Ce((e, t) =>
    {
        var n = t.activePoolRef,
            r = e.distributionPools.pools[n],
            i = e.distributionPools.pools["pilot-uniswap-weth-ampl"];
        return {
            web3State: e.distributionPools.web3State,
            activePoolRef: n,
            userInfo: r.userpool,
            poolInfo: r.pool,
            ui: e.ui.uiInteraction,
            pilotPoolInfo: i.pool,
            pilotUserInfo: i.userpool
        }
    }, null)(Zw),
    e_ = o.forwardRef((function(e, t)
    {
        var n = e.classes,
            r = e.className,
            i = e.component,
            a = void 0 === i ? "div" : i,
            s = e.disableGutters,
            c = void 0 !== s && s,
            u = e.fixed,
            l = void 0 !== u && u,
            f = e.maxWidth,
            h = void 0 === f ? "lg" : f,
            d = Object(er.a)(e, ["classes", "className", "component", "disableGutters", "fixed", "maxWidth"]);
        return o.createElement(a, Object(H.a)(
        {
            className: Object(nr.default)(n.root, r, l && n.fixed, c && n.disableGutters, !1 !== h && n["maxWidth".concat(Object(hr.a)(String(h)))]),
            ref: t
        }, d))
    })),
    t_ = Object(rr.a)((function(e)
    {
        return {
            root: Object(tr.a)(
            {
                width: "100%",
                marginLeft: "auto",
                boxSizing: "border-box",
                marginRight: "auto",
                paddingLeft: e.spacing(2),
                paddingRight: e.spacing(2),
                display: "block"
            }, e.breakpoints.up("sm"),
            {
                paddingLeft: e.spacing(3),
                paddingRight: e.spacing(3)
            }),
            disableGutters:
            {
                paddingLeft: 0,
                paddingRight: 0
            },
            fixed: Object.keys(e.breakpoints.values).reduce((function(t, n)
            {
                var r = e.breakpoints.values[n];
                return 0 !== r && (t[e.breakpoints.up(n)] = {
                    maxWidth: r
                }), t
            }),
            {}),
            maxWidthXs: Object(tr.a)(
            {}, e.breakpoints.up("xs"),
            {
                maxWidth: Math.max(e.breakpoints.values.xs, 444)
            }),
            maxWidthSm: Object(tr.a)(
            {}, e.breakpoints.up("sm"),
            {
                maxWidth: e.breakpoints.values.sm
            }),
            maxWidthMd: Object(tr.a)(
            {}, e.breakpoints.up("md"),
            {
                maxWidth: e.breakpoints.values.md
            }),
            maxWidthLg: Object(tr.a)(
            {}, e.breakpoints.up("lg"),
            {
                maxWidth: e.breakpoints.values.lg
            }),
            maxWidthXl: Object(tr.a)(
            {}, e.breakpoints.up("xl"),
            {
                maxWidth: e.breakpoints.values.xl
            })
        }
    }),
    {
        name: "MuiContainer"
    })(e_);
n(608);

function n_(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function r_(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                n_(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                n_(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
class i_ extends a.a.Component
{
    constructor(e)
    {
        super(e), this.state = {
            hasPilotStake: !1
        }
    }
    refreshPool(e)
    {
        var t = arguments,
            n = this;
        return r_((function*()
        {
            var r = t.length > 1 && void 0 !== t[1] && t[1],
                {
                    web3State: i,
                    poolsData: o,
                    dispatch: a
                } = n.props;
            console.log("For geyser:", e);
            var s = o[e].pool,
                c = o[e].userpool;
            console.log("Refreshing pool info", r);
            var u = yield s.refresh(i, e, r);
            console.log("Refreshing user info", i.getAccount(), r);
            var l = yield c.refresh(i, s, r);
            if (yield a(u), yield a(l), i.isActiveConnection())
            {
                var f = yield function(e, t)
                {
                    return Qn.apply(this, arguments)
                }(i.getWalletClient(), i.getAccount());
                n.setState(
                {
                    hasPilotStake: f
                })
            }
            console.log("Refresh complete", s, c)
        }))()
    }
    refreshApp()
    {
        var e = arguments,
            t = this;
        return r_((function*()
        {
            var n, r = e.length > 0 && void 0 !== e[0] && e[0],
                {
                    dispatch: i,
                    web3State: o,
                    reqState: a,
                    activePoolRef: s
                } = t.props;
            i(a.pending()), console.log("Refreshing application data"), yield(n = .1, new Promise(e =>
            {
                setTimeout(() => e(), 1e3 * n)
            }));
            try
            {
                yield t.refreshPool(s, r), i(a.success())
            }
            catch (e)
            {
                i(a.fatal()), console.error(e)
            }
        }))()
    }
    onConnectionChange()
    {
        var e = arguments,
            t = this;
        return r_((function*()
        {
            e.length > 0 && void 0 !== e[0] && e[0];
            console.log("On Connection change");
            var
            {
                web3State: n,
                dispatch: r
            } = t.props;
            n.connecting && (yield n._onboard().walletCheck()), console.log("Refreshing wallet", n.getAccount()), yield r(n.refresh()), yield t.refreshApp(), n.subscribeToRefresh(() => t.onConnectionChange())
        }))()
    }
    componentDidMount()
    {
        var e = this;
        return r_((function*()
        {
            var
            {
                web3State: t,
                dispatch: n,
                reqState: r
            } = e.props;
            n(r.pending()), console.log("Mounting", t.getAccount()), yield t.onLoadConnect(), e.onConnectionChange()
        }))()
    }
    renderBody()
    {
        var
        {
            reqState: e,
            activePoolRef: t
        } = this.props;
        return e.isPending() ? a.a.createElement("div",
        {
            className: "AppProgress-Container"
        }, a.a.createElement(mb, null)) : e.isError() ? a.a.createElement(a.a.Fragment, null, a.a.createElement(t_,
        {
            fixed: !0,
            maxWidth: "xl"
        }, a.a.createElement(Fi,
        {
            container: !0
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 12,
            md: 2,
            lg: 3,
            xl: 4
        }), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 12,
            md: 8,
            lg: 6,
            xl: 4
        }, a.a.createElement(ib, null, a.a.createElement(cb,
        {
            className: "AppContainer-CardContent"
        }, a.a.createElement(_g,
        {
            type: "error",
            body: a.a.createElement(mi,
            {
                variant: "h5"
            }, "Oops, Something went wrong. Please check back soon.")
        }))))))) : a.a.createElement(a.a.Fragment, null, a.a.createElement(t_,
        {
            fixed: !0,
            maxWidth: "xl"
        }, a.a.createElement(Fi,
        {
            container: !0
        }, a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 12,
            md: 2,
            lg: 3,
            xl: 4
        }), a.a.createElement(Fi,
        {
            item: !0,
            xs: 12,
            sm: 12,
            md: 8,
            lg: 6,
            xl: 4
        }, a.a.createElement(ib, null, a.a.createElement(cb,
        {
            className: "pilot-uniswap-weth-ampl" == t ? "AppContainer-CardContent dark" : "AppContainer-CardContent"
        }, a.a.createElement(Qw,
        {
            activePoolRef: t,
            refreshApp: () => this.refreshApp(!0)
        })))))))
    }
    render()
    {
        var
        {
            activePoolRef: e
        } = this.props;
        return a.a.createElement("div",
        {
            className: "AppContainer"
        }, a.a.createElement(yo,
        {
            activePoolRef: e,
            hasPilotStake: this.state.hasPilotStake
        }), a.a.createElement(hi, null), this.renderBody(), a.a.createElement(_o, null))
    }
}
var o_ = Ce((e, t) =>
{
    var n = t.activePoolRef;
    return {
        web3State: e.distributionPools.web3State,
        poolsData: e.distributionPools.pools,
        activePoolRef: n,
        reqState: e.distributionPools.poolRefreshRS
    }
}, null)(i_);

function a_(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}
class s_ extends Py
{
    emptyObj()
    {
        return {
            queriedTime: 0,
            periodSec: 0,
            bonusPeriodSec: 0,
            minMultiplier: 1,
            maxMultiplier: 1,
            startBonus: 0,
            totalLocked: 0,
            totalUnlocked: 0,
            totalStaked: 0,
            totalStakingShareSeconds: 0,
            totalStakingShares: 0,
            totalLockedShares: 0,
            numUnlockSchedules: 0,
            totalLockedVal: 0,
            totalUnlockedVal: 0,
            totalStakedVal: 0,
            totalOfferedRewards: 0,
            totalOfferedRewardsVal: 0,
            distTokenName: "",
            stakingTokenName: "",
            stakingTokenTotalSupply: 0,
            stakingTokenComposition: [],
            poolDailyDrip:
            {
                unlockRate: 0,
                roi: 0
            },
            poolMonthlyDrip:
            {
                unlockRate: 0,
                roi: 0
            },
            poolBiMonthlyDrip:
            {
                unlockRate: 0,
                roi: 0
            },
            poolYearlyDrip:
            {
                unlockRate: 0,
                roi: 0
            }
        }
    }
    static initialize(e)
    {
        var t = new s_;
        return t.poolRef = e, t
    }
    refresh(e, t)
    {
        var n, r = arguments,
            i = this;
        return (n = function*()
        {
            r.length > 2 && void 0 !== r[2] && r[2];
            try
            {
                "CVTDGlobalData|".concat(t);
                var n = yield function(e, t)
                {
                    return zn.apply(this, arguments)
                }(e.getReadClient(), t);
                Gv(i, n)
            }
            catch (e)
            {
                Gv(i, i.emptyObj()), console.log(e)
            }
            return i.toAction("CVTD_GLOBAL_DATA_REFRESHED")
        }, function()
        {
            var e = this,
                t = arguments;
            return new Promise((function(r, i)
            {
                var o = n.apply(e, t);

                function a(e)
                {
                    a_(o, r, i, a, s, "next", e)
                }

                function s(e)
                {
                    a_(o, r, i, a, s, "throw", e)
                }
                a(void 0)
            }))
        })()
    }
}

function c_(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}
class u_ extends Py
{
    emptyObj()
    {
        return {
            hasStakeHistory: !1,
            stakingTokenBalance: 0,
            distTokenBalance: 0,
            totalStakedFor: 0,
            totalStakedForVal: 0,
            totalRewardsFor: 0,
            totalRewardsForVal: 0,
            totalCurrentRewardsFor: 0,
            queriedTime: 0,
            userETHBalance: 0,
            userAllowance: 0,
            bonusRewards: 0,
            bonusPerc: 0,
            bonusMultiplier: 1,
            timeToWaitForFullBonus: 0,
            userStakingShareSeconds: 0,
            totalStakedForT0: 0,
            totalStakedForT1: 0
        }
    }
    static initialize(e)
    {
        var t = new u_;
        return t.poolRef = e, t
    }
    refresh(e, t)
    {
        var n, r = arguments,
            i = this;
        return (n = function*()
        {
            r.length > 2 && void 0 !== r[2] && r[2];
            try
            {
                if (!e.isConnected() || !e.isAllowedNetwork()) throw "Wallet no connected or Network not allowed";
                var n = e.getAccount(),
                    o = ("CVTDUserData|".concat(t.poolRef, "|").concat(n), yield function(e, t)
                    {
                        return Hn.apply(this, arguments)
                    }(e.getWalletClient(), t, n));
                Gv(i, o)
            }
            catch (e)
            {
                Gv(i, i.emptyObj()), console.log(e)
            }
            return i.toAction("CVTD_USER_DATA_REFRESHED")
        }, function()
        {
            var e = this,
                t = arguments;
            return new Promise((function(r, i)
            {
                var o = n.apply(e, t);

                function a(e)
                {
                    c_(o, r, i, a, s, "next", e)
                }

                function s(e)
                {
                    c_(o, r, i, a, s, "throw", e)
                }
                a(void 0)
            }))
        })()
    }
}
class l_ extends Py
{
    emptyObj()
    {
        return {
            depositAmount: "",
            withdrawAmount: "",
            withdrawReward: 0
        }
    }
    static initialize()
    {
        return new l_
    }
    refresh()
    {
        return this.toAction("".concat("CVTD_FORM_DATA_REFRESHED"))
    }
}
n(152);
var f_ = n(153);
n(69), n(116), n(115);

function h_(e, t, n, r, i, o, a)
{
    try
    {
        var s = e[o](a),
            c = s.value
    }
    catch (e)
    {
        return void n(e)
    }
    s.done ? t(c) : Promise.resolve(c).then(r, i)
}

function d_(e)
{
    return function()
    {
        var t = this,
            n = arguments;
        return new Promise((function(r, i)
        {
            var o = e.apply(t, n);

            function a(e)
            {
                h_(o, r, i, a, s, "next", e)
            }

            function s(e)
            {
                h_(o, r, i, a, s, "throw", e)
            }
            a(void 0)
        }))
    }
}
var p_ = [1],
    {
        default: m_
    } = n(611),
    v_ = [
    {
        walletName: "metamask",
        preferred: !0
    },
    {
        walletName: "walletConnect",
        preferred: !0,
        infuraKey: hn
    },
    {
        walletName: "walletLink",
        label: "Coinbase Wallet",
        preferred: !0,
        rpcUrl: pn
    },
    {
        walletName: "authereum",
        preferred: !0
    },
    {
        walletName: "coinbase",
        preferred: !0
    },
    {
        walletName: "status",
        preferred: !0
    }];
var g_ = function()
{
    new m_(
    {
        concurrency: 1
    });
    var e = function()
        {
            var e = d_((function*() {}));
            return function()
            {
                return e.apply(this, arguments)
            }
        }(),
        t = !1,
        n = function()
        {
            var n = d_((function*()
            {
                t || (t = !0, yield e(), t = !1)
            }));
            return function()
            {
                return n.apply(this, arguments)
            }
        }();
    return {
        updateSubscription: function(t)
        {
            e = t
        },
        instance: Object(f_.e)(
        {
            dappId: "ee9b6dee-ad32-4caa-8f3a-00cf71605622",
            networkId: p_[0],
            hideBranding: !0,
            walletSelect:
            {
                wallets: v_
            },
            subscriptions:
            {
                address: () => n(),
                network: () => n(),
                wallet: () => n()
            }
        })
    }
}();
class y_ extends Py
{
    emptyObj()
    {
        return {
            account: "0x",
            chainId: "0",
            networkId: "0",
            connecting: !1
        }
    }
    subscribeToRefresh()
    {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : () =>
        {};
        g_.updateSubscription(() => e())
    }
    _onboard()
    {
        return g_.instance
    }
    _onboardState()
    {
        return g_.instance.getState()
    }
    refresh()
    {
        var e = this._onboardState();
        return e.address ? (this.account = e.address, this.networkId = e.network, this.chainId = e.network, this.connecting = !1) : Gv(this, this.emptyObj()), this.toAction("WEB3_STATE_REFRESHED")
    }
    connect()
    {
        var e = this;
        return d_((function*()
        {
            e.connecting = !0, yield e._onboard().walletSelect();
            var t = e.getWalletType();
            Ut.set("Web3State|wallet", t, [31536e6])
        }))()
    }
    onLoadConnect()
    {
        var e = this;
        return d_((function*()
        {
            if (!e.isActiveConnection())
            {
                var t = Ut.get("Web3State|wallet");
                t && (e.connecting = !0, yield e._onboard().walletSelect(t))
            }
        }))()
    }
    disconnect()
    {
        return this._onboard().walletReset()
    }
    getWallet()
    {
        return this._onboardState().wallet
    }
    getWalletType()
    {
        return this.getWallet().name
    }
    getReadClient()
    {
        return this.isConnected() && this.isAllowedNetwork() ? new yn(this.getWallet().provider) : yn.newFallbackConnection()
    }
    getWalletClient()
    {
        return new yn(this.getWallet().provider)
    }
    getAccount()
    {
        return this.account
    }
    isConnected()
    {
        return "0x" !== this.getAccount()
    }
    isActiveConnection()
    {
        return this.isConnected() && this.isAllowedNetwork()
    }
    isAllowedNetwork()
    {
        return p_.filter(e => e === this.networkId).length > 0
    }
}
var b_ = Object.keys(kn).reduce((e, t) => (e[t] = {
        pool: s_.initialize(t),
        userpool: u_.initialize(t)
    }, e),
    {}),
    w_ = {
        web3State: new y_,
        pools: b_,
        poolRefreshRS: new Ry(
        {
            aType: "POOL_REFRESHED"
        }),
        formData: l_.initialize()
    },
    __ = function()
    {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : w_,
            t = arguments.length > 1 ? arguments[1] : void 0,
            n = Object.assign(
            {}, e);
        switch (t.type)
        {
            case "WEB3_STATE_REFRESHED":
                return Object.assign(n,
                {
                    web3State: y_.fromAction(t)
                });
            case "CVTD_GLOBAL_DATA_REFRESHED":
                var r = s_.fromAction(t);
                return n.pools[r.poolRef] = Object.assign(n.pools[r.poolRef],
                {
                    pool: r
                }), n;
            case "CVTD_USER_DATA_REFRESHED":
                var i = u_.fromAction(t);
                return n.pools[i.poolRef] = Object.assign(n.pools[i.poolRef],
                {
                    userpool: i
                }), n;
            case "CVTD_FORM_DATA_REFRESHED":
                return Object.assign(n,
                {
                    formData: l_.fromAction(t)
                });
            case "".concat("POOL_REFRESHED", "-").concat("REQUEST_STATE_CHANGED"):
                return n.poolRefreshRS = Ry.fromAction(t), n;
            default:
                return n
        }
    };
class x_ extends Py
{
    emptyObj()
    {
        return {
            id: "",
            message: "",
            msgType: "",
            payload:
            {}
        }
    }
    constructor(e)
    {
        var
        {
            message: t,
            msgType: n,
            payload: r,
            id: i
        } = e;
        super(), this.message = t, this.msgType = n, this.payload = r, this.id = i || "".concat(this.msgType, "-").concat(Date.now())
    }
    isError()
    {
        return "M_ERROR" === this.msgType
    }
    isFatal()
    {
        return "M_FATAL" === this.msgType
    }
    isSuccess()
    {
        return "M_SUCCESS" === this.msgType
    }
    isInfo()
    {
        return "M_INFO" === this.msgType
    }
    isWarning()
    {
        return "M_WARNING" === this.msgType
    }
    added()
    {
        return this.toAction("NOTIFICATION_ADDED")
    }
    acknowledged()
    {
        return this.toAction("NOTIFICATION_REMOVED")
    }
    static newException(e, t, n)
    {
        var r = {
            trace: n.stack,
            message: n.message
        };
        return new x_(
        {
            message: e,
            msgType: t,
            payload: r
        })
    }
    static newError(e, t)
    {
        return this.newException(e, "M_ERROR", t)
    }
    static newFatal(e, t)
    {
        return this.newException(e, "M_FATAL", t)
    }
    static newSuccess(e)
    {
        return new x_(
        {
            message: e,
            msgType: "M_SUCCESS",
            payload:
            {}
        })
    }
    static newInfo(e)
    {
        return new x_(
        {
            message: e,
            msgType: "M_INFO",
            payload:
            {}
        })
    }
    static newWarning(e)
    {
        return new x_(
        {
            message: e,
            msgType: "M_WARNING",
            payload:
            {}
        })
    }
}
class E_ extends Py
{
    emptyObj()
    {
        return {
            accountModal: !1,
            currentView: 0
        }
    }
    viewChanged(e)
    {
        return this.currentView = e, this.toAction("".concat("UI_STATE_REFRESHED"))
    }
    refresh()
    {
        return this.toAction("".concat("UI_STATE_REFRESHED"))
    }
}
var S_, M_, T_ = {
        notifications: [],
        uiInteraction: new E_
    },
    k_ = function(e)
    {
        for (var t = Object.keys(e), n = {}, r = 0; r < t.length; r++)
        {
            var i = t[r];
            0, "function" == typeof e[i] && (n[i] = e[i])
        }
        var o = Object.keys(n),
            a = void 0;
        try
        {
            ! function(e)
            {
                Object.keys(e).forEach((function(t)
                {
                    var n = e[t];
                    if (void 0 === n(void 0,
                        {
                            type: O
                        })) throw new Error('Reducer "' + t + "\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");
                    if (void 0 === n(void 0,
                        {
                            type: "@@redux/PROBE_UNKNOWN_ACTION_" + Math.random().toString(36).substring(7).split("").join(".")
                        })) throw new Error('Reducer "' + t + "\" returned undefined when probed with a random type. Don't try to handle " + O + ' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')
                }))
            }(n)
        }
        catch (e)
        {
            a = e
        }
        return function()
        {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
                {},
                t = arguments[1];
            if (a) throw a;
            for (var r = !1, i = {}, s = 0; s < o.length; s++)
            {
                var c = o[s],
                    u = n[c],
                    l = e[c],
                    f = u(l, t);
                if (void 0 === f)
                {
                    var h = P(c, t);
                    throw new Error(h)
                }
                i[c] = f, r = r || f !== l
            }
            return r ? i : e
        }
    }(
    {
        distributionPools: __,
        ui: function()
        {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : T_,
                t = arguments.length > 1 ? arguments[1] : void 0,
                n = Object.assign(
                {}, e);
            switch (t.type)
            {
                case "NOTIFICATION_ADDED":
                    var r = x_.fromAction(t);
                    return Object.assign(n,
                    {
                        notifications: e.notifications.concat(r)
                    });
                case "NOTIFICATION_REMOVED":
                    var i = x_.fromAction(t),
                        o = (e, t) => e.id === t.id,
                        a = e.notifications.filter(e => !o(e, i));
                    return Object.assign(n,
                    {
                        notifications: a
                    });
                case "UI_STATE_REFRESHED":
                    return Object.assign(n,
                    {
                        uiInteraction: E_.fromAction(t)
                    });
                default:
                    return e
            }
        }
    }),
    A_ = n(276),
    C_ = Object(A_.a)(
    {
        spacing: 1,
        typography:
        {
            fontFamily: "Avenir",
            useNextVariants: !0,
            fontWeightRegular: 300,
            htmlFontSize: 16,
            fontVariant: "small-caps",
            h1:
            {
                fontSize: "2rem",
                fontWeight: "bold",
                textAlign: "center"
            },
            h2:
            {
                fontSize: "1.8rem",
                fontWeight: "bold"
            },
            h3:
            {
                fontSize: "1.5rem",
                fontFamily: "Helvetica",
                fontWeight: "bold",
                textAlign: "center"
            },
            h5:
            {
                fontSize: "1.5rem",
                fontWeight: "bold"
            },
            body1:
            {
                fontSize: "1.5rem",
                lineHeight: "25px",
                textAlign: "left"
            },
            body2:
            {
                fontSize: "1.5rem",
                fontFamily: '"SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace'
            }
        },
        overrides:
        {
            MuiAppBar:
            {
                root:
                {
                    minHeight: "65px",
                    boxShadow: "none",
                    marginBottom: "0px",
                    borderBottom: "1px solid #bfbfbf"
                },
                colorPrimary:
                {
                    backgroundColor: "white",
                    color: "black"
                }
            },
            MuiCard:
            {
                root:
                {
                    borderTop: "none",
                    borderRadius: "0px"
                }
            },
            MuiButton:
            {
                containedPrimary:
                {
                    backgroundColor: "#FF2D55",
                    color: "white",
                    textTransform: "uppercase",
                    "&:hover":
                    {
                        backgroundColor: "#FF2D55",
                        cursor: "pointer"
                    }
                },
                containedSecondary:
                {
                    color: "#fff",
                    backgroundColor: "#7424CC",
                    border: "1px solid #7424CC",
                    textTransform: "uppercase",
                    "&:hover":
                    {
                        backgroundColor: "#7424CC",
                        border: "1px solid #fff",
                        color: "#fff",
                        cursor: "pointer"
                    }
                },
                contained:
                {
                    backgroundColor: "rgb(255, 255, 255)",
                    color: "rgb(115, 115, 115)",
                    borderWidth: "1px",
                    borderStyle: "solid",
                    borderColor: "rgb(225, 225, 225)",
                    borderImage: "initial",
                    boxShadow: "none",
                    textTransform: "none",
                    "&:hover":
                    {
                        boxShadow: "none"
                    }
                }
            },
            MuiTabs:
            {
                root:
                {
                    marginBottom: "5px",
                    marginLeft: 2,
                    marginRight: 2,
                    borderRadius: "10px",
                    background: "#2c2c2c",
                    overflow: "hidden",
                    border: "0px solid #efefef"
                },
                indicator:
                {
                    background: "none"
                }
            },
            MuiTab:
            {
                root:
                {
                    fontSize: "1.25rem !important",
                    fontWeight: "600",
                    background: "#2c2c2c",
                    border: "2px solid #2c2c2c"
                },
                textColorPrimary:
                {
                    color: "#777",
                    "&$selected":
                    {
                        color: "#000000",
                        background: "#fff",
                        borderRadius: "10px",
                        border: "1.5px solid #2c2c2c",
                        boxSizing: "border-box"
                    }
                }
            },
            MuiTooltip:
            {
                tooltip:
                {
                    backgroundColor: "#000",
                    border: "1px solid #2c2c2c",
                    opacity: "1.0",
                    color: "#fff",
                    maxWidth: "325px",
                    fontSize: "1.3rem",
                    padding: "15px",
                    textAlign: "left"
                }
            },
            MuiTableCell:
            {
                body:
                {
                    padding: "10px",
                    fontFamily: "Avenir",
                    fontSize: "12px",
                    border: "1px solid rgba(224, 224, 224, 1)"
                }
            }
        }
    }),
    O_ = (n(617), n(619), n(621), function()
    {
        function e()
        {
            this.name = e.id
        }
        return e.prototype.setupOnce = function()
        {
            S_ = Function.prototype.toString, Function.prototype.toString = function()
            {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                var n = this.__sentry_original__ || this;
                return S_.apply(n, e)
            }
        }, e.id = "FunctionToString", e
    }()),
    P_ = n(3),
    R_ = n(19);
! function(e)
{
    e.PENDING = "PENDING", e.RESOLVED = "RESOLVED", e.REJECTED = "REJECTED"
}(M_ || (M_ = {}));
var I_ = function()
    {
        function e(e)
        {
            var t = this;
            this._state = M_.PENDING, this._handlers = [], this._resolve = function(e)
            {
                t._setResult(M_.RESOLVED, e)
            }, this._reject = function(e)
            {
                t._setResult(M_.REJECTED, e)
            }, this._setResult = function(e, n)
            {
                t._state === M_.PENDING && (Object(R_.m)(n) ? n.then(t._resolve, t._reject) : (t._state = e, t._value = n, t._executeHandlers()))
            }, this._attachHandler = function(e)
            {
                t._handlers = t._handlers.concat(e), t._executeHandlers()
            }, this._executeHandlers = function()
            {
                if (t._state !== M_.PENDING)
                {
                    var e = t._handlers.slice();
                    t._handlers = [], e.forEach((function(e)
                    {
                        e.done || (t._state === M_.RESOLVED && e.onfulfilled && e.onfulfilled(t._value), t._state === M_.REJECTED && e.onrejected && e.onrejected(t._value), e.done = !0)
                    }))
                }
            };
            try
            {
                e(this._resolve, this._reject)
            }
            catch (e)
            {
                this._reject(e)
            }
        }
        return e.prototype.toString = function()
        {
            return "[object SyncPromise]"
        }, e.resolve = function(t)
        {
            return new e((function(e)
            {
                e(t)
            }))
        }, e.reject = function(t)
        {
            return new e((function(e, n)
            {
                n(t)
            }))
        }, e.all = function(t)
        {
            return new e((function(n, r)
            {
                if (Array.isArray(t))
                    if (0 !== t.length)
                    {
                        var i = t.length,
                            o = [];
                        t.forEach((function(t, a)
                        {
                            e.resolve(t).then((function(e)
                            {
                                o[a] = e, 0 === (i -= 1) && n(o)
                            })).then(null, r)
                        }))
                    }
                else n([]);
                else r(new TypeError("Promise.all requires an array as input."))
            }))
        }, e.prototype.then = function(t, n)
        {
            var r = this;
            return new e((function(e, i)
            {
                r._attachHandler(
                {
                    done: !1,
                    onfulfilled: function(n)
                    {
                        if (t) try
                        {
                            return void e(t(n))
                        }
                        catch (e)
                        {
                            return void i(e)
                        }
                        else e(n)
                    },
                    onrejected: function(t)
                    {
                        if (n) try
                        {
                            return void e(n(t))
                        }
                        catch (e)
                        {
                            return void i(e)
                        }
                        else i(t)
                    }
                })
            }))
        }, e.prototype.catch = function(e)
        {
            return this.then((function(e)
            {
                return e
            }), e)
        }, e.prototype.finally = function(t)
        {
            var n = this;
            return new e((function(e, r)
            {
                var i, o;
                return n.then((function(e)
                {
                    o = !1, i = e, t && t()
                }), (function(e)
                {
                    o = !0, i = e, t && t()
                })).then((function()
                {
                    o ? r(i) : e(i)
                }))
            }))
        }, e
    }(),
    N_ = n(27),
    L_ = function()
    {
        function e()
        {
            this._notifyingListeners = !1, this._scopeListeners = [], this._eventProcessors = [], this._breadcrumbs = [], this._user = {}, this._tags = {}, this._extra = {}, this._contexts = {}
        }
        return e.prototype.addScopeListener = function(e)
        {
            this._scopeListeners.push(e)
        }, e.prototype.addEventProcessor = function(e)
        {
            return this._eventProcessors.push(e), this
        }, e.prototype._notifyScopeListeners = function()
        {
            var e = this;
            this._notifyingListeners || (this._notifyingListeners = !0, setTimeout((function()
            {
                e._scopeListeners.forEach((function(t)
                {
                    t(e)
                })), e._notifyingListeners = !1
            })))
        }, e.prototype._notifyEventProcessors = function(e, t, n, r)
        {
            var i = this;
            return void 0 === r && (r = 0), new I_((function(o, a)
            {
                var s = e[r];
                if (null === t || "function" != typeof s) o(t);
                else
                {
                    var c = s(P_.__assign(
                    {}, t), n);
                    Object(R_.m)(c) ? c.then((function(t)
                    {
                        return i._notifyEventProcessors(e, t, n, r + 1).then(o)
                    })).then(null, a) : i._notifyEventProcessors(e, c, n, r + 1).then(o).then(null, a)
                }
            }))
        }, e.prototype.setUser = function(e)
        {
            return this._user = e ||
            {}, this._notifyScopeListeners(), this
        }, e.prototype.setTags = function(e)
        {
            return this._tags = P_.__assign(
            {}, this._tags, e), this._notifyScopeListeners(), this
        }, e.prototype.setTag = function(e, t)
        {
            var n;
            return this._tags = P_.__assign(
            {}, this._tags, ((n = {})[e] = t, n)), this._notifyScopeListeners(), this
        }, e.prototype.setExtras = function(e)
        {
            return this._extra = P_.__assign(
            {}, this._extra, e), this._notifyScopeListeners(), this
        }, e.prototype.setExtra = function(e, t)
        {
            var n;
            return this._extra = P_.__assign(
            {}, this._extra, ((n = {})[e] = t, n)), this._notifyScopeListeners(), this
        }, e.prototype.setFingerprint = function(e)
        {
            return this._fingerprint = e, this._notifyScopeListeners(), this
        }, e.prototype.setLevel = function(e)
        {
            return this._level = e, this._notifyScopeListeners(), this
        }, e.prototype.setTransaction = function(e)
        {
            return this._transaction = e, this._notifyScopeListeners(), this
        }, e.prototype.setContext = function(e, t)
        {
            var n;
            return this._contexts = P_.__assign(
            {}, this._contexts, ((n = {})[e] = t, n)), this._notifyScopeListeners(), this
        }, e.prototype.setSpan = function(e)
        {
            return this._span = e, this._notifyScopeListeners(), this
        }, e.prototype.getSpan = function()
        {
            return this._span
        }, e.clone = function(t)
        {
            var n = new e;
            return t && (n._breadcrumbs = P_.__spread(t._breadcrumbs), n._tags = P_.__assign(
            {}, t._tags), n._extra = P_.__assign(
            {}, t._extra), n._contexts = P_.__assign(
            {}, t._contexts), n._user = t._user, n._level = t._level, n._span = t._span, n._transaction = t._transaction, n._fingerprint = t._fingerprint, n._eventProcessors = P_.__spread(t._eventProcessors)), n
        }, e.prototype.update = function(t)
        {
            if (!t) return this;
            if ("function" == typeof t)
            {
                var n = t(this);
                return n instanceof e ? n : this
            }
            return t instanceof e ? (this._tags = P_.__assign(
            {}, this._tags, t._tags), this._extra = P_.__assign(
            {}, this._extra, t._extra), this._contexts = P_.__assign(
            {}, this._contexts, t._contexts), t._user && (this._user = t._user), t._level && (this._level = t._level), t._fingerprint && (this._fingerprint = t._fingerprint)) : Object(R_.h)(t) && (t = t, this._tags = P_.__assign(
            {}, this._tags, t.tags), this._extra = P_.__assign(
            {}, this._extra, t.extra), this._contexts = P_.__assign(
            {}, this._contexts, t.contexts), t.user && (this._user = t.user), t.level && (this._level = t.level), t.fingerprint && (this._fingerprint = t.fingerprint)), this
        }, e.prototype.clear = function()
        {
            return this._breadcrumbs = [], this._tags = {}, this._extra = {}, this._user = {}, this._contexts = {}, this._level = void 0, this._transaction = void 0, this._fingerprint = void 0, this._span = void 0, this._notifyScopeListeners(), this
        }, e.prototype.addBreadcrumb = function(e, t)
        {
            var n = P_.__assign(
            {
                timestamp: Object(N_.l)()
            }, e);
            return this._breadcrumbs = void 0 !== t && t >= 0 ? P_.__spread(this._breadcrumbs, [n]).slice(-t) : P_.__spread(this._breadcrumbs, [n]), this._notifyScopeListeners(), this
        }, e.prototype.clearBreadcrumbs = function()
        {
            return this._breadcrumbs = [], this._notifyScopeListeners(), this
        }, e.prototype._applyFingerprint = function(e)
        {
            e.fingerprint = e.fingerprint ? Array.isArray(e.fingerprint) ? e.fingerprint : [e.fingerprint] : [], this._fingerprint && (e.fingerprint = e.fingerprint.concat(this._fingerprint)), e.fingerprint && !e.fingerprint.length && delete e.fingerprint
        }, e.prototype.applyToEvent = function(e, t)
        {
            return this._extra && Object.keys(this._extra).length && (e.extra = P_.__assign(
            {}, this._extra, e.extra)), this._tags && Object.keys(this._tags).length && (e.tags = P_.__assign(
            {}, this._tags, e.tags)), this._user && Object.keys(this._user).length && (e.user = P_.__assign(
            {}, this._user, e.user)), this._contexts && Object.keys(this._contexts).length && (e.contexts = P_.__assign(
            {}, this._contexts, e.contexts)), this._level && (e.level = this._level), this._transaction && (e.transaction = this._transaction), this._span && (e.contexts = P_.__assign(
            {
                trace: this._span.getTraceContext()
            }, e.contexts)), this._applyFingerprint(e), e.breadcrumbs = P_.__spread(e.breadcrumbs || [], this._breadcrumbs), e.breadcrumbs = e.breadcrumbs.length > 0 ? e.breadcrumbs : void 0, this._notifyEventProcessors(P_.__spread(B_(), this._eventProcessors), e, t)
        }, e
    }();

function B_()
{
    var e = Object(N_.f)();
    return e.__SENTRY__ = e.__SENTRY__ ||
    {}, e.__SENTRY__.globalEventProcessors = e.__SENTRY__.globalEventProcessors || [], e.__SENTRY__.globalEventProcessors
}

function j_(e)
{
    B_().push(e)
}
var F_ = Object(N_.f)(),
    U_ = "Sentry Logger ",
    D_ = function()
    {
        function e()
        {
            this._enabled = !1
        }
        return e.prototype.disable = function()
        {
            this._enabled = !1
        }, e.prototype.enable = function()
        {
            this._enabled = !0
        }, e.prototype.log = function()
        {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            this._enabled && Object(N_.c)((function()
            {
                F_.console.log(U_ + "[Log]: " + e.join(" "))
            }))
        }, e.prototype.warn = function()
        {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            this._enabled && Object(N_.c)((function()
            {
                F_.console.warn(U_ + "[Warn]: " + e.join(" "))
            }))
        }, e.prototype.error = function()
        {
            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
            this._enabled && Object(N_.c)((function()
            {
                F_.console.error(U_ + "[Error]: " + e.join(" "))
            }))
        }, e
    }();
F_.__SENTRY__ = F_.__SENTRY__ ||
{};
var z_ = F_.__SENTRY__.logger || (F_.__SENTRY__.logger = new D_),
    H_ = function()
    {
        function e(e, t, n)
        {
            void 0 === t && (t = new L_), void 0 === n && (n = 3), this._version = n, this._stack = [], this._stack.push(
            {
                client: e,
                scope: t
            })
        }
        return e.prototype._invokeClient = function(e)
        {
            for (var t, n = [], r = 1; r < arguments.length; r++) n[r - 1] = arguments[r];
            var i = this.getStackTop();
            i && i.client && i.client[e] && (t = i.client)[e].apply(t, P_.__spread(n, [i.scope]))
        }, e.prototype.isOlderThan = function(e)
        {
            return this._version < e
        }, e.prototype.bindClient = function(e)
        {
            this.getStackTop().client = e, e && e.setupIntegrations && e.setupIntegrations()
        }, e.prototype.pushScope = function()
        {
            var e = this.getStack(),
                t = e.length > 0 ? e[e.length - 1].scope : void 0,
                n = L_.clone(t);
            return this.getStack().push(
            {
                client: this.getClient(),
                scope: n
            }), n
        }, e.prototype.popScope = function()
        {
            return void 0 !== this.getStack().pop()
        }, e.prototype.withScope = function(e)
        {
            var t = this.pushScope();
            try
            {
                e(t)
            }
            finally
            {
                this.popScope()
            }
        }, e.prototype.getClient = function()
        {
            return this.getStackTop().client
        }, e.prototype.getScope = function()
        {
            return this.getStackTop().scope
        }, e.prototype.getStack = function()
        {
            return this._stack
        }, e.prototype.getStackTop = function()
        {
            return this._stack[this._stack.length - 1]
        }, e.prototype.captureException = function(e, t)
        {
            var n = this._lastEventId = Object(N_.m)(),
                r = t;
            if (!t)
            {
                var i = void 0;
                try
                {
                    throw new Error("Sentry syntheticException")
                }
                catch (e)
                {
                    i = e
                }
                r = {
                    originalException: e,
                    syntheticException: i
                }
            }
            return this._invokeClient("captureException", e, P_.__assign(
            {}, r,
            {
                event_id: n
            })), n
        }, e.prototype.captureMessage = function(e, t, n)
        {
            var r = this._lastEventId = Object(N_.m)(),
                i = n;
            if (!n)
            {
                var o = void 0;
                try
                {
                    throw new Error(e)
                }
                catch (e)
                {
                    o = e
                }
                i = {
                    originalException: e,
                    syntheticException: o
                }
            }
            return this._invokeClient("captureMessage", e, t, P_.__assign(
            {}, i,
            {
                event_id: r
            })), r
        }, e.prototype.captureEvent = function(e, t)
        {
            var n = this._lastEventId = Object(N_.m)();
            return this._invokeClient("captureEvent", e, P_.__assign(
            {}, t,
            {
                event_id: n
            })), n
        }, e.prototype.lastEventId = function()
        {
            return this._lastEventId
        }, e.prototype.addBreadcrumb = function(e, t)
        {
            var n = this.getStackTop();
            if (n.scope && n.client)
            {
                var r = n.client.getOptions && n.client.getOptions() ||
                    {},
                    i = r.beforeBreadcrumb,
                    o = void 0 === i ? null : i,
                    a = r.maxBreadcrumbs,
                    s = void 0 === a ? 100 : a;
                if (!(s <= 0))
                {
                    var c = Object(N_.l)(),
                        u = P_.__assign(
                        {
                            timestamp: c
                        }, e),
                        l = o ? Object(N_.c)((function()
                        {
                            return o(u, t)
                        })) : u;
                    null !== l && n.scope.addBreadcrumb(l, Math.min(s, 100))
                }
            }
        }, e.prototype.setUser = function(e)
        {
            var t = this.getStackTop();
            t.scope && t.scope.setUser(e)
        }, e.prototype.setTags = function(e)
        {
            var t = this.getStackTop();
            t.scope && t.scope.setTags(e)
        }, e.prototype.setExtras = function(e)
        {
            var t = this.getStackTop();
            t.scope && t.scope.setExtras(e)
        }, e.prototype.setTag = function(e, t)
        {
            var n = this.getStackTop();
            n.scope && n.scope.setTag(e, t)
        }, e.prototype.setExtra = function(e, t)
        {
            var n = this.getStackTop();
            n.scope && n.scope.setExtra(e, t)
        }, e.prototype.setContext = function(e, t)
        {
            var n = this.getStackTop();
            n.scope && n.scope.setContext(e, t)
        }, e.prototype.configureScope = function(e)
        {
            var t = this.getStackTop();
            t.scope && t.client && e(t.scope)
        }, e.prototype.run = function(e)
        {
            var t = W_(this);
            try
            {
                e(this)
            }
            finally
            {
                W_(t)
            }
        }, e.prototype.getIntegration = function(e)
        {
            var t = this.getClient();
            if (!t) return null;
            try
            {
                return t.getIntegration(e)
            }
            catch (t)
            {
                return z_.warn("Cannot retrieve integration " + e.id + " from the current Hub"), null
            }
        }, e.prototype.startSpan = function(e)
        {
            return this._callExtensionMethod("startSpan", e)
        }, e.prototype.startTransaction = function(e)
        {
            return this._callExtensionMethod("startTransaction", e)
        }, e.prototype.traceHeaders = function()
        {
            return this._callExtensionMethod("traceHeaders")
        }, e.prototype._callExtensionMethod = function(e)
        {
            for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
            var r = V_(),
                i = r.__SENTRY__;
            if (i && i.extensions && "function" == typeof i.extensions[e]) return i.extensions[e].apply(this, t);
            z_.warn("Extension method " + e + " couldn't be found, doing nothing.")
        }, e
    }();

function V_()
{
    var e = Object(N_.f)();
    return e.__SENTRY__ = e.__SENTRY__ ||
    {
        extensions:
        {},
        hub: void 0
    }, e
}

function W_(e)
{
    var t = V_(),
        n = $_(t);
    return K_(t, e), n
}

function G_()
{
    var e = V_();
    return q_(e) && !$_(e).isOlderThan(3) || K_(e, new H_), Object(N_.i)() ? function(e)
    {
        try
        {
            var t = V_().__SENTRY__;
            if (!t || !t.extensions || !t.extensions.domain) return $_(e);
            var n = t.extensions.domain.active;
            if (!n) return $_(e);
            if (!q_(n) || $_(n).isOlderThan(3))
            {
                var r = $_(e).getStackTop();
                K_(n, new H_(r.client, L_.clone(r.scope)))
            }
            return $_(n)
        }
        catch (t)
        {
            return $_(e)
        }
    }(e) : $_(e)
}

function q_(e)
{
    return !!(e && e.__SENTRY__ && e.__SENTRY__.hub)
}

function $_(e)
{
    return e && e.__SENTRY__ && e.__SENTRY__.hub || (e.__SENTRY__ = e.__SENTRY__ ||
    {}, e.__SENTRY__.hub = new H_), e.__SENTRY__.hub
}

function K_(e, t)
{
    return !!e && (e.__SENTRY__ = e.__SENTRY__ ||
    {}, e.__SENTRY__.hub = t, !0)
}
var Y_ = n(57),
    X_ = [/^Script error\.?$/, /^Javascript error: Script error\.? on line 0$/],
    J_ = function()
    {
        function e(t)
        {
            void 0 === t && (t = {}), this._options = t, this.name = e.id
        }
        return e.prototype.setupOnce = function()
        {
            j_((function(t)
            {
                var n = G_();
                if (!n) return t;
                var r = n.getIntegration(e);
                if (r)
                {
                    var i = n.getClient(),
                        o = i ? i.getOptions() :
                        {},
                        a = r._mergeOptions(o);
                    if (r._shouldDropEvent(t, a)) return null
                }
                return t
            }))
        }, e.prototype._shouldDropEvent = function(e, t)
        {
            return this._isSentryError(e, t) ? (z_.warn("Event dropped due to being internal Sentry Error.\nEvent: " + Object(N_.d)(e)), !0) : this._isIgnoredError(e, t) ? (z_.warn("Event dropped due to being matched by `ignoreErrors` option.\nEvent: " + Object(N_.d)(e)), !0) : this._isBlacklistedUrl(e, t) ? (z_.warn("Event dropped due to being matched by `blacklistUrls` option.\nEvent: " + Object(N_.d)(e) + ".\nUrl: " + this._getEventFilterUrl(e)), !0) : !this._isWhitelistedUrl(e, t) && (z_.warn("Event dropped due to not being matched by `whitelistUrls` option.\nEvent: " + Object(N_.d)(e) + ".\nUrl: " + this._getEventFilterUrl(e)), !0)
        }, e.prototype._isSentryError = function(e, t)
        {
            if (void 0 === t && (t = {}), !t.ignoreInternal) return !1;
            try
            {
                return e && e.exception && e.exception.values && e.exception.values[0] && "SentryError" === e.exception.values[0].type || !1
            }
            catch (e)
            {
                return !1
            }
        }, e.prototype._isIgnoredError = function(e, t)
        {
            return void 0 === t && (t = {}), !(!t.ignoreErrors || !t.ignoreErrors.length) && this._getPossibleEventMessages(e).some((function(e)
            {
                return t.ignoreErrors.some((function(t)
                {
                    return Object(Y_.a)(e, t)
                }))
            }))
        }, e.prototype._isBlacklistedUrl = function(e, t)
        {
            if (void 0 === t && (t = {}), !t.blacklistUrls || !t.blacklistUrls.length) return !1;
            var n = this._getEventFilterUrl(e);
            return !!n && t.blacklistUrls.some((function(e)
            {
                return Object(Y_.a)(n, e)
            }))
        }, e.prototype._isWhitelistedUrl = function(e, t)
        {
            if (void 0 === t && (t = {}), !t.whitelistUrls || !t.whitelistUrls.length) return !0;
            var n = this._getEventFilterUrl(e);
            return !n || t.whitelistUrls.some((function(e)
            {
                return Object(Y_.a)(n, e)
            }))
        }, e.prototype._mergeOptions = function(e)
        {
            return void 0 === e && (e = {}),
            {
                blacklistUrls: P_.__spread(this._options.blacklistUrls || [], e.blacklistUrls || []),
                ignoreErrors: P_.__spread(this._options.ignoreErrors || [], e.ignoreErrors || [], X_),
                ignoreInternal: void 0 === this._options.ignoreInternal || this._options.ignoreInternal,
                whitelistUrls: P_.__spread(this._options.whitelistUrls || [], e.whitelistUrls || [])
            }
        }, e.prototype._getPossibleEventMessages = function(e)
        {
            if (e.message) return [e.message];
            if (e.exception) try
            {
                var t = e.exception.values && e.exception.values[0] ||
                    {},
                    n = t.type,
                    r = void 0 === n ? "" : n,
                    i = t.value,
                    o = void 0 === i ? "" : i;
                return ["" + o, r + ": " + o]
            }
            catch (t)
            {
                return z_.error("Cannot extract message for event " + Object(N_.d)(e)), []
            }
            return []
        }, e.prototype._getEventFilterUrl = function(e)
        {
            try
            {
                if (e.stacktrace)
                {
                    var t = e.stacktrace.frames;
                    return t && t[t.length - 1].filename || null
                }
                if (e.exception)
                {
                    var n = e.exception.values && e.exception.values[0].stacktrace && e.exception.values[0].stacktrace.frames;
                    return n && n[n.length - 1].filename || null
                }
                return null
            }
            catch (t)
            {
                return z_.error("Cannot extract url for event " + Object(N_.d)(e)), null
            }
        }, e.id = "InboundFilters", e
    }();
var Z_ = Object.setPrototypeOf || (
    {
        __proto__: []
    }
    instanceof Array ? function(e, t)
    {
        return e.__proto__ = t, e
    } : function(e, t)
    {
        for (var n in t) e.hasOwnProperty(n) || (e[n] = t[n]);
        return e
    });
var Q_ = function(e)
    {
        function t(t)
        {
            var n = this.constructor,
                r = e.call(this, t) || this;
            return r.message = t, r.name = n.prototype.constructor.name, Z_(r, n.prototype), r
        }
        return P_.__extends(t, e), t
    }(Error),
    ex = /^(?:(\w+):)\/\/(?:(\w+)(?::(\w+))?@)([\w\.-]+)(?::(\d+))?\/(.+)/,
    tx = function()
    {
        function e(e)
        {
            "string" == typeof e ? this._fromString(e) : this._fromComponents(e), this._validate()
        }
        return e.prototype.toString = function(e)
        {
            void 0 === e && (e = !1);
            var t = this,
                n = t.host,
                r = t.path,
                i = t.pass,
                o = t.port,
                a = t.projectId;
            return t.protocol + "://" + t.user + (e && i ? ":" + i : "") + "@" + n + (o ? ":" + o : "") + "/" + (r ? r + "/" : r) + a
        }, e.prototype._fromString = function(e)
        {
            var t = ex.exec(e);
            if (!t) throw new Q_("Invalid Dsn");
            var n = P_.__read(t.slice(1), 6),
                r = n[0],
                i = n[1],
                o = n[2],
                a = void 0 === o ? "" : o,
                s = n[3],
                c = n[4],
                u = void 0 === c ? "" : c,
                l = "",
                f = n[5],
                h = f.split("/");
            if (h.length > 1 && (l = h.slice(0, -1).join("/"), f = h.pop()), f)
            {
                var d = f.match(/^\d+/);
                d && (f = d[0])
            }
            this._fromComponents(
            {
                host: s,
                pass: a,
                path: l,
                projectId: f,
                port: u,
                protocol: r,
                user: i
            })
        }, e.prototype._fromComponents = function(e)
        {
            this.protocol = e.protocol, this.user = e.user, this.pass = e.pass || "", this.host = e.host, this.port = e.port || "", this.path = e.path || "", this.projectId = e.projectId
        }, e.prototype._validate = function()
        {
            var e = this;
            if (["protocol", "user", "host", "projectId"].forEach((function(t)
                {
                    if (!e[t]) throw new Q_("Invalid Dsn: " + t + " missing")
                })), !this.projectId.match(/^\d+$/)) throw new Q_("Invalid Dsn: Invalid projectId " + this.projectId);
            if ("http" !== this.protocol && "https" !== this.protocol) throw new Q_("Invalid Dsn: Invalid protocol " + this.protocol);
            if (this.port && isNaN(parseInt(this.port, 10))) throw new Q_("Invalid Dsn: Invalid port " + this.port)
        }, e
    }(),
    nx = n(33),
    rx = function()
    {
        function e(e)
        {
            this.dsn = e, this._dsnObject = new tx(e)
        }
        return e.prototype.getDsn = function()
        {
            return this._dsnObject
        }, e.prototype.getBaseApiEndpoint = function()
        {
            var e = this._dsnObject,
                t = e.protocol ? e.protocol + ":" : "",
                n = e.port ? ":" + e.port : "";
            return t + "//" + e.host + n + (e.path ? "/" + e.path : "") + "/api/"
        }, e.prototype.getStoreEndpoint = function()
        {
            return this._getIngestEndpoint("store")
        }, e.prototype._getEnvelopeEndpoint = function()
        {
            return this._getIngestEndpoint("envelope")
        }, e.prototype._getIngestEndpoint = function(e)
        {
            return "" + this.getBaseApiEndpoint() + this._dsnObject.projectId + "/" + e + "/"
        }, e.prototype.getStoreEndpointWithUrlEncodedAuth = function()
        {
            return this.getStoreEndpoint() + "?" + this._encodedAuth()
        }, e.prototype.getEnvelopeEndpointWithUrlEncodedAuth = function()
        {
            return this._getEnvelopeEndpoint() + "?" + this._encodedAuth()
        }, e.prototype._encodedAuth = function()
        {
            var e = {
                sentry_key: this._dsnObject.user,
                sentry_version: "7"
            };
            return Object(nx.e)(e)
        }, e.prototype.getStoreEndpointPath = function()
        {
            var e = this._dsnObject;
            return (e.path ? "/" + e.path : "") + "/api/" + e.projectId + "/store/"
        }, e.prototype.getRequestHeaders = function(e, t)
        {
            var n = this._dsnObject,
                r = ["Sentry sentry_version=7"];
            return r.push("sentry_client=" + e + "/" + t), r.push("sentry_key=" + n.user), n.pass && r.push("sentry_secret=" + n.pass),
            {
                "Content-Type": "application/json",
                "X-Sentry-Auth": r.join(", ")
            }
        }, e.prototype.getReportDialogEndpoint = function(e)
        {
            void 0 === e && (e = {});
            var t = this._dsnObject,
                n = this.getBaseApiEndpoint() + "embed/error-page/",
                r = [];
            for (var i in r.push("dsn=" + t.toString()), e)
                if ("user" === i)
                {
                    if (!e.user) continue;
                    e.user.name && r.push("name=" + encodeURIComponent(e.user.name)), e.user.email && r.push("email=" + encodeURIComponent(e.user.email))
                }
            else r.push(encodeURIComponent(i) + "=" + encodeURIComponent(e[i]));
            return r.length ? n + "?" + r.join("&") : n
        }, e
    }(),
    ix = [];

function ox(e)
{
    var t = {};
    return function(e)
    {
        var t = e.defaultIntegrations && P_.__spread(e.defaultIntegrations) || [],
            n = e.integrations,
            r = [];
        if (Array.isArray(n))
        {
            var i = n.map((function(e)
                {
                    return e.name
                })),
                o = [];
            t.forEach((function(e)
            {
                -1 === i.indexOf(e.name) && -1 === o.indexOf(e.name) && (r.push(e), o.push(e.name))
            })), n.forEach((function(e)
            {
                -1 === o.indexOf(e.name) && (r.push(e), o.push(e.name))
            }))
        }
        else "function" == typeof n ? (r = n(t), r = Array.isArray(r) ? r : [r]) : r = P_.__spread(t);
        var a = r.map((function(e)
        {
            return e.name
        }));
        return -1 !== a.indexOf("Debug") && r.push.apply(r, P_.__spread(r.splice(a.indexOf("Debug"), 1))), r
    }(e).forEach((function(e)
    {
        t[e.name] = e,
            function(e)
            {
                -1 === ix.indexOf(e.name) && (e.setupOnce(j_, G_), ix.push(e.name), z_.log("Integration installed: " + e.name))
            }(e)
    })), t
}
var ax, sx = function()
{
    function e(e, t)
    {
        this._integrations = {}, this._processing = !1, this._backend = new e(t), this._options = t, t.dsn && (this._dsn = new tx(t.dsn))
    }
    return e.prototype.captureException = function(e, t, n)
    {
        var r = this,
            i = t && t.event_id;
        return this._processing = !0, this._getBackend().eventFromException(e, t).then((function(e)
        {
            i = r.captureEvent(e, t, n)
        })), i
    }, e.prototype.captureMessage = function(e, t, n, r)
    {
        var i = this,
            o = n && n.event_id;
        return this._processing = !0, (Object(R_.i)(e) ? this._getBackend().eventFromMessage("" + e, t, n) : this._getBackend().eventFromException(e, n)).then((function(e)
        {
            o = i.captureEvent(e, n, r)
        })), o
    }, e.prototype.captureEvent = function(e, t, n)
    {
        var r = this,
            i = t && t.event_id;
        return this._processing = !0, this._processEvent(e, t, n).then((function(e)
        {
            i = e && e.event_id, r._processing = !1
        })).then(null, (function(e)
        {
            z_.error(e), r._processing = !1
        })), i
    }, e.prototype.getDsn = function()
    {
        return this._dsn
    }, e.prototype.getOptions = function()
    {
        return this._options
    }, e.prototype.flush = function(e)
    {
        var t = this;
        return this._isClientProcessing(e).then((function(n)
        {
            return clearInterval(n.interval), t._getBackend().getTransport().close(e).then((function(e)
            {
                return n.ready && e
            }))
        }))
    }, e.prototype.close = function(e)
    {
        var t = this;
        return this.flush(e).then((function(e)
        {
            return t.getOptions().enabled = !1, e
        }))
    }, e.prototype.setupIntegrations = function()
    {
        this._isEnabled() && (this._integrations = ox(this._options))
    }, e.prototype.getIntegration = function(e)
    {
        try
        {
            return this._integrations[e.id] || null
        }
        catch (t)
        {
            return z_.warn("Cannot retrieve integration " + e.id + " from the current Client"), null
        }
    }, e.prototype._isClientProcessing = function(e)
    {
        var t = this;
        return new I_((function(n)
        {
            var r = 0,
                i = 0;
            clearInterval(i), i = setInterval((function()
            {
                t._processing ? (r += 1, e && r >= e && n(
                {
                    interval: i,
                    ready: !1
                })) : n(
                {
                    interval: i,
                    ready: !0
                })
            }), 1)
        }))
    }, e.prototype._getBackend = function()
    {
        return this._backend
    }, e.prototype._isEnabled = function()
    {
        return !1 !== this.getOptions().enabled && void 0 !== this._dsn
    }, e.prototype._prepareEvent = function(e, t, n)
    {
        var r = this,
            i = this.getOptions().normalizeDepth,
            o = void 0 === i ? 3 : i,
            a = P_.__assign(
            {}, e,
            {
                event_id: e.event_id || (n && n.event_id ? n.event_id : Object(N_.m)()),
                timestamp: e.timestamp || Object(N_.l)()
            });
        this._applyClientOptions(a), this._applyIntegrationsMetadata(a);
        var s = t;
        n && n.captureContext && (s = L_.clone(s).update(n.captureContext));
        var c = I_.resolve(a);
        return s && (c = s.applyToEvent(a, n)), c.then((function(e)
        {
            return "number" == typeof o && o > 0 ? r._normalizeEvent(e, o) : e
        }))
    }, e.prototype._normalizeEvent = function(e, t)
    {
        if (!e) return null;
        var n = P_.__assign(
        {}, e, e.breadcrumbs &&
        {
            breadcrumbs: e.breadcrumbs.map((function(e)
            {
                return P_.__assign(
                {}, e, e.data &&
                {
                    data: Object(nx.c)(e.data, t)
                })
            }))
        }, e.user &&
        {
            user: Object(nx.c)(e.user, t)
        }, e.contexts &&
        {
            contexts: Object(nx.c)(e.contexts, t)
        }, e.extra &&
        {
            extra: Object(nx.c)(e.extra, t)
        });
        return e.contexts && e.contexts.trace && (n.contexts.trace = e.contexts.trace), n
    }, e.prototype._applyClientOptions = function(e)
    {
        var t = this.getOptions(),
            n = t.environment,
            r = t.release,
            i = t.dist,
            o = t.maxValueLength,
            a = void 0 === o ? 250 : o;
        void 0 === e.environment && void 0 !== n && (e.environment = n), void 0 === e.release && void 0 !== r && (e.release = r), void 0 === e.dist && void 0 !== i && (e.dist = i), e.message && (e.message = Object(Y_.d)(e.message, a));
        var s = e.exception && e.exception.values && e.exception.values[0];
        s && s.value && (s.value = Object(Y_.d)(s.value, a));
        var c = e.request;
        c && c.url && (c.url = Object(Y_.d)(c.url, a))
    }, e.prototype._applyIntegrationsMetadata = function(e)
    {
        var t = e.sdk,
            n = Object.keys(this._integrations);
        t && n.length > 0 && (t.integrations = n)
    }, e.prototype._sendEvent = function(e)
    {
        this._getBackend().sendEvent(e)
    }, e.prototype._processEvent = function(e, t, n)
    {
        var r = this,
            i = this.getOptions(),
            o = i.beforeSend,
            a = i.sampleRate;
        if (!this._isEnabled()) return I_.reject("SDK not enabled, will not send event.");
        var s = "transaction" === e.type;
        return !s && "number" == typeof a && Math.random() > a ? I_.reject("This event has been sampled, will not send event.") : new I_((function(i, a)
        {
            r._prepareEvent(e, n, t).then((function(e)
            {
                if (null !== e)
                {
                    var n = e;
                    if (t && t.data && !0 === t.data.__sentry__ || !o || s) return r._sendEvent(n), void i(n);
                    var c = o(e, t);
                    if (void 0 === c) z_.error("`beforeSend` method has to return `null` or a valid event.");
                    else if (Object(R_.m)(c)) r._handleAsyncBeforeSend(c, i, a);
                    else
                    {
                        if (null === (n = c)) return z_.log("`beforeSend` returned `null`, will not send event."), void i(null);
                        r._sendEvent(n), i(n)
                    }
                }
                else a("An event processor returned null, will not send event.")
            })).then(null, (function(e)
            {
                r.captureException(e,
                {
                    data:
                    {
                        __sentry__: !0
                    },
                    originalException: e
                }), a("Event processing pipeline threw an error, original event will not be sent. Details have been sent as a new event.\nReason: " + e)
            }))
        }))
    }, e.prototype._handleAsyncBeforeSend = function(e, t, n)
    {
        var r = this;
        e.then((function(e)
        {
            null !== e ? (r._sendEvent(e), t(e)) : n("`beforeSend` returned `null`, will not send event.")
        })).then(null, (function(e)
        {
            n("beforeSend rejected with " + e)
        }))
    }, e
}();
! function(e)
{
    e.Unknown = "unknown", e.Skipped = "skipped", e.Success = "success", e.RateLimit = "rate_limit", e.Invalid = "invalid", e.Failed = "failed"
}(ax || (ax = {})),
function(e)
{
    e.fromHttpCode = function(t)
    {
        return t >= 200 && t < 300 ? e.Success : 429 === t ? e.RateLimit : t >= 400 && t < 500 ? e.Invalid : t >= 500 ? e.Failed : e.Unknown
    }
}(ax || (ax = {}));
var cx, ux = function()
    {
        function e()
        {}
        return e.prototype.sendEvent = function(e)
        {
            return I_.resolve(
            {
                reason: "NoopTransport: Event has been skipped because no Dsn is configured.",
                status: ax.Skipped
            })
        }, e.prototype.close = function(e)
        {
            return I_.resolve(!0)
        }, e
    }(),
    lx = function()
    {
        function e(e)
        {
            this._options = e, this._options.dsn || z_.warn("No DSN provided, backend will not do anything."), this._transport = this._setupTransport()
        }
        return e.prototype._setupTransport = function()
        {
            return new ux
        }, e.prototype.eventFromException = function(e, t)
        {
            throw new Q_("Backend has to implement `eventFromException` method")
        }, e.prototype.eventFromMessage = function(e, t, n)
        {
            throw new Q_("Backend has to implement `eventFromMessage` method")
        }, e.prototype.sendEvent = function(e)
        {
            this._transport.sendEvent(e).then(null, (function(e)
            {
                z_.error("Error while sending event: " + e)
            }))
        }, e.prototype.getTransport = function()
        {
            return this._transport
        }, e
    }();

function fx()
{
    if (!("fetch" in Object(N_.f)())) return !1;
    try
    {
        return new Headers, new Request(""), new Response, !0
    }
    catch (e)
    {
        return !1
    }
}

function hx(e)
{
    return e && /^function fetch\(\)\s+\{\s+\[native code\]\s+\}$/.test(e.toString())
}

function dx()
{
    if (!fx()) return !1;
    try
    {
        return new Request("_",
        {
            referrerPolicy: "origin"
        }), !0
    }
    catch (e)
    {
        return !1
    }
}! function(e)
{
    e.Fatal = "fatal", e.Error = "error", e.Warning = "warning", e.Log = "log", e.Info = "info", e.Debug = "debug", e.Critical = "critical"
}(cx || (cx = {})),
function(e)
{
    e.fromString = function(t)
    {
        switch (t)
        {
            case "debug":
                return e.Debug;
            case "info":
                return e.Info;
            case "warn":
            case "warning":
                return e.Warning;
            case "error":
                return e.Error;
            case "fatal":
                return e.Fatal;
            case "critical":
                return e.Critical;
            case "log":
            default:
                return e.Log
        }
    }
}(cx || (cx = {}));
var px = /^\s*at (?:(.*?) ?\()?((?:file|https?|blob|chrome-extension|address|native|eval|webpack|<anonymous>|[-a-z]+:|.*bundle|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i,
    mx = /^\s*(.*?)(?:\((.*?)\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\/.*?|\[native code\]|[^@]*(?:bundle|\d+\.js))(?::(\d+))?(?::(\d+))?\s*$/i,
    vx = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
    gx = /(\S+) line (\d+)(?: > eval line \d+)* > eval/i,
    yx = /\((\S*)(?::(\d+))(?::(\d+))\)/;

function bx(e)
{
    var t = null,
        n = e && e.framesToPop;
    try
    {
        if (t = function(e)
            {
                if (!e || !e.stacktrace) return null;
                for (var t, n = e.stacktrace, r = / line (\d+).*script (?:in )?(\S+)(?:: in function (\S+))?$/i, i = / line (\d+), column (\d+)\s*(?:in (?:<anonymous function: ([^>]+)>|([^\)]+))\((.*)\))? in (.*):\s*$/i, o = n.split("\n"), a = [], s = 0; s < o.length; s += 2)
                {
                    var c = null;
                    (t = r.exec(o[s])) ? c = {
                        url: t[2],
                        func: t[3],
                        args: [],
                        line: +t[1],
                        column: null
                    }: (t = i.exec(o[s])) && (c = {
                        url: t[6],
                        func: t[3] || t[4],
                        args: t[5] ? t[5].split(",") : [],
                        line: +t[1],
                        column: +t[2]
                    }), c && (!c.func && c.line && (c.func = "?"), a.push(c))
                }
                if (!a.length) return null;
                return {
                    message: _x(e),
                    name: e.name,
                    stack: a
                }
            }(e)) return wx(t, n)
    }
    catch (e)
    {}
    try
    {
        if (t = function(e)
            {
                if (!e || !e.stack) return null;
                for (var t, n, r, i = [], o = e.stack.split("\n"), a = 0; a < o.length; ++a)
                {
                    if (n = px.exec(o[a]))
                    {
                        var s = n[2] && 0 === n[2].indexOf("native");
                        n[2] && 0 === n[2].indexOf("eval") && (t = yx.exec(n[2])) && (n[2] = t[1], n[3] = t[2], n[4] = t[3]), r = {
                            url: n[2] && 0 === n[2].indexOf("address at ") ? n[2].substr("address at ".length) : n[2],
                            func: n[1] || "?",
                            args: s ? [n[2]] : [],
                            line: n[3] ? +n[3] : null,
                            column: n[4] ? +n[4] : null
                        }
                    }
                    else if (n = vx.exec(o[a])) r = {
                        url: n[2],
                        func: n[1] || "?",
                        args: [],
                        line: +n[3],
                        column: n[4] ? +n[4] : null
                    };
                    else
                    {
                        if (!(n = mx.exec(o[a]))) continue;
                        n[3] && n[3].indexOf(" > eval") > -1 && (t = gx.exec(n[3])) ? (n[1] = n[1] || "eval", n[3] = t[1], n[4] = t[2], n[5] = "") : 0 !== a || n[5] || void 0 === e.columnNumber || (i[0].column = e.columnNumber + 1), r = {
                            url: n[3],
                            func: n[1] || "?",
                            args: n[2] ? n[2].split(",") : [],
                            line: n[4] ? +n[4] : null,
                            column: n[5] ? +n[5] : null
                        }
                    }!r.func && r.line && (r.func = "?"), i.push(r)
                }
                if (!i.length) return null;
                return {
                    message: _x(e),
                    name: e.name,
                    stack: i
                }
            }(e)) return wx(t, n)
    }
    catch (e)
    {}
    return {
        message: _x(e),
        name: e && e.name,
        stack: [],
        failed: !0
    }
}

function wx(e, t)
{
    try
    {
        return P_.__assign(
        {}, e,
        {
            stack: e.stack.slice(t)
        })
    }
    catch (t)
    {
        return e
    }
}

function _x(e)
{
    var t = e && e.message;
    return t ? t.error && "string" == typeof t.error.message ? t.error.message : t : "No error message"
}

function xx(e)
{
    var t = Sx(e.stack),
        n = {
            type: e.name,
            value: e.message
        };
    return t && t.length && (n.stacktrace = {
        frames: t
    }), void 0 === n.type && "" === n.value && (n.value = "Unrecoverable error caught"), n
}

function Ex(e)
{
    return {
        exception:
        {
            values: [xx(e)]
        }
    }
}

function Sx(e)
{
    if (!e || !e.length) return [];
    var t = e,
        n = t[0].func || "",
        r = t[t.length - 1].func || "";
    return -1 === n.indexOf("captureMessage") && -1 === n.indexOf("captureException") || (t = t.slice(1)), -1 !== r.indexOf("sentryWrapped") && (t = t.slice(0, -1)), t.slice(0, 50).map((function(e)
    {
        return {
            colno: null === e.column ? void 0 : e.column,
            filename: e.url || t[0].url,
            function: e.func || "?",
            in_app: !0,
            lineno: null === e.line ? void 0 : e.line
        }
    })).reverse()
}

function Mx(e, t, n)
{
    var r;
    if (void 0 === n && (n = {}), Object(R_.e)(e) && e.error) return r = Ex(bx(e = e.error));
    if (Object(R_.a)(e) || Object(R_.b)(e))
    {
        var i = e,
            o = i.name || (Object(R_.a)(i) ? "DOMError" : "DOMException"),
            a = i.message ? o + ": " + i.message : o;
        return r = Tx(a, t, n), Object(N_.b)(r, a), r
    }
    return Object(R_.d)(e) ? r = Ex(bx(e)) : Object(R_.h)(e) || Object(R_.f)(e) ? (r = function(e, t, n)
    {
        var r = {
            exception:
            {
                values: [
                {
                    type: Object(R_.f)(e) ? e.constructor.name : n ? "UnhandledRejection" : "Error",
                    value: "Non-Error " + (n ? "promise rejection" : "exception") + " captured with keys: " + Object(nx.a)(e)
                }]
            },
            extra:
            {
                __serialized__: Object(nx.d)(e)
            }
        };
        if (t)
        {
            var i = Sx(bx(t).stack);
            r.stacktrace = {
                frames: i
            }
        }
        return r
    }(e, t, n.rejection), Object(N_.a)(r,
    {
        synthetic: !0
    }), r) : (r = Tx(e, t, n), Object(N_.b)(r, "" + e, void 0), Object(N_.a)(r,
    {
        synthetic: !0
    }), r)
}

function Tx(e, t, n)
{
    void 0 === n && (n = {});
    var r = {
        message: e
    };
    if (n.attachStacktrace && t)
    {
        var i = Sx(bx(t).stack);
        r.stacktrace = {
            frames: i
        }
    }
    return r
}

function kx(e, t)
{
    var n = "transaction" === e.type,
        r = {
            body: JSON.stringify(e),
            url: n ? t.getEnvelopeEndpointWithUrlEncodedAuth() : t.getStoreEndpointWithUrlEncodedAuth()
        };
    if (n)
    {
        var i = JSON.stringify(
        {
            event_id: e.event_id,
            sent_at: new Date(1e3 * Object(N_.l)()).toISOString()
        }) + "\n" + JSON.stringify(
        {
            type: e.type
        }) + "\n" + r.body;
        r.body = i
    }
    return r
}
var Ax, Cx = function()
    {
        function e(e)
        {
            this._limit = e, this._buffer = []
        }
        return e.prototype.isReady = function()
        {
            return void 0 === this._limit || this.length() < this._limit
        }, e.prototype.add = function(e)
        {
            var t = this;
            return this.isReady() ? (-1 === this._buffer.indexOf(e) && this._buffer.push(e), e.then((function()
            {
                return t.remove(e)
            })).then(null, (function()
            {
                return t.remove(e).then(null, (function() {}))
            })), e) : I_.reject(new Q_("Not adding Promise due to buffer limit reached."))
        }, e.prototype.remove = function(e)
        {
            return this._buffer.splice(this._buffer.indexOf(e), 1)[0]
        }, e.prototype.length = function()
        {
            return this._buffer.length
        }, e.prototype.drain = function(e)
        {
            var t = this;
            return new I_((function(n)
            {
                var r = setTimeout((function()
                {
                    e && e > 0 && n(!1)
                }), e);
                I_.all(t._buffer).then((function()
                {
                    clearTimeout(r), n(!0)
                })).then(null, (function()
                {
                    n(!0)
                }))
            }))
        }, e
    }(),
    Ox = function()
    {
        function e(e)
        {
            this.options = e, this._buffer = new Cx(30), this._api = new rx(this.options.dsn), this.url = this._api.getStoreEndpointWithUrlEncodedAuth()
        }
        return e.prototype.sendEvent = function(e)
        {
            throw new Q_("Transport Class has to implement `sendEvent` method")
        }, e.prototype.close = function(e)
        {
            return this._buffer.drain(e)
        }, e
    }(),
    Px = Object(N_.f)(),
    Rx = function(e)
    {
        function t()
        {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._disabledUntil = new Date(Date.now()), t
        }
        return P_.__extends(t, e), t.prototype.sendEvent = function(e)
        {
            var t = this;
            if (new Date(Date.now()) < this._disabledUntil) return Promise.reject(
            {
                event: e,
                reason: "Transport locked till " + this._disabledUntil + " due to too many requests.",
                status: 429
            });
            var n = kx(e, this._api),
                r = {
                    body: n.body,
                    method: "POST",
                    referrerPolicy: dx() ? "origin" : ""
                };
            return void 0 !== this.options.fetchParameters && Object.assign(r, this.options.fetchParameters), void 0 !== this.options.headers && (r.headers = this.options.headers), this._buffer.add(new I_((function(e, i)
            {
                Px.fetch(n.url, r).then((function(n)
                {
                    var r = ax.fromHttpCode(n.status);
                    if (r !== ax.Success)
                    {
                        if (r === ax.RateLimit)
                        {
                            var o = Date.now();
                            t._disabledUntil = new Date(o + Object(N_.j)(o, n.headers.get("Retry-After"))), z_.warn("Too many requests, backing off till: " + t._disabledUntil)
                        }
                        i(n)
                    }
                    else e(
                    {
                        status: r
                    })
                })).catch(i)
            })))
        }, t
    }(Ox),
    Ix = function(e)
    {
        function t()
        {
            var t = null !== e && e.apply(this, arguments) || this;
            return t._disabledUntil = new Date(Date.now()), t
        }
        return P_.__extends(t, e), t.prototype.sendEvent = function(e)
        {
            var t = this;
            if (new Date(Date.now()) < this._disabledUntil) return Promise.reject(
            {
                event: e,
                reason: "Transport locked till " + this._disabledUntil + " due to too many requests.",
                status: 429
            });
            var n = kx(e, this._api);
            return this._buffer.add(new I_((function(e, r)
            {
                var i = new XMLHttpRequest;
                for (var o in i.onreadystatechange = function()
                    {
                        if (4 === i.readyState)
                        {
                            var n = ax.fromHttpCode(i.status);
                            if (n !== ax.Success)
                            {
                                if (n === ax.RateLimit)
                                {
                                    var o = Date.now();
                                    t._disabledUntil = new Date(o + Object(N_.j)(o, i.getResponseHeader("Retry-After"))), z_.warn("Too many requests, backing off till: " + t._disabledUntil)
                                }
                                r(i)
                            }
                            else e(
                            {
                                status: n
                            })
                        }
                    }, i.open("POST", n.url), t.options.headers) t.options.headers.hasOwnProperty(o) && i.setRequestHeader(o, t.options.headers[o]);
                i.send(n.body)
            })))
        }, t
    }(Ox),
    Nx = function(e)
    {
        function t()
        {
            return null !== e && e.apply(this, arguments) || this
        }
        return P_.__extends(t, e), t.prototype._setupTransport = function()
        {
            if (!this._options.dsn) return e.prototype._setupTransport.call(this);
            var t = P_.__assign(
            {}, this._options.transportOptions,
            {
                dsn: this._options.dsn
            });
            return this._options.transport ? new this._options.transport(t) : fx() ? new Rx(t) : new Ix(t)
        }, t.prototype.eventFromException = function(e, t)
        {
            var n = Mx(e, t && t.syntheticException || void 0,
            {
                attachStacktrace: this._options.attachStacktrace
            });
            return Object(N_.a)(n,
            {
                handled: !0,
                type: "generic"
            }), n.level = cx.Error, t && t.event_id && (n.event_id = t.event_id), I_.resolve(n)
        }, t.prototype.eventFromMessage = function(e, t, n)
        {
            void 0 === t && (t = cx.Info);
            var r = Tx(e, n && n.syntheticException || void 0,
            {
                attachStacktrace: this._options.attachStacktrace
            });
            return r.level = t, n && n.event_id && (r.event_id = n.event_id), I_.resolve(r)
        }, t
    }(lx),
    Lx = Object(N_.f)(),
    Bx = {},
    jx = {};

function Fx(e)
{
    if (!jx[e]) switch (jx[e] = !0, e)
    {
        case "console":
            ! function()
            {
                if (!("console" in Lx)) return;
                ["debug", "info", "warn", "error", "log", "assert"].forEach((function(e)
                {
                    e in Lx.console && Object(nx.b)(Lx.console, e, (function(t)
                    {
                        return function()
                        {
                            for (var n = [], r = 0; r < arguments.length; r++) n[r] = arguments[r];
                            Dx("console",
                            {
                                args: n,
                                level: e
                            }), t && Function.prototype.apply.call(t, Lx.console, n)
                        }
                    }))
                }))
            }();
            break;
        case "dom":
            ! function()
            {
                if (!("document" in Lx)) return;
                Lx.document.addEventListener("click", qx("click", Dx.bind(null, "dom")), !1), Lx.document.addEventListener("keypress", $x(Dx.bind(null, "dom")), !1), ["EventTarget", "Node"].forEach((function(e)
                {
                    var t = Lx[e] && Lx[e].prototype;
                    t && t.hasOwnProperty && t.hasOwnProperty("addEventListener") && (Object(nx.b)(t, "addEventListener", (function(e)
                    {
                        return function(t, n, r)
                        {
                            return n && n.handleEvent ? ("click" === t && Object(nx.b)(n, "handleEvent", (function(e)
                            {
                                return function(t)
                                {
                                    return qx("click", Dx.bind(null, "dom"))(t), e.call(this, t)
                                }
                            })), "keypress" === t && Object(nx.b)(n, "handleEvent", (function(e)
                            {
                                return function(t)
                                {
                                    return $x(Dx.bind(null, "dom"))(t), e.call(this, t)
                                }
                            }))) : ("click" === t && qx("click", Dx.bind(null, "dom"), !0)(this), "keypress" === t && $x(Dx.bind(null, "dom"))(this)), e.call(this, t, n, r)
                        }
                    })), Object(nx.b)(t, "removeEventListener", (function(e)
                    {
                        return function(t, n, r)
                        {
                            var i = n;
                            try
                            {
                                i = i && (i.__sentry_wrapped__ || i)
                            }
                            catch (e)
                            {}
                            return e.call(this, t, i, r)
                        }
                    })))
                }))
            }();
            break;
        case "xhr":
            ! function()
            {
                if (!("XMLHttpRequest" in Lx)) return;
                var e = XMLHttpRequest.prototype;
                Object(nx.b)(e, "open", (function(e)
                {
                    return function()
                    {
                        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                        var r = this,
                            i = t[1];
                        r.__sentry_xhr__ = {
                            method: Object(R_.k)(t[0]) ? t[0].toUpperCase() : t[0],
                            url: t[1]
                        }, Object(R_.k)(i) && "POST" === r.__sentry_xhr__.method && i.match(/sentry_key/) && (r.__sentry_own_request__ = !0);
                        var o = function()
                        {
                            if (4 === r.readyState)
                            {
                                try
                                {
                                    r.__sentry_xhr__ && (r.__sentry_xhr__.status_code = r.status)
                                }
                                catch (e)
                                {}
                                Dx("xhr",
                                {
                                    args: t,
                                    endTimestamp: Date.now(),
                                    startTimestamp: Date.now(),
                                    xhr: r
                                })
                            }
                        };
                        return "onreadystatechange" in r && "function" == typeof r.onreadystatechange ? Object(nx.b)(r, "onreadystatechange", (function(e)
                        {
                            return function()
                            {
                                for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                                return o(), e.apply(r, t)
                            }
                        })) : r.addEventListener("readystatechange", o), e.apply(r, t)
                    }
                })), Object(nx.b)(e, "send", (function(e)
                {
                    return function()
                    {
                        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                        return Dx("xhr",
                        {
                            args: t,
                            startTimestamp: Date.now(),
                            xhr: this
                        }), e.apply(this, t)
                    }
                }))
            }();
            break;
        case "fetch":
            ! function()
            {
                if (! function()
                    {
                        if (!fx()) return !1;
                        var e = Object(N_.f)();
                        if (hx(e.fetch)) return !0;
                        var t = !1,
                            n = e.document;
                        if (n && "function" == typeof n.createElement) try
                        {
                            var r = n.createElement("iframe");
                            r.hidden = !0, n.head.appendChild(r), r.contentWindow && r.contentWindow.fetch && (t = hx(r.contentWindow.fetch)), n.head.removeChild(r)
                        }
                        catch (e)
                        {
                            z_.warn("Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ", e)
                        }
                        return t
                    }()) return;
                Object(nx.b)(Lx, "fetch", (function(e)
                {
                    return function()
                    {
                        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                        var r = {
                            args: t,
                            fetchData:
                            {
                                method: zx(t),
                                url: Hx(t)
                            },
                            startTimestamp: Date.now()
                        };
                        return Dx("fetch", P_.__assign(
                        {}, r)), e.apply(Lx, t).then((function(e)
                        {
                            return Dx("fetch", P_.__assign(
                            {}, r,
                            {
                                endTimestamp: Date.now(),
                                response: e
                            })), e
                        }), (function(e)
                        {
                            throw Dx("fetch", P_.__assign(
                            {}, r,
                            {
                                endTimestamp: Date.now(),
                                error: e
                            })), e
                        }))
                    }
                }))
            }();
            break;
        case "history":
            ! function()
            {
                if (e = Object(N_.f)(), t = e.chrome, n = t && t.app && t.app.runtime, r = "history" in e && !!e.history.pushState && !!e.history.replaceState, n || !r) return;
                var e, t, n, r;
                var i = Lx.onpopstate;

                function o(e)
                {
                    return function()
                    {
                        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                        var r = t.length > 2 ? t[2] : void 0;
                        if (r)
                        {
                            var i = Ax,
                                o = String(r);
                            Ax = o, Dx("history",
                            {
                                from: i,
                                to: o
                            })
                        }
                        return e.apply(this, t)
                    }
                }
                Lx.onpopstate = function()
                {
                    for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                    var n = Lx.location.href,
                        r = Ax;
                    if (Ax = n, Dx("history",
                        {
                            from: r,
                            to: n
                        }), i) return i.apply(this, e)
                }, Object(nx.b)(Lx.history, "pushState", o), Object(nx.b)(Lx.history, "replaceState", o)
            }();
            break;
        case "error":
            Kx = Lx.onerror, Lx.onerror = function(e, t, n, r, i)
            {
                return Dx("error",
                {
                    column: r,
                    error: i,
                    line: n,
                    msg: e,
                    url: t
                }), !!Kx && Kx.apply(this, arguments)
            };
            break;
        case "unhandledrejection":
            Yx = Lx.onunhandledrejection, Lx.onunhandledrejection = function(e)
            {
                return Dx("unhandledrejection", e), !Yx || Yx.apply(this, arguments)
            };
            break;
        default:
            z_.warn("unknown instrumentation type:", e)
    }
}

function Ux(e)
{
    e && "string" == typeof e.type && "function" == typeof e.callback && (Bx[e.type] = Bx[e.type] || [], Bx[e.type].push(e.callback), Fx(e.type))
}

function Dx(e, t)
{
    var n, r;
    if (e && Bx[e]) try
    {
        for (var i = P_.__values(Bx[e] || []), o = i.next(); !o.done; o = i.next())
        {
            var a = o.value;
            try
            {
                a(t)
            }
            catch (t)
            {
                z_.error("Error while triggering instrumentation handler.\nType: " + e + "\nName: " + Object(N_.e)(a) + "\nError: " + t)
            }
        }
    }
    catch (e)
    {
        n = {
            error: e
        }
    }
    finally
    {
        try
        {
            o && !o.done && (r = i.return) && r.call(i)
        }
        finally
        {
            if (n) throw n.error
        }
    }
}

function zx(e)
{
    return void 0 === e && (e = []), "Request" in Lx && Object(R_.g)(e[0], Request) && e[0].method ? String(e[0].method).toUpperCase() : e[1] && e[1].method ? String(e[1].method).toUpperCase() : "GET"
}

function Hx(e)
{
    return void 0 === e && (e = []), "string" == typeof e[0] ? e[0] : "Request" in Lx && Object(R_.g)(e[0], Request) ? e[0].url : String(e[0])
}
var Vx, Wx, Gx = 0;

function qx(e, t, n)
{
    return void 0 === n && (n = !1),
        function(r)
        {
            Vx = void 0, r && Wx !== r && (Wx = r, Gx && clearTimeout(Gx), n ? Gx = setTimeout((function()
            {
                t(
                {
                    event: r,
                    name: e
                })
            })) : t(
            {
                event: r,
                name: e
            }))
        }
}

function $x(e)
{
    return function(t)
    {
        var n;
        try
        {
            n = t.target
        }
        catch (e)
        {
            return
        }
        var r = n && n.tagName;
        r && ("INPUT" === r || "TEXTAREA" === r || n.isContentEditable) && (Vx || qx("input", e)(t), clearTimeout(Vx), Vx = setTimeout((function()
        {
            Vx = void 0
        }), 1e3))
    }
}
var Kx = null;
var Yx = null;
var Xx = function()
    {
        function e(t)
        {
            this.name = e.id, this._options = P_.__assign(
            {
                console: !0,
                dom: !0,
                fetch: !0,
                history: !0,
                sentry: !0,
                xhr: !0
            }, t)
        }
        return e.prototype.addSentryBreadcrumb = function(e)
        {
            this._options.sentry && G_().addBreadcrumb(
            {
                category: "sentry." + ("transaction" === e.type ? "transaction" : "event"),
                event_id: e.event_id,
                level: e.level,
                message: Object(N_.d)(e)
            },
            {
                event: e
            })
        }, e.prototype._consoleBreadcrumb = function(e)
        {
            var t = {
                category: "console",
                data:
                {
                    arguments: e.args,
                    logger: "console"
                },
                level: cx.fromString(e.level),
                message: Object(Y_.b)(e.args, " ")
            };
            if ("assert" === e.level)
            {
                if (!1 !== e.args[0]) return;
                t.message = "Assertion failed: " + (Object(Y_.b)(e.args.slice(1), " ") || "console.assert"), t.data.arguments = e.args.slice(1)
            }
            G_().addBreadcrumb(t,
            {
                input: e.args,
                level: e.level
            })
        }, e.prototype._domBreadcrumb = function(e)
        {
            var t;
            try
            {
                t = e.event.target ? Object(N_.h)(e.event.target) : Object(N_.h)(e.event)
            }
            catch (e)
            {
                t = "<unknown>"
            }
            0 !== t.length && G_().addBreadcrumb(
            {
                category: "ui." + e.name,
                message: t
            },
            {
                event: e.event,
                name: e.name
            })
        }, e.prototype._xhrBreadcrumb = function(e)
        {
            if (e.endTimestamp)
            {
                if (e.xhr.__sentry_own_request__) return;
                G_().addBreadcrumb(
                {
                    category: "xhr",
                    data: e.xhr.__sentry_xhr__,
                    type: "http"
                },
                {
                    xhr: e.xhr
                })
            }
            else;
        }, e.prototype._fetchBreadcrumb = function(e)
        {
            e.endTimestamp && (e.fetchData.url.match(/sentry_key/) && "POST" === e.fetchData.method || (e.error ? G_().addBreadcrumb(
            {
                category: "fetch",
                data: e.fetchData,
                level: cx.Error,
                type: "http"
            },
            {
                data: e.error,
                input: e.args
            }) : G_().addBreadcrumb(
            {
                category: "fetch",
                data: P_.__assign(
                {}, e.fetchData,
                {
                    status_code: e.response.status
                }),
                type: "http"
            },
            {
                input: e.args,
                response: e.response
            })))
        }, e.prototype._historyBreadcrumb = function(e)
        {
            var t = Object(N_.f)(),
                n = e.from,
                r = e.to,
                i = Object(N_.k)(t.location.href),
                o = Object(N_.k)(n),
                a = Object(N_.k)(r);
            o.path || (o = i), i.protocol === a.protocol && i.host === a.host && (r = a.relative), i.protocol === o.protocol && i.host === o.host && (n = o.relative), G_().addBreadcrumb(
            {
                category: "navigation",
                data:
                {
                    from: n,
                    to: r
                }
            })
        }, e.prototype.setupOnce = function()
        {
            var e = this;
            this._options.console && Ux(
            {
                callback: function()
                {
                    for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                    e._consoleBreadcrumb.apply(e, P_.__spread(t))
                },
                type: "console"
            }), this._options.dom && Ux(
            {
                callback: function()
                {
                    for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                    e._domBreadcrumb.apply(e, P_.__spread(t))
                },
                type: "dom"
            }), this._options.xhr && Ux(
            {
                callback: function()
                {
                    for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                    e._xhrBreadcrumb.apply(e, P_.__spread(t))
                },
                type: "xhr"
            }), this._options.fetch && Ux(
            {
                callback: function()
                {
                    for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                    e._fetchBreadcrumb.apply(e, P_.__spread(t))
                },
                type: "fetch"
            }), this._options.history && Ux(
            {
                callback: function()
                {
                    for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                    e._historyBreadcrumb.apply(e, P_.__spread(t))
                },
                type: "history"
            })
        }, e.id = "Breadcrumbs", e
    }(),
    Jx = function(e)
    {
        function t(t)
        {
            return void 0 === t && (t = {}), e.call(this, Nx, t) || this
        }
        return P_.__extends(t, e), t.prototype._prepareEvent = function(t, n, r)
        {
            return t.platform = t.platform || "javascript", t.sdk = P_.__assign(
            {}, t.sdk,
            {
                name: "sentry.javascript.browser",
                packages: P_.__spread(t.sdk && t.sdk.packages || [], [
                {
                    name: "npm:@sentry/browser",
                    version: "5.17.0"
                }]),
                version: "5.17.0"
            }), e.prototype._prepareEvent.call(this, t, n, r)
        }, t.prototype._sendEvent = function(t)
        {
            var n = this.getIntegration(Xx);
            n && n.addSentryBreadcrumb(t), e.prototype._sendEvent.call(this, t)
        }, t.prototype.showReportDialog = function(e)
        {
            void 0 === e && (e = {});
            var t = Object(N_.f)().document;
            if (t)
                if (this._isEnabled())
                {
                    var n = e.dsn || this.getDsn();
                    if (e.eventId)
                        if (n)
                        {
                            var r = t.createElement("script");
                            r.async = !0, r.src = new rx(n).getReportDialogEndpoint(e), e.onLoad && (r.onload = e.onLoad), (t.head || t.body).appendChild(r)
                        }
                    else z_.error("Missing `Dsn` option in showReportDialog call");
                    else z_.error("Missing `eventId` option in showReportDialog call")
                }
            else z_.error("Trying to call showReportDialog with Sentry Client is disabled")
        }, t
    }(sx);

function Zx(e)
{
    for (var t = [], n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
    var r = G_();
    if (r && r[e]) return r[e].apply(r, P_.__spread(t));
    throw new Error("No hub defined or " + e + " was not found on the hub, please open a bug report.")
}

function Qx(e, t)
{
    var n;
    try
    {
        throw new Error("Sentry syntheticException")
    }
    catch (e)
    {
        n = e
    }
    return Zx("captureException", e,
    {
        captureContext: t,
        originalException: e,
        syntheticException: n
    })
}

function eE(e)
{
    Zx("withScope", e)
}
var tE = 0;

function nE()
{
    return tE > 0
}

function rE()
{
    tE += 1, setTimeout((function()
    {
        tE -= 1
    }))
}

function iE(e, t, n)
{
    if (void 0 === t && (t = {}), "function" != typeof e) return e;
    try
    {
        if (e.__sentry__) return e;
        if (e.__sentry_wrapped__) return e.__sentry_wrapped__
    }
    catch (t)
    {
        return e
    }
    var r = function()
    {
        var r = Array.prototype.slice.call(arguments);
        try
        {
            n && "function" == typeof n && n.apply(this, arguments);
            var i = r.map((function(e)
            {
                return iE(e, t)
            }));
            return e.handleEvent ? e.handleEvent.apply(this, i) : e.apply(this, i)
        }
        catch (e)
        {
            throw rE(), eE((function(n)
            {
                n.addEventProcessor((function(e)
                {
                    var n = P_.__assign(
                    {}, e);
                    return t.mechanism && (Object(N_.b)(n, void 0, void 0), Object(N_.a)(n, t.mechanism)), n.extra = P_.__assign(
                    {}, n.extra,
                    {
                        arguments: r
                    }), n
                })), Qx(e)
            })), e
        }
    };
    try
    {
        for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (r[i] = e[i])
    }
    catch (e)
    {}
    e.prototype = e.prototype ||
    {}, r.prototype = e.prototype, Object.defineProperty(e, "__sentry_wrapped__",
    {
        enumerable: !1,
        value: r
    }), Object.defineProperties(r,
    {
        __sentry__:
        {
            enumerable: !1,
            value: !0
        },
        __sentry_original__:
        {
            enumerable: !1,
            value: e
        }
    });
    try
    {
        Object.getOwnPropertyDescriptor(r, "name").configurable && Object.defineProperty(r, "name",
        {
            get: function()
            {
                return e.name
            }
        })
    }
    catch (e)
    {}
    return r
}
var oE = ["EventTarget", "Window", "Node", "ApplicationCache", "AudioTrackList", "ChannelMergerNode", "CryptoOperation", "EventSource", "FileReader", "HTMLUnknownElement", "IDBDatabase", "IDBRequest", "IDBTransaction", "KeyOperation", "MediaController", "MessagePort", "ModalWindow", "Notification", "SVGElementInstance", "Screen", "TextTrack", "TextTrackCue", "TextTrackList", "WebSocket", "WebSocketWorker", "Worker", "XMLHttpRequest", "XMLHttpRequestEventTarget", "XMLHttpRequestUpload"],
    aE = function()
    {
        function e(t)
        {
            this.name = e.id, this._options = P_.__assign(
            {
                XMLHttpRequest: !0,
                eventTarget: !0,
                requestAnimationFrame: !0,
                setInterval: !0,
                setTimeout: !0
            }, t)
        }
        return e.prototype._wrapTimeFunction = function(e)
        {
            return function()
            {
                for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                var r = t[0];
                return t[0] = iE(r,
                {
                    mechanism:
                    {
                        data:
                        {
                            function: Object(N_.e)(e)
                        },
                        handled: !0,
                        type: "instrument"
                    }
                }), e.apply(this, t)
            }
        }, e.prototype._wrapRAF = function(e)
        {
            return function(t)
            {
                return e.call(this, iE(t,
                {
                    mechanism:
                    {
                        data:
                        {
                            function: "requestAnimationFrame",
                            handler: Object(N_.e)(e)
                        },
                        handled: !0,
                        type: "instrument"
                    }
                }))
            }
        }, e.prototype._wrapEventTarget = function(e)
        {
            var t = Object(N_.f)(),
                n = t[e] && t[e].prototype;
            n && n.hasOwnProperty && n.hasOwnProperty("addEventListener") && (Object(nx.b)(n, "addEventListener", (function(t)
            {
                return function(n, r, i)
                {
                    try
                    {
                        "function" == typeof r.handleEvent && (r.handleEvent = iE(r.handleEvent.bind(r),
                        {
                            mechanism:
                            {
                                data:
                                {
                                    function: "handleEvent",
                                    handler: Object(N_.e)(r),
                                    target: e
                                },
                                handled: !0,
                                type: "instrument"
                            }
                        }))
                    }
                    catch (e)
                    {}
                    return t.call(this, n, iE(r,
                    {
                        mechanism:
                        {
                            data:
                            {
                                function: "addEventListener",
                                handler: Object(N_.e)(r),
                                target: e
                            },
                            handled: !0,
                            type: "instrument"
                        }
                    }), i)
                }
            })), Object(nx.b)(n, "removeEventListener", (function(e)
            {
                return function(t, n, r)
                {
                    var i = n;
                    try
                    {
                        i = i && (i.__sentry_wrapped__ || i)
                    }
                    catch (e)
                    {}
                    return e.call(this, t, i, r)
                }
            })))
        }, e.prototype._wrapXHR = function(e)
        {
            return function()
            {
                for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
                var r = this,
                    i = ["onload", "onerror", "onprogress", "onreadystatechange"];
                return i.forEach((function(e)
                {
                    e in r && "function" == typeof r[e] && Object(nx.b)(r, e, (function(t)
                    {
                        var n = {
                            mechanism:
                            {
                                data:
                                {
                                    function: e,
                                    handler: Object(N_.e)(t)
                                },
                                handled: !0,
                                type: "instrument"
                            }
                        };
                        return t.__sentry_original__ && (n.mechanism.data.handler = Object(N_.e)(t.__sentry_original__)), iE(t, n)
                    }))
                })), e.apply(this, t)
            }
        }, e.prototype.setupOnce = function()
        {
            var e = Object(N_.f)();
            (this._options.setTimeout && Object(nx.b)(e, "setTimeout", this._wrapTimeFunction.bind(this)), this._options.setInterval && Object(nx.b)(e, "setInterval", this._wrapTimeFunction.bind(this)), this._options.requestAnimationFrame && Object(nx.b)(e, "requestAnimationFrame", this._wrapRAF.bind(this)), this._options.XMLHttpRequest && "XMLHttpRequest" in e && Object(nx.b)(XMLHttpRequest.prototype, "send", this._wrapXHR.bind(this)), this._options.eventTarget) && (Array.isArray(this._options.eventTarget) ? this._options.eventTarget : oE).forEach(this._wrapEventTarget.bind(this))
        }, e.id = "TryCatch", e
    }(),
    sE = function()
    {
        function e(t)
        {
            this.name = e.id, this._onErrorHandlerInstalled = !1, this._onUnhandledRejectionHandlerInstalled = !1, this._options = P_.__assign(
            {
                onerror: !0,
                onunhandledrejection: !0
            }, t)
        }
        return e.prototype.setupOnce = function()
        {
            Error.stackTraceLimit = 50, this._options.onerror && (z_.log("Global Handler attached: onerror"), this._installGlobalOnErrorHandler()), this._options.onunhandledrejection && (z_.log("Global Handler attached: onunhandledrejection"), this._installGlobalOnUnhandledRejectionHandler())
        }, e.prototype._installGlobalOnErrorHandler = function()
        {
            var t = this;
            this._onErrorHandlerInstalled || (Ux(
            {
                callback: function(n)
                {
                    var r = n.error,
                        i = G_(),
                        o = i.getIntegration(e),
                        a = r && !0 === r.__sentry_own_request__;
                    if (o && !nE() && !a)
                    {
                        var s = i.getClient(),
                            c = Object(R_.i)(r) ? t._eventFromIncompleteOnError(n.msg, n.url, n.line, n.column) : t._enhanceEventWithInitialFrame(Mx(r, void 0,
                            {
                                attachStacktrace: s && s.getOptions().attachStacktrace,
                                rejection: !1
                            }), n.url, n.line, n.column);
                        Object(N_.a)(c,
                        {
                            handled: !1,
                            type: "onerror"
                        }), i.captureEvent(c,
                        {
                            originalException: r
                        })
                    }
                },
                type: "error"
            }), this._onErrorHandlerInstalled = !0)
        }, e.prototype._installGlobalOnUnhandledRejectionHandler = function()
        {
            var t = this;
            this._onUnhandledRejectionHandlerInstalled || (Ux(
            {
                callback: function(n)
                {
                    var r = n;
                    try
                    {
                        "reason" in n ? r = n.reason : "detail" in n && "reason" in n.detail && (r = n.detail.reason)
                    }
                    catch (e)
                    {}
                    var i = G_(),
                        o = i.getIntegration(e),
                        a = r && !0 === r.__sentry_own_request__;
                    if (!o || nE() || a) return !0;
                    var s = i.getClient(),
                        c = Object(R_.i)(r) ? t._eventFromIncompleteRejection(r) : Mx(r, void 0,
                        {
                            attachStacktrace: s && s.getOptions().attachStacktrace,
                            rejection: !0
                        });
                    c.level = cx.Error, Object(N_.a)(c,
                    {
                        handled: !1,
                        type: "onunhandledrejection"
                    }), i.captureEvent(c,
                    {
                        originalException: r
                    })
                },
                type: "unhandledrejection"
            }), this._onUnhandledRejectionHandlerInstalled = !0)
        }, e.prototype._eventFromIncompleteOnError = function(e, t, n, r)
        {
            var i, o = Object(R_.e)(e) ? e.message : e;
            if (Object(R_.k)(o))
            {
                var a = o.match(/^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/i);
                a && (i = a[1], o = a[2])
            }
            var s = {
                exception:
                {
                    values: [
                    {
                        type: i || "Error",
                        value: o
                    }]
                }
            };
            return this._enhanceEventWithInitialFrame(s, t, n, r)
        }, e.prototype._eventFromIncompleteRejection = function(e)
        {
            return {
                exception:
                {
                    values: [
                    {
                        type: "UnhandledRejection",
                        value: "Non-Error promise rejection captured with value: " + e
                    }]
                }
            }
        }, e.prototype._enhanceEventWithInitialFrame = function(e, t, n, r)
        {
            e.exception = e.exception ||
            {}, e.exception.values = e.exception.values || [], e.exception.values[0] = e.exception.values[0] ||
            {}, e.exception.values[0].stacktrace = e.exception.values[0].stacktrace ||
            {}, e.exception.values[0].stacktrace.frames = e.exception.values[0].stacktrace.frames || [];
            var i = isNaN(parseInt(r, 10)) ? void 0 : r,
                o = isNaN(parseInt(n, 10)) ? void 0 : n,
                a = Object(R_.k)(t) && t.length > 0 ? t : Object(N_.g)();
            return 0 === e.exception.values[0].stacktrace.frames.length && e.exception.values[0].stacktrace.frames.push(
            {
                colno: i,
                filename: a,
                function: "?",
                in_app: !0,
                lineno: o
            }), e
        }, e.id = "GlobalHandlers", e
    }(),
    cE = function()
    {
        function e(t)
        {
            void 0 === t && (t = {}), this.name = e.id, this._key = t.key || "cause", this._limit = t.limit || 5
        }
        return e.prototype.setupOnce = function()
        {
            j_((function(t, n)
            {
                var r = G_().getIntegration(e);
                return r ? r._handler(t, n) : t
            }))
        }, e.prototype._handler = function(e, t)
        {
            if (!(e.exception && e.exception.values && t && Object(R_.g)(t.originalException, Error))) return e;
            var n = this._walkErrorTree(t.originalException, this._key);
            return e.exception.values = P_.__spread(n, e.exception.values), e
        }, e.prototype._walkErrorTree = function(e, t, n)
        {
            if (void 0 === n && (n = []), !Object(R_.g)(e[t], Error) || n.length + 1 >= this._limit) return n;
            var r = xx(bx(e[t]));
            return this._walkErrorTree(e[t], t, P_.__spread([r], n))
        }, e.id = "LinkedErrors", e
    }(),
    uE = Object(N_.f)(),
    lE = function()
    {
        function e()
        {
            this.name = e.id
        }
        return e.prototype.setupOnce = function()
        {
            j_((function(t)
            {
                if (G_().getIntegration(e))
                {
                    if (!uE.navigator || !uE.location) return t;
                    var n = t.request ||
                    {};
                    return n.url = n.url || uE.location.href, n.headers = n.headers ||
                    {}, n.headers["User-Agent"] = uE.navigator.userAgent, P_.__assign(
                    {}, t,
                    {
                        request: n
                    })
                }
                return t
            }))
        }, e.id = "UserAgent", e
    }(),
    fE = [new i.InboundFilters, new i.FunctionToString, new aE, new Xx, new sE, new cE, new lE];
console.log("Initializing sentry"),
    function(e)
    {
        if (void 0 === e && (e = {}), void 0 === e.defaultIntegrations && (e.defaultIntegrations = fE), void 0 === e.release)
        {
            var t = Object(N_.f)();
            t.SENTRY_RELEASE && t.SENTRY_RELEASE.id && (e.release = t.SENTRY_RELEASE.id)
        }! function(e, t)
        {
            !0 === t.debug && z_.enable();
            var n = G_(),
                r = new e(t);
            n.bindClient(r)
        }(Jx, e)
    }(
    {
        dsn: "https://5269c5a29b704f23aa1f303d9311355e@o411063.ingest.sentry.io/5285803"
    });
var hE = function e(t, n, r)
{
    var i;
    if ("function" == typeof n && void 0 === r && (r = n, n = void 0), void 0 !== r)
    {
        if ("function" != typeof r) throw new Error("Expected the enhancer to be a function.");
        return r(e)(t, n)
    }
    if ("function" != typeof t) throw new Error("Expected the reducer to be a function.");
    var o = t,
        a = n,
        s = [],
        c = s,
        u = !1;

    function l()
    {
        c === s && (c = s.slice())
    }

    function f()
    {
        return a
    }

    function h(e)
    {
        if ("function" != typeof e) throw new Error("Expected listener to be a function.");
        var t = !0;
        return l(), c.push(e),
            function()
            {
                if (t)
                {
                    t = !1, l();
                    var n = c.indexOf(e);
                    c.splice(n, 1)
                }
            }
    }

    function d(e)
    {
        if (!A(e)) throw new Error("Actions must be plain objects. Use custom middleware for async actions.");
        if (void 0 === e.type) throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');
        if (u) throw new Error("Reducers may not dispatch actions.");
        try
        {
            u = !0, a = o(a, e)
        }
        finally
        {
            u = !1
        }
        for (var t = s = c, n = 0; n < t.length; n++)
        {
            (0, t[n])()
        }
        return e
    }
    return d(
    {
        type: O
    }), (i = {
        dispatch: d,
        subscribe: h,
        getState: f,
        replaceReducer: function(e)
        {
            if ("function" != typeof e) throw new Error("Expected the nextReducer to be a function.");
            o = e, d(
            {
                type: O
            })
        }
    })[C.a] = function()
    {
        var e, t = h;
        return (e = {
            subscribe: function(e)
            {
                if ("object" != typeof e) throw new TypeError("Expected the observer to be an object.");

                function n()
                {
                    e.next && e.next(f())
                }
                return n(),
                {
                    unsubscribe: t(n)
                }
            }
        })[C.a] = function()
        {
            return this
        }, e
    }, i
}(k_, function()
{
    for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
    return function(e)
    {
        return function(n, r, i)
        {
            var o, a = e(n, r, i),
                s = a.dispatch,
                c = {
                    getState: a.getState,
                    dispatch: function(e)
                    {
                        return s(e)
                    }
                };
            return o = t.map((function(e)
            {
                return e(c)
            })), s = I.apply(void 0, o)(a.dispatch), N(
            {}, a,
            {
                dispatch: s
            })
        }
    }
}(Re), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());
Object(s.render)(a.a.createElement(D,
{
    store: hE
}, a.a.createElement(Bt,
{
    theme: C_
}, a.a.createElement(St, null, a.a.createElement(Et, null, Object.keys(kn).map(e => a.a.createElement(gt,
{
    key: e,
    path: "/geyser/".concat(e),
    render: () => a.a.createElement(o_,
    {
        activePoolRef: e
    })
})), a.a.createElement(gt,
{
    render: () => a.a.createElement(dt,
    {
        to: "/geyser/beehiveV2-uniswap-weth-ampl"
    })
}))))), document.getElementById("root"))
},
function(e, t, n)
{
    "use strict";
    n.d(t, "a", (function()
    {
        return a
    }));
    var r = n(1),
        i = n(91);

    function o(e)
    {
        return e && "object" === Object(i.a)(e) && e.constructor === Object
    }

    function a(e, t)
    {
        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] :
            {
                clone: !0
            },
            i = n.clone ? Object(r.a)(
            {}, e) : e;
        return o(e) && o(t) && Object.keys(t).forEach((function(r)
        {
            "__proto__" !== r && (o(t[r]) && r in e ? i[r] = a(e[r], t[r], n) : i[r] = t[r])
        })), i
    }
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ,
function(e, t, n)
{
    "use strict";
    n.d(t, "a", (function()
    {
        return a
    }));
    var r = n(0),
        i = n.n(r),
        o = n(107);

    function a()
    {
        return i.a.useContext(o.a)
    }
},
function(e, t, n)
{
    "use strict";

    function r(e)
    {
        var t = e.theme,
            n = e.name,
            r = e.props;
        if (!t || !t.props || !t.props[n]) return r;
        var i, o = t.props[n];
        for (i in o) void 0 === r[i] && (r[i] = o[i]);
        return r
    }
    n.d(t, "a", (function()
    {
        return r
    }))
},
function(e, t, n)
{
    "use strict";
    n.d(t, "a", (function()
    {
        return ln
    }));
    var r = n(4),
        i = n(1),
        o = n(0),
        a = n.n(o),
        s = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e)
        {
            return typeof e
        } : function(e)
        {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        },
        c = "object" === ("undefined" == typeof window ? "undefined" : s(window)) && "object" === ("undefined" == typeof document ? "undefined" : s(document)) && 9 === document.nodeType,
        u = (n(44), n(65)),
        l = n(16),
        f = n(45),
        h = n(21),
        d = {}.constructor;

    function p(e)
    {
        if (null == e || "object" != typeof e) return e;
        if (Array.isArray(e)) return e.map(p);
        if (e.constructor !== d) return e;
        var t = {};
        for (var n in e) t[n] = p(e[n]);
        return t
    }

    function m(e, t, n)
    {
        void 0 === e && (e = "unnamed");
        var r = n.jss,
            i = p(t),
            o = r.plugins.onCreateRule(e, i, n);
        return o || (e[0], null)
    }
    var v = function(e, t)
    {
        for (var n = "", r = 0; r < e.length && "!important" !== e[r]; r++) n && (n += t), n += e[r];
        return n
    };

    function g(e, t)
    {
        if (void 0 === t && (t = !1), !Array.isArray(e)) return e;
        var n = "";
        if (Array.isArray(e[0]))
            for (var r = 0; r < e.length && "!important" !== e[r]; r++) n && (n += ", "), n += v(e[r], " ");
        else n = v(e, ", ");
        return t || "!important" !== e[e.length - 1] || (n += " !important"), n
    }

    function y(e, t)
    {
        for (var n = "", r = 0; r < t; r++) n += "  ";
        return n + e
    }

    function b(e, t, n)
    {
        void 0 === n && (n = {});
        var r = "";
        if (!t) return r;
        var i = n.indent,
            o = void 0 === i ? 0 : i,
            a = t.fallbacks;
        if (e && o++, a)
            if (Array.isArray(a))
                for (var s = 0; s < a.length; s++)
                {
                    var c = a[s];
                    for (var u in c)
                    {
                        var l = c[u];
                        null != l && (r && (r += "\n"), r += "" + y(u + ": " + g(l) + ";", o))
                    }
                }
        else
            for (var f in a)
            {
                var h = a[f];
                null != h && (r && (r += "\n"), r += "" + y(f + ": " + g(h) + ";", o))
            }
        for (var d in t)
        {
            var p = t[d];
            null != p && "fallbacks" !== d && (r && (r += "\n"), r += "" + y(d + ": " + g(p) + ";", o))
        }
        return (r || n.allowEmpty) && e ? (r && (r = "\n" + r + "\n"), y(e + " {" + r, --o) + y("}", o)) : r
    }
    var w = /([[\].#*$><+~=|^:(),"'`\s])/g,
        _ = "undefined" != typeof CSS && CSS.escape,
        x = function(e)
        {
            return _ ? _(e) : e.replace(w, "\\$1")
        },
        E = function()
        {
            function e(e, t, n)
            {
                this.type = "style", this.key = void 0, this.isProcessed = !1, this.style = void 0, this.renderer = void 0, this.renderable = void 0, this.options = void 0;
                var r = n.sheet,
                    i = n.Renderer;
                this.key = e, this.options = n, this.style = t, r ? this.renderer = r.renderer : i && (this.renderer = new i)
            }
            return e.prototype.prop = function(e, t, n)
            {
                if (void 0 === t) return this.style[e];
                var r = !!n && n.force;
                if (!r && this.style[e] === t) return this;
                var i = t;
                n && !1 === n.process || (i = this.options.jss.plugins.onChangeValue(t, e, this));
                var o = null == i || !1 === i,
                    a = e in this.style;
                if (o && !a && !r) return this;
                var s = o && a;
                if (s ? delete this.style[e] : this.style[e] = i, this.renderable && this.renderer) return s ? this.renderer.removeProperty(this.renderable, e) : this.renderer.setProperty(this.renderable, e, i), this;
                var c = this.options.sheet;
                return c && c.attached, this
            }, e
        }(),
        S = function(e)
        {
            function t(t, n, r)
            {
                var i;
                (i = e.call(this, t, n, r) || this).selectorText = void 0, i.id = void 0, i.renderable = void 0;
                var o = r.selector,
                    a = r.scoped,
                    s = r.sheet,
                    c = r.generateId;
                return o ? i.selectorText = o : !1 !== a && (i.id = c(Object(f.a)(Object(f.a)(i)), s), i.selectorText = "." + x(i.id)), i
            }
            Object(l.a)(t, e);
            var n = t.prototype;
            return n.applyTo = function(e)
            {
                var t = this.renderer;
                if (t)
                {
                    var n = this.toJSON();
                    for (var r in n) t.setProperty(e, r, n[r])
                }
                return this
            }, n.toJSON = function()
            {
                var e = {};
                for (var t in this.style)
                {
                    var n = this.style[t];
                    "object" != typeof n ? e[t] = n : Array.isArray(n) && (e[t] = g(n))
                }
                return e
            }, n.toString = function(e)
            {
                var t = this.options.sheet,
                    n = !!t && t.options.link ? Object(i.a)(
                    {}, e,
                    {
                        allowEmpty: !0
                    }) : e;
                return b(this.selectorText, this.style, n)
            }, Object(u.a)(t, [
            {
                key: "selector",
                set: function(e)
                {
                    if (e !== this.selectorText)
                    {
                        this.selectorText = e;
                        var t = this.renderer,
                            n = this.renderable;
                        if (n && t) t.setSelector(n, e) || t.replaceRule(n, this)
                    }
                },
                get: function()
                {
                    return this.selectorText
                }
            }]), t
        }(E),
        M = {
            onCreateRule: function(e, t, n)
            {
                return "@" === e[0] || n.parent && "keyframes" === n.parent.type ? null : new S(e, t, n)
            }
        },
        T = {
            indent: 1,
            children: !0
        },
        k = /@([\w-]+)/,
        A = function()
        {
            function e(e, t, n)
            {
                this.type = "conditional", this.at = void 0, this.key = void 0, this.query = void 0, this.rules = void 0, this.options = void 0, this.isProcessed = !1, this.renderable = void 0, this.key = e, this.query = n.name;
                var r = e.match(k);
                for (var o in this.at = r ? r[1] : "unknown", this.options = n, this.rules = new J(Object(i.a)(
                    {}, n,
                    {
                        parent: this
                    })), t) this.rules.add(o, t[o]);
                this.rules.process()
            }
            var t = e.prototype;
            return t.getRule = function(e)
            {
                return this.rules.get(e)
            }, t.indexOf = function(e)
            {
                return this.rules.indexOf(e)
            }, t.addRule = function(e, t, n)
            {
                var r = this.rules.add(e, t, n);
                return r ? (this.options.jss.plugins.onProcessRule(r), r) : null
            }, t.toString = function(e)
            {
                if (void 0 === e && (e = T), null == e.indent && (e.indent = T.indent), null == e.children && (e.children = T.children), !1 === e.children) return this.query + " {}";
                var t = this.rules.toString(e);
                return t ? this.query + " {\n" + t + "\n}" : ""
            }, e
        }(),
        C = /@media|@supports\s+/,
        O = {
            onCreateRule: function(e, t, n)
            {
                return C.test(e) ? new A(e, t, n) : null
            }
        },
        P = {
            indent: 1,
            children: !0
        },
        R = /@keyframes\s+([\w-]+)/,
        I = function()
        {
            function e(e, t, n)
            {
                this.type = "keyframes", this.at = "@keyframes", this.key = void 0, this.name = void 0, this.id = void 0, this.rules = void 0, this.options = void 0, this.isProcessed = !1, this.renderable = void 0;
                var r = e.match(R);
                r && r[1] ? this.name = r[1] : this.name = "noname", this.key = this.type + "-" + this.name, this.options = n;
                var o = n.scoped,
                    a = n.sheet,
                    s = n.generateId;
                for (var c in this.id = !1 === o ? this.name : x(s(this, a)), this.rules = new J(Object(i.a)(
                    {}, n,
                    {
                        parent: this
                    })), t) this.rules.add(c, t[c], Object(i.a)(
                {}, n,
                {
                    parent: this
                }));
                this.rules.process()
            }
            return e.prototype.toString = function(e)
            {
                if (void 0 === e && (e = P), null == e.indent && (e.indent = P.indent), null == e.children && (e.children = P.children), !1 === e.children) return this.at + " " + this.id + " {}";
                var t = this.rules.toString(e);
                return t && (t = "\n" + t + "\n"), this.at + " " + this.id + " {" + t + "}"
            }, e
        }(),
        N = /@keyframes\s+/,
        L = /\$([\w-]+)/g,
        B = function(e, t)
        {
            return "string" == typeof e ? e.replace(L, (function(e, n)
            {
                return n in t ? t[n] : e
            })) : e
        },
        j = function(e, t, n)
        {
            var r = e[t],
                i = B(r, n);
            i !== r && (e[t] = i)
        },
        F = {
            onCreateRule: function(e, t, n)
            {
                return "string" == typeof e && N.test(e) ? new I(e, t, n) : null
            },
            onProcessStyle: function(e, t, n)
            {
                return "style" === t.type && n ? ("animation-name" in e && j(e, "animation-name", n.keyframes), "animation" in e && j(e, "animation", n.keyframes), e) : e
            },
            onChangeValue: function(e, t, n)
            {
                var r = n.options.sheet;
                if (!r) return e;
                switch (t)
                {
                    case "animation":
                    case "animation-name":
                        return B(e, r.keyframes);
                    default:
                        return e
                }
            }
        },
        U = function(e)
        {
            function t()
            {
                for (var t, n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
                return (t = e.call.apply(e, [this].concat(r)) || this).renderable = void 0, t
            }
            return Object(l.a)(t, e), t.prototype.toString = function(e)
            {
                var t = this.options.sheet,
                    n = !!t && t.options.link ? Object(i.a)(
                    {}, e,
                    {
                        allowEmpty: !0
                    }) : e;
                return b(this.key, this.style, n)
            }, t
        }(E),
        D = {
            onCreateRule: function(e, t, n)
            {
                return n.parent && "keyframes" === n.parent.type ? new U(e, t, n) : null
            }
        },
        z = function()
        {
            function e(e, t, n)
            {
                this.type = "font-face", this.at = "@font-face", this.key = void 0, this.style = void 0, this.options = void 0, this.isProcessed = !1, this.renderable = void 0, this.key = e, this.style = t, this.options = n
            }
            return e.prototype.toString = function(e)
            {
                if (Array.isArray(this.style))
                {
                    for (var t = "", n = 0; n < this.style.length; n++) t += b(this.at, this.style[n]), this.style[n + 1] && (t += "\n");
                    return t
                }
                return b(this.at, this.style, e)
            }, e
        }(),
        H = /@font-face/,
        V = {
            onCreateRule: function(e, t, n)
            {
                return H.test(e) ? new z(e, t, n) : null
            }
        },
        W = function()
        {
            function e(e, t, n)
            {
                this.type = "viewport", this.at = "@viewport", this.key = void 0, this.style = void 0, this.options = void 0, this.isProcessed = !1, this.renderable = void 0, this.key = e, this.style = t, this.options = n
            }
            return e.prototype.toString = function(e)
            {
                return b(this.key, this.style, e)
            }, e
        }(),
        G = {
            onCreateRule: function(e, t, n)
            {
                return "@viewport" === e || "@-ms-viewport" === e ? new W(e, t, n) : null
            }
        },
        q = function()
        {
            function e(e, t, n)
            {
                this.type = "simple", this.key = void 0, this.value = void 0, this.options = void 0, this.isProcessed = !1, this.renderable = void 0, this.key = e, this.value = t, this.options = n
            }
            return e.prototype.toString = function(e)
            {
                if (Array.isArray(this.value))
                {
                    for (var t = "", n = 0; n < this.value.length; n++) t += this.key + " " + this.value[n] + ";", this.value[n + 1] && (t += "\n");
                    return t
                }
                return this.key + " " + this.value + ";"
            }, e
        }(),
        $ = {
            "@charset": !0,
            "@import": !0,
            "@namespace": !0
        },
        K = [M, O, F, D, V, G,
        {
            onCreateRule: function(e, t, n)
            {
                return e in $ ? new q(e, t, n) : null
            }
        }],
        Y = {
            process: !0
        },
        X = {
            force: !0,
            process: !0
        },
        J = function()
        {
            function e(e)
            {
                this.map = {}, this.raw = {}, this.index = [], this.counter = 0, this.options = void 0, this.classes = void 0, this.keyframes = void 0, this.options = e, this.classes = e.classes, this.keyframes = e.keyframes
            }
            var t = e.prototype;
            return t.add = function(e, t, n)
            {
                var r = this.options,
                    o = r.parent,
                    a = r.sheet,
                    s = r.jss,
                    c = r.Renderer,
                    u = r.generateId,
                    l = r.scoped,
                    f = Object(i.a)(
                    {
                        classes: this.classes,
                        parent: o,
                        sheet: a,
                        jss: s,
                        Renderer: c,
                        generateId: u,
                        scoped: l,
                        name: e
                    }, n),
                    h = e;
                e in this.raw && (h = e + "-d" + this.counter++), this.raw[h] = t, h in this.classes && (f.selector = "." + x(this.classes[h]));
                var d = m(h, t, f);
                if (!d) return null;
                this.register(d);
                var p = void 0 === f.index ? this.index.length : f.index;
                return this.index.splice(p, 0, d), d
            }, t.get = function(e)
            {
                return this.map[e]
            }, t.remove = function(e)
            {
                this.unregister(e), delete this.raw[e.key], this.index.splice(this.index.indexOf(e), 1)
            }, t.indexOf = function(e)
            {
                return this.index.indexOf(e)
            }, t.process = function()
            {
                var e = this.options.jss.plugins;
                this.index.slice(0).forEach(e.onProcessRule, e)
            }, t.register = function(e)
            {
                this.map[e.key] = e, e instanceof S ? (this.map[e.selector] = e, e.id && (this.classes[e.key] = e.id)) : e instanceof I && this.keyframes && (this.keyframes[e.name] = e.id)
            }, t.unregister = function(e)
            {
                delete this.map[e.key], e instanceof S ? (delete this.map[e.selector], delete this.classes[e.key]) : e instanceof I && delete this.keyframes[e.name]
            }, t.update = function()
            {
                var e, t, n;
                if ("string" == typeof(arguments.length <= 0 ? void 0 : arguments[0]) ? (e = arguments.length <= 0 ? void 0 : arguments[0], t = arguments.length <= 1 ? void 0 : arguments[1], n = arguments.length <= 2 ? void 0 : arguments[2]) : (t = arguments.length <= 0 ? void 0 : arguments[0], n = arguments.length <= 1 ? void 0 : arguments[1], e = null), e) this.updateOne(this.map[e], t, n);
                else
                    for (var r = 0; r < this.index.length; r++) this.updateOne(this.index[r], t, n)
            }, t.updateOne = function(t, n, r)
            {
                void 0 === r && (r = Y);
                var i = this.options,
                    o = i.jss.plugins,
                    a = i.sheet;
                if (t.rules instanceof e) t.rules.update(n, r);
                else
                {
                    var s = t,
                        c = s.style;
                    if (o.onUpdate(n, t, a, r), r.process && c && c !== s.style)
                    {
                        for (var u in o.onProcessStyle(s.style, s, a), s.style)
                        {
                            var l = s.style[u];
                            l !== c[u] && s.prop(u, l, X)
                        }
                        for (var f in c)
                        {
                            var h = s.style[f],
                                d = c[f];
                            null == h && h !== d && s.prop(f, null, X)
                        }
                    }
                }
            }, t.toString = function(e)
            {
                for (var t = "", n = this.options.sheet, r = !!n && n.options.link, i = 0; i < this.index.length; i++)
                {
                    var o = this.index[i].toString(e);
                    (o || r) && (t && (t += "\n"), t += o)
                }
                return t
            }, e
        }(),
        Z = function()
        {
            function e(e, t)
            {
                for (var n in this.options = void 0, this.deployed = void 0, this.attached = void 0, this.rules = void 0, this.renderer = void 0, this.classes = void 0, this.keyframes = void 0, this.queue = void 0, this.attached = !1, this.deployed = !1, this.classes = {}, this.keyframes = {}, this.options = Object(i.a)(
                    {}, t,
                    {
                        sheet: this,
                        parent: this,
                        classes: this.classes,
                        keyframes: this.keyframes
                    }), t.Renderer && (this.renderer = new t.Renderer(this)), this.rules = new J(this.options), e) this.rules.add(n, e[n]);
                this.rules.process()
            }
            var t = e.prototype;
            return t.attach = function()
            {
                return this.attached || (this.renderer && this.renderer.attach(), this.attached = !0, this.deployed || this.deploy()), this
            }, t.detach = function()
            {
                return this.attached ? (this.renderer && this.renderer.detach(), this.attached = !1, this) : this
            }, t.addRule = function(e, t, n)
            {
                var r = this.queue;
                this.attached && !r && (this.queue = []);
                var i = this.rules.add(e, t, n);
                return i ? (this.options.jss.plugins.onProcessRule(i), this.attached ? this.deployed ? (r ? r.push(i) : (this.insertRule(i), this.queue && (this.queue.forEach(this.insertRule, this), this.queue = void 0)), i) : i : (this.deployed = !1, i)) : null
            }, t.insertRule = function(e)
            {
                this.renderer && this.renderer.insertRule(e)
            }, t.addRules = function(e, t)
            {
                var n = [];
                for (var r in e)
                {
                    var i = this.addRule(r, e[r], t);
                    i && n.push(i)
                }
                return n
            }, t.getRule = function(e)
            {
                return this.rules.get(e)
            }, t.deleteRule = function(e)
            {
                var t = "object" == typeof e ? e : this.rules.get(e);
                return !!t && (this.rules.remove(t), !(this.attached && t.renderable && this.renderer) || this.renderer.deleteRule(t.renderable))
            }, t.indexOf = function(e)
            {
                return this.rules.indexOf(e)
            }, t.deploy = function()
            {
                return this.renderer && this.renderer.deploy(), this.deployed = !0, this
            }, t.update = function()
            {
                var e;
                return (e = this.rules).update.apply(e, arguments), this
            }, t.updateOne = function(e, t, n)
            {
                return this.rules.updateOne(e, t, n), this
            }, t.toString = function(e)
            {
                return this.rules.toString(e)
            }, e
        }(),
        Q = function()
        {
            function e()
            {
                this.plugins = {
                    internal: [],
                    external: []
                }, this.registry = void 0
            }
            var t = e.prototype;
            return t.onCreateRule = function(e, t, n)
            {
                for (var r = 0; r < this.registry.onCreateRule.length; r++)
                {
                    var i = this.registry.onCreateRule[r](e, t, n);
                    if (i) return i
                }
                return null
            }, t.onProcessRule = function(e)
            {
                if (!e.isProcessed)
                {
                    for (var t = e.options.sheet, n = 0; n < this.registry.onProcessRule.length; n++) this.registry.onProcessRule[n](e, t);
                    e.style && this.onProcessStyle(e.style, e, t), e.isProcessed = !0
                }
            }, t.onProcessStyle = function(e, t, n)
            {
                for (var r = 0; r < this.registry.onProcessStyle.length; r++) t.style = this.registry.onProcessStyle[r](t.style, t, n)
            }, t.onProcessSheet = function(e)
            {
                for (var t = 0; t < this.registry.onProcessSheet.length; t++) this.registry.onProcessSheet[t](e)
            }, t.onUpdate = function(e, t, n, r)
            {
                for (var i = 0; i < this.registry.onUpdate.length; i++) this.registry.onUpdate[i](e, t, n, r)
            }, t.onChangeValue = function(e, t, n)
            {
                for (var r = e, i = 0; i < this.registry.onChangeValue.length; i++) r = this.registry.onChangeValue[i](r, t, n);
                return r
            }, t.use = function(e, t)
            {
                void 0 === t && (t = {
                    queue: "external"
                });
                var n = this.plugins[t.queue]; - 1 === n.indexOf(e) && (n.push(e), this.registry = [].concat(this.plugins.external, this.plugins.internal).reduce((function(e, t)
                {
                    for (var n in t) n in e && e[n].push(t[n]);
                    return e
                }),
                {
                    onCreateRule: [],
                    onProcessRule: [],
                    onProcessStyle: [],
                    onProcessSheet: [],
                    onChangeValue: [],
                    onUpdate: []
                }))
            }, e
        }(),
        ee = new(function()
        {
            function e()
            {
                this.registry = []
            }
            var t = e.prototype;
            return t.add = function(e)
            {
                var t = this.registry,
                    n = e.options.index;
                if (-1 === t.indexOf(e))
                    if (0 === t.length || n >= this.index) t.push(e);
                    else
                        for (var r = 0; r < t.length; r++)
                            if (t[r].options.index > n) return void t.splice(r, 0, e)
            }, t.reset = function()
            {
                this.registry = []
            }, t.remove = function(e)
            {
                var t = this.registry.indexOf(e);
                this.registry.splice(t, 1)
            }, t.toString = function(e)
            {
                for (var t = void 0 === e ?
                    {} : e, n = t.attached, r = Object(h.a)(t, ["attached"]), i = "", o = 0; o < this.registry.length; o++)
                {
                    var a = this.registry[o];
                    null != n && a.attached !== n || (i && (i += "\n"), i += a.toString(r))
                }
                return i
            }, Object(u.a)(e, [
            {
                key: "index",
                get: function()
                {
                    return 0 === this.registry.length ? 0 : this.registry[this.registry.length - 1].options.index
                }
            }]), e
        }()),
        te = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")(),
        ne = "2f1acc6c3a606b082e5eef5e54414ffb";
    null == te[ne] && (te[ne] = 0);
    var re = te[ne]++,
        ie = function(e)
        {
            void 0 === e && (e = {});
            var t = 0;
            return function(n, r)
            {
                t += 1;
                var i = "",
                    o = "";
                return r && (r.options.classNamePrefix && (o = r.options.classNamePrefix), null != r.options.jss.id && (i = String(r.options.jss.id))), e.minify ? "" + (o || "c") + re + i + t : o + n.key + "-" + re + (i ? "-" + i : "") + "-" + t
            }
        },
        oe = function(e)
        {
            var t;
            return function()
            {
                return t || (t = e()), t
            }
        };

    function ae(e, t)
    {
        try
        {
            return e.attributeStyleMap ? e.attributeStyleMap.get(t) : e.style.getPropertyValue(t)
        }
        catch (e)
        {
            return ""
        }
    }

    function se(e, t, n)
    {
        try
        {
            var r = n;
            if (Array.isArray(n) && (r = g(n, !0), "!important" === n[n.length - 1])) return e.style.setProperty(t, r, "important"), !0;
            e.attributeStyleMap ? e.attributeStyleMap.set(t, r) : e.style.setProperty(t, r)
        }
        catch (e)
        {
            return !1
        }
        return !0
    }

    function ce(e, t)
    {
        try
        {
            e.attributeStyleMap ? e.attributeStyleMap.delete(t) : e.style.removeProperty(t)
        }
        catch (e)
        {}
    }

    function ue(e, t)
    {
        return e.selectorText = t, e.selectorText === t
    }
    var le = oe((function()
    {
        return document.querySelector("head")
    }));

    function fe(e)
    {
        var t = ee.registry;
        if (t.length > 0)
        {
            var n = function(e, t)
            {
                for (var n = 0; n < e.length; n++)
                {
                    var r = e[n];
                    if (r.attached && r.options.index > t.index && r.options.insertionPoint === t.insertionPoint) return r
                }
                return null
            }(t, e);
            if (n && n.renderer) return {
                parent: n.renderer.element.parentNode,
                node: n.renderer.element
            };
            if ((n = function(e, t)
                {
                    for (var n = e.length - 1; n >= 0; n--)
                    {
                        var r = e[n];
                        if (r.attached && r.options.insertionPoint === t.insertionPoint) return r
                    }
                    return null
                }(t, e)) && n.renderer) return {
                parent: n.renderer.element.parentNode,
                node: n.renderer.element.nextSibling
            }
        }
        var r = e.insertionPoint;
        if (r && "string" == typeof r)
        {
            var i = function(e)
            {
                for (var t = le(), n = 0; n < t.childNodes.length; n++)
                {
                    var r = t.childNodes[n];
                    if (8 === r.nodeType && r.nodeValue.trim() === e) return r
                }
                return null
            }(r);
            if (i) return {
                parent: i.parentNode,
                node: i.nextSibling
            }
        }
        return !1
    }
    var he = oe((function()
        {
            var e = document.querySelector('meta[property="csp-nonce"]');
            return e ? e.getAttribute("content") : null
        })),
        de = function(e, t, n)
        {
            var r = e.cssRules.length;
            (void 0 === n || n > r) && (n = r);
            try
            {
                if ("insertRule" in e) e.insertRule(t, n);
                else if ("appendRule" in e)
                {
                    e.appendRule(t)
                }
            }
            catch (e)
            {
                return !1
            }
            return e.cssRules[n]
        },
        pe = function()
        {
            function e(e)
            {
                this.getPropertyValue = ae, this.setProperty = se, this.removeProperty = ce, this.setSelector = ue, this.element = void 0, this.sheet = void 0, this.hasInsertedRules = !1, e && ee.add(e), this.sheet = e;
                var t = this.sheet ? this.sheet.options :
                    {},
                    n = t.media,
                    r = t.meta,
                    i = t.element;
                this.element = i || function()
                {
                    var e = document.createElement("style");
                    return e.textContent = "\n", e
                }(), this.element.setAttribute("data-jss", ""), n && this.element.setAttribute("media", n), r && this.element.setAttribute("data-meta", r);
                var o = he();
                o && this.element.setAttribute("nonce", o)
            }
            var t = e.prototype;
            return t.attach = function()
            {
                if (!this.element.parentNode && this.sheet)
                {
                    ! function(e, t)
                    {
                        var n = t.insertionPoint,
                            r = fe(t);
                        if (!1 !== r && r.parent) r.parent.insertBefore(e, r.node);
                        else if (n && "number" == typeof n.nodeType)
                        {
                            var i = n,
                                o = i.parentNode;
                            o && o.insertBefore(e, i.nextSibling)
                        }
                        else le().appendChild(e)
                    }(this.element, this.sheet.options);
                    var e = Boolean(this.sheet && this.sheet.deployed);
                    this.hasInsertedRules && e && (this.hasInsertedRules = !1, this.deploy())
                }
            }, t.detach = function()
            {
                var e = this.element.parentNode;
                e && e.removeChild(this.element)
            }, t.deploy = function()
            {
                var e = this.sheet;
                e && (e.options.link ? this.insertRules(e.rules) : this.element.textContent = "\n" + e.toString() + "\n")
            }, t.insertRules = function(e, t)
            {
                for (var n = 0; n < e.index.length; n++) this.insertRule(e.index[n], n, t)
            }, t.insertRule = function(e, t, n)
            {
                if (void 0 === n && (n = this.element.sheet), e.rules)
                {
                    var r = e,
                        i = n;
                    return ("conditional" !== e.type && "keyframes" !== e.type || !1 !== (i = de(n, r.toString(
                    {
                        children: !1
                    }), t))) && (this.insertRules(r.rules, i), i)
                }
                if (e.renderable && e.renderable.parentStyleSheet === this.element.sheet) return e.renderable;
                var o = e.toString();
                if (!o) return !1;
                var a = de(n, o, t);
                return !1 !== a && (this.hasInsertedRules = !0, e.renderable = a, a)
            }, t.deleteRule = function(e)
            {
                var t = this.element.sheet,
                    n = this.indexOf(e);
                return -1 !== n && (t.deleteRule(n), !0)
            }, t.indexOf = function(e)
            {
                for (var t = this.element.sheet.cssRules, n = 0; n < t.length; n++)
                    if (e === t[n]) return n;
                return -1
            }, t.replaceRule = function(e, t)
            {
                var n = this.indexOf(e);
                return -1 !== n && (this.element.sheet.deleteRule(n), this.insertRule(t, n))
            }, t.getRules = function()
            {
                return this.element.sheet.cssRules
            }, e
        }(),
        me = 0,
        ve = function()
        {
            function e(e)
            {
                this.id = me++, this.version = "10.1.1", this.plugins = new Q, this.options = {
                    id:
                    {
                        minify: !1
                    },
                    createGenerateId: ie,
                    Renderer: c ? pe : null,
                    plugins: []
                }, this.generateId = ie(
                {
                    minify: !1
                });
                for (var t = 0; t < K.length; t++) this.plugins.use(K[t],
                {
                    queue: "internal"
                });
                this.setup(e)
            }
            var t = e.prototype;
            return t.setup = function(e)
            {
                return void 0 === e && (e = {}), e.createGenerateId && (this.options.createGenerateId = e.createGenerateId), e.id && (this.options.id = Object(i.a)(
                {}, this.options.id, e.id)), (e.createGenerateId || e.id) && (this.generateId = this.options.createGenerateId(this.options.id)), null != e.insertionPoint && (this.options.insertionPoint = e.insertionPoint), "Renderer" in e && (this.options.Renderer = e.Renderer), e.plugins && this.use.apply(this, e.plugins), this
            }, t.createStyleSheet = function(e, t)
            {
                void 0 === t && (t = {});
                var n = t.index;
                "number" != typeof n && (n = 0 === ee.index ? 0 : ee.index + 1);
                var r = new Z(e, Object(i.a)(
                {}, t,
                {
                    jss: this,
                    generateId: t.generateId || this.generateId,
                    insertionPoint: this.options.insertionPoint,
                    Renderer: this.options.Renderer,
                    index: n
                }));
                return this.plugins.onProcessSheet(r), r
            }, t.removeStyleSheet = function(e)
            {
                return e.detach(), ee.remove(e), this
            }, t.createRule = function(e, t, n)
            {
                if (void 0 === t && (t = {}), void 0 === n && (n = {}), "object" == typeof e) return this.createRule(void 0, e, t);
                var r = Object(i.a)(
                {}, n,
                {
                    name: e,
                    jss: this,
                    Renderer: this.options.Renderer
                });
                r.generateId || (r.generateId = this.generateId), r.classes || (r.classes = {}), r.keyframes || (r.keyframes = {});
                var o = m(e, t, r);
                return o && this.plugins.onProcessRule(o), o
            }, t.use = function()
            {
                for (var e = this, t = arguments.length, n = new Array(t), r = 0; r < t; r++) n[r] = arguments[r];
                return n.forEach((function(t)
                {
                    e.plugins.use(t)
                })), this
            }, e
        }();
    var ge = "undefined" != typeof CSS && CSS && "number" in CSS,
        ye = function(e)
        {
            return new ve(e)
        };
    /**
     * A better abstraction over CSS.
     *
     * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
     * @website https://github.com/cssinjs/jss
     * @license MIT
     */
    ye();

    function be()
    {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
            {},
            t = e.baseClasses,
            n = e.newClasses;
        e.Component;
        if (!n) return t;
        var r = Object(i.a)(
        {}, t);
        return Object.keys(n).forEach((function(e)
        {
            n[e] && (r[e] = "".concat(t[e], " ").concat(n[e]))
        })), r
    }
    var we = {
            set: function(e, t, n, r)
            {
                var i = e.get(t);
                i || (i = new Map, e.set(t, i)), i.set(n, r)
            },
            get: function(e, t, n)
            {
                var r = e.get(t);
                return r ? r.get(n) : void 0
            },
            delete: function(e, t, n)
            {
                e.get(t).delete(n)
            }
        },
        _e = n(704),
        xe = (n(2), n(108)),
        Ee = ["checked", "disabled", "error", "focused", "focusVisible", "required", "expanded", "selected"];
    var Se = Date.now(),
        Me = "fnValues" + Se,
        Te = "fnStyle" + ++Se;
    var ke = function()
        {
            return {
                onCreateRule: function(e, t, n)
                {
                    if ("function" != typeof t) return null;
                    var r = m(e,
                    {}, n);
                    return r[Te] = t, r
                },
                onProcessStyle: function(e, t)
                {
                    if (Me in t || Te in t) return e;
                    var n = {};
                    for (var r in e)
                    {
                        var i = e[r];
                        "function" == typeof i && (delete e[r], n[r] = i)
                    }
                    return t[Me] = n, e
                },
                onUpdate: function(e, t, n, r)
                {
                    var i = t,
                        o = i[Te];
                    o && (i.style = o(e) ||
                    {});
                    var a = i[Me];
                    if (a)
                        for (var s in a) i.prop(s, a[s](e), r)
                }
            }
        },
        Ae = "@global",
        Ce = function()
        {
            function e(e, t, n)
            {
                for (var r in this.type = "global", this.at = Ae, this.rules = void 0, this.options = void 0, this.key = void 0, this.isProcessed = !1, this.key = e, this.options = n, this.rules = new J(Object(i.a)(
                    {}, n,
                    {
                        parent: this
                    })), t) this.rules.add(r, t[r]);
                this.rules.process()
            }
            var t = e.prototype;
            return t.getRule = function(e)
            {
                return this.rules.get(e)
            }, t.addRule = function(e, t, n)
            {
                var r = this.rules.add(e, t, n);
                return this.options.jss.plugins.onProcessRule(r), r
            }, t.indexOf = function(e)
            {
                return this.rules.indexOf(e)
            }, t.toString = function()
            {
                return this.rules.toString()
            }, e
        }(),
        Oe = function()
        {
            function e(e, t, n)
            {
                this.type = "global", this.at = Ae, this.options = void 0, this.rule = void 0, this.isProcessed = !1, this.key = void 0, this.key = e, this.options = n;
                var r = e.substr("@global ".length);
                this.rule = n.jss.createRule(r, t, Object(i.a)(
                {}, n,
                {
                    parent: this
                }))
            }
            return e.prototype.toString = function(e)
            {
                return this.rule ? this.rule.toString(e) : ""
            }, e
        }(),
        Pe = /\s*,\s*/g;

    function Re(e, t)
    {
        for (var n = e.split(Pe), r = "", i = 0; i < n.length; i++) r += t + " " + n[i].trim(), n[i + 1] && (r += ", ");
        return r
    }
    var Ie = function()
        {
            return {
                onCreateRule: function(e, t, n)
                {
                    if (!e) return null;
                    if (e === Ae) return new Ce(e, t, n);
                    if ("@" === e[0] && "@global " === e.substr(0, "@global ".length)) return new Oe(e, t, n);
                    var r = n.parent;
                    return r && ("global" === r.type || r.options.parent && "global" === r.options.parent.type) && (n.scoped = !1), !1 === n.scoped && (n.selector = e), null
                },
                onProcessRule: function(e)
                {
                    "style" === e.type && (function(e)
                    {
                        var t = e.options,
                            n = e.style,
                            r = n ? n[Ae] : null;
                        if (r)
                        {
                            for (var o in r) t.sheet.addRule(o, r[o], Object(i.a)(
                            {}, t,
                            {
                                selector: Re(o, e.selector)
                            }));
                            delete n[Ae]
                        }
                    }(e), function(e)
                    {
                        var t = e.options,
                            n = e.style;
                        for (var r in n)
                            if ("@" === r[0] && r.substr(0, Ae.length) === Ae)
                            {
                                var o = Re(r.substr(Ae.length), e.selector);
                                t.sheet.addRule(o, n[r], Object(i.a)(
                                {}, t,
                                {
                                    selector: o
                                })), delete n[r]
                            }
                    }(e))
                }
            }
        },
        Ne = /\s*,\s*/g,
        Le = /&/g,
        Be = /\$([\w-]+)/g;
    var je = function()
        {
            function e(e, t)
            {
                return function(n, r)
                {
                    var i = e.getRule(r) || t && t.getRule(r);
                    return i ? (i = i).selector : r
                }
            }

            function t(e, t)
            {
                for (var n = t.split(Ne), r = e.split(Ne), i = "", o = 0; o < n.length; o++)
                    for (var a = n[o], s = 0; s < r.length; s++)
                    {
                        var c = r[s];
                        i && (i += ", "), i += -1 !== c.indexOf("&") ? c.replace(Le, a) : a + " " + c
                    }
                return i
            }

            function n(e, t, n)
            {
                if (n) return Object(i.a)(
                {}, n,
                {
                    index: n.index + 1
                });
                var r = e.options.nestingLevel;
                r = void 0 === r ? 1 : r + 1;
                var o = Object(i.a)(
                {}, e.options,
                {
                    nestingLevel: r,
                    index: t.indexOf(e) + 1
                });
                return delete o.name, o
            }
            return {
                onProcessStyle: function(r, o, a)
                {
                    if ("style" !== o.type) return r;
                    var s, c, u = o,
                        l = u.options.parent;
                    for (var f in r)
                    {
                        var h = -1 !== f.indexOf("&"),
                            d = "@" === f[0];
                        if (h || d)
                        {
                            if (s = n(u, l, s), h)
                            {
                                var p = t(f, u.selector);
                                c || (c = e(l, a)), p = p.replace(Be, c), l.addRule(p, r[f], Object(i.a)(
                                {}, s,
                                {
                                    selector: p
                                }))
                            }
                            else d && l.addRule(f,
                            {}, s).addRule(u.key, r[f],
                            {
                                selector: u.selector
                            });
                            delete r[f]
                        }
                    }
                    return r
                }
            }
        },
        Fe = /[A-Z]/g,
        Ue = /^ms-/,
        De = {};

    function ze(e)
    {
        return "-" + e.toLowerCase()
    }
    var He = function(e)
    {
        if (De.hasOwnProperty(e)) return De[e];
        var t = e.replace(Fe, ze);
        return De[e] = Ue.test(t) ? "-" + t : t
    };

    function Ve(e)
    {
        var t = {};
        for (var n in e)
        {
            t[0 === n.indexOf("--") ? n : He(n)] = e[n]
        }
        return e.fallbacks && (Array.isArray(e.fallbacks) ? t.fallbacks = e.fallbacks.map(Ve) : t.fallbacks = Ve(e.fallbacks)), t
    }
    var We = function()
        {
            return {
                onProcessStyle: function(e)
                {
                    if (Array.isArray(e))
                    {
                        for (var t = 0; t < e.length; t++) e[t] = Ve(e[t]);
                        return e
                    }
                    return Ve(e)
                },
                onChangeValue: function(e, t, n)
                {
                    if (0 === t.indexOf("--")) return e;
                    var r = He(t);
                    return t === r ? e : (n.prop(r, e), null)
                }
            }
        },
        Ge = ge && CSS ? CSS.px : "px",
        qe = ge && CSS ? CSS.ms : "ms",
        $e = ge && CSS ? CSS.percent : "%";

    function Ke(e)
    {
        var t = /(-[a-z])/g,
            n = function(e)
            {
                return e[1].toUpperCase()
            },
            r = {};
        for (var i in e) r[i] = e[i], r[i.replace(t, n)] = e[i];
        return r
    }
    var Ye = Ke(
    {
        "animation-delay": qe,
        "animation-duration": qe,
        "background-position": Ge,
        "background-position-x": Ge,
        "background-position-y": Ge,
        "background-size": Ge,
        border: Ge,
        "border-bottom": Ge,
        "border-bottom-left-radius": Ge,
        "border-bottom-right-radius": Ge,
        "border-bottom-width": Ge,
        "border-left": Ge,
        "border-left-width": Ge,
        "border-radius": Ge,
        "border-right": Ge,
        "border-right-width": Ge,
        "border-top": Ge,
        "border-top-left-radius": Ge,
        "border-top-right-radius": Ge,
        "border-top-width": Ge,
        "border-width": Ge,
        margin: Ge,
        "margin-bottom": Ge,
        "margin-left": Ge,
        "margin-right": Ge,
        "margin-top": Ge,
        padding: Ge,
        "padding-bottom": Ge,
        "padding-left": Ge,
        "padding-right": Ge,
        "padding-top": Ge,
        "mask-position-x": Ge,
        "mask-position-y": Ge,
        "mask-size": Ge,
        height: Ge,
        width: Ge,
        "min-height": Ge,
        "max-height": Ge,
        "min-width": Ge,
        "max-width": Ge,
        bottom: Ge,
        left: Ge,
        top: Ge,
        right: Ge,
        "box-shadow": Ge,
        "text-shadow": Ge,
        "column-gap": Ge,
        "column-rule": Ge,
        "column-rule-width": Ge,
        "column-width": Ge,
        "font-size": Ge,
        "font-size-delta": Ge,
        "letter-spacing": Ge,
        "text-indent": Ge,
        "text-stroke": Ge,
        "text-stroke-width": Ge,
        "word-spacing": Ge,
        motion: Ge,
        "motion-offset": Ge,
        outline: Ge,
        "outline-offset": Ge,
        "outline-width": Ge,
        perspective: Ge,
        "perspective-origin-x": $e,
        "perspective-origin-y": $e,
        "transform-origin": $e,
        "transform-origin-x": $e,
        "transform-origin-y": $e,
        "transform-origin-z": $e,
        "transition-delay": qe,
        "transition-duration": qe,
        "vertical-align": Ge,
        "flex-basis": Ge,
        "shape-margin": Ge,
        size: Ge,
        grid: Ge,
        "grid-gap": Ge,
        "grid-row-gap": Ge,
        "grid-column-gap": Ge,
        "grid-template-rows": Ge,
        "grid-template-columns": Ge,
        "grid-auto-rows": Ge,
        "grid-auto-columns": Ge,
        "box-shadow-x": Ge,
        "box-shadow-y": Ge,
        "box-shadow-blur": Ge,
        "box-shadow-spread": Ge,
        "font-line-height": Ge,
        "text-shadow-x": Ge,
        "text-shadow-y": Ge,
        "text-shadow-blur": Ge
    });

    function Xe(e, t, n)
    {
        if (!t) return t;
        if (Array.isArray(t))
            for (var r = 0; r < t.length; r++) t[r] = Xe(e, t[r], n);
        else if ("object" == typeof t)
            if ("fallbacks" === e)
                for (var i in t) t[i] = Xe(i, t[i], n);
            else
                for (var o in t) t[o] = Xe(e + "-" + o, t[o], n);
        else if ("number" == typeof t)
        {
            var a = n[e] || Ye[e];
            return a ? "function" == typeof a ? a(t).toString() : "" + t + a : t.toString()
        }
        return t
    }
    var Je = function(e)
        {
            void 0 === e && (e = {});
            var t = Ke(e);
            return {
                onProcessStyle: function(e, n)
                {
                    if ("style" !== n.type) return e;
                    for (var r in e) e[r] = Xe(r, e[r], t);
                    return e
                },
                onChangeValue: function(e, n)
                {
                    return Xe(n, e, t)
                }
            }
        },
        Ze = n(41),
        Qe = "",
        et = "",
        tt = "",
        nt = c && "ontouchstart" in document.documentElement;
    if (c)
    {
        var rt = {
                Moz: "-moz-",
                ms: "-ms-",
                O: "-o-",
                Webkit: "-webkit-"
            },
            it = document.createElement("p").style;
        for (var ot in rt)
            if (ot + "Transform" in it)
            {
                Qe = ot, et = rt[ot];
                break
            }
        "Webkit" === Qe && "msHyphens" in it && (Qe = "ms", et = rt.ms, "edge"), "Webkit" === Qe && "-apple-trailing-word" in it && (tt = "apple")
    }
    var at = Qe,
        st = et,
        ct = tt,
        ut = nt;
    var lt = {
            noPrefill: ["appearance"],
            supportedProperty: function(e)
            {
                return "appearance" === e && ("ms" === at ? "-webkit-" + e : st + e)
            }
        },
        ft = {
            noPrefill: ["color-adjust"],
            supportedProperty: function(e)
            {
                return "color-adjust" === e && ("Webkit" === at ? st + "print-" + e : e)
            }
        },
        ht = /[-\s]+(.)?/g;

    function dt(e, t)
    {
        return t ? t.toUpperCase() : ""
    }

    function pt(e)
    {
        return e.replace(ht, dt)
    }

    function mt(e)
    {
        return pt("-" + e)
    }
    var vt, gt = {
            noPrefill: ["mask"],
            supportedProperty: function(e, t)
            {
                if (!/^mask/.test(e)) return !1;
                if ("Webkit" === at)
                {
                    if (pt("mask-image") in t) return e;
                    if (at + mt("mask-image") in t) return st + e
                }
                return e
            }
        },
        yt = {
            noPrefill: ["text-orientation"],
            supportedProperty: function(e)
            {
                return "text-orientation" === e && ("apple" !== ct || ut ? e : st + e)
            }
        },
        bt = {
            noPrefill: ["transform"],
            supportedProperty: function(e, t, n)
            {
                return "transform" === e && (n.transform ? e : st + e)
            }
        },
        wt = {
            noPrefill: ["transition"],
            supportedProperty: function(e, t, n)
            {
                return "transition" === e && (n.transition ? e : st + e)
            }
        },
        _t = {
            noPrefill: ["writing-mode"],
            supportedProperty: function(e)
            {
                return "writing-mode" === e && ("Webkit" === at || "ms" === at ? st + e : e)
            }
        },
        xt = {
            noPrefill: ["user-select"],
            supportedProperty: function(e)
            {
                return "user-select" === e && ("Moz" === at || "ms" === at || "apple" === ct ? st + e : e)
            }
        },
        Et = {
            supportedProperty: function(e, t)
            {
                return !!/^break-/.test(e) && ("Webkit" === at ? "WebkitColumn" + mt(e) in t && st + "column-" + e : "Moz" === at && ("page" + mt(e) in t && "page-" + e))
            }
        },
        St = {
            supportedProperty: function(e, t)
            {
                if (!/^(border|margin|padding)-inline/.test(e)) return !1;
                if ("Moz" === at) return e;
                var n = e.replace("-inline", "");
                return at + mt(n) in t && st + n
            }
        },
        Mt = {
            supportedProperty: function(e, t)
            {
                return pt(e) in t && e
            }
        },
        Tt = {
            supportedProperty: function(e, t)
            {
                var n = mt(e);
                return "-" === e[0] || "-" === e[0] && "-" === e[1] ? e : at + n in t ? st + e : "Webkit" !== at && "Webkit" + n in t && "-webkit-" + e
            }
        },
        kt = {
            supportedProperty: function(e)
            {
                return "scroll-snap" === e.substring(0, 11) && ("ms" === at ? "" + st + e : e)
            }
        },
        At = {
            supportedProperty: function(e)
            {
                return "overscroll-behavior" === e && ("ms" === at ? st + "scroll-chaining" : e)
            }
        },
        Ct = {
            "flex-grow": "flex-positive",
            "flex-shrink": "flex-negative",
            "flex-basis": "flex-preferred-size",
            "justify-content": "flex-pack",
            order: "flex-order",
            "align-items": "flex-align",
            "align-content": "flex-line-pack"
        },
        Ot = {
            supportedProperty: function(e, t)
            {
                var n = Ct[e];
                return !!n && (at + mt(n) in t && st + n)
            }
        },
        Pt = {
            flex: "box-flex",
            "flex-grow": "box-flex",
            "flex-direction": ["box-orient", "box-direction"],
            order: "box-ordinal-group",
            "align-items": "box-align",
            "flex-flow": ["box-orient", "box-direction"],
            "justify-content": "box-pack"
        },
        Rt = Object.keys(Pt),
        It = function(e)
        {
            return st + e
        },
        Nt = [lt, ft, gt, yt, bt, wt, _t, xt, Et, St, Mt, Tt, kt, At, Ot,
        {
            supportedProperty: function(e, t, n)
            {
                var r = n.multiple;
                if (Rt.indexOf(e) > -1)
                {
                    var i = Pt[e];
                    if (!Array.isArray(i)) return at + mt(i) in t && st + i;
                    if (!r) return !1;
                    for (var o = 0; o < i.length; o++)
                        if (!(at + mt(i[0]) in t)) return !1;
                    return i.map(It)
                }
                return !1
            }
        }],
        Lt = Nt.filter((function(e)
        {
            return e.supportedProperty
        })).map((function(e)
        {
            return e.supportedProperty
        })),
        Bt = Nt.filter((function(e)
        {
            return e.noPrefill
        })).reduce((function(e, t)
        {
            return e.push.apply(e, Object(Ze.a)(t.noPrefill)), e
        }), []),
        jt = {};
    if (c)
    {
        vt = document.createElement("p");
        var Ft = window.getComputedStyle(document.documentElement, "");
        for (var Ut in Ft) isNaN(Ut) || (jt[Ft[Ut]] = Ft[Ut]);
        Bt.forEach((function(e)
        {
            return delete jt[e]
        }))
    }

    function Dt(e, t)
    {
        if (void 0 === t && (t = {}), !vt) return e;
        if (null != jt[e]) return jt[e];
        "transition" !== e && "transform" !== e || (t[e] = e in vt.style);
        for (var n = 0; n < Lt.length && (jt[e] = Lt[n](e, vt.style, t), !jt[e]); n++);
        try
        {
            vt.style[e] = ""
        }
        catch (e)
        {
            return !1
        }
        return jt[e]
    }
    var zt, Ht = {},
        Vt = {
            transition: 1,
            "transition-property": 1,
            "-webkit-transition": 1,
            "-webkit-transition-property": 1
        },
        Wt = /(^\s*[\w-]+)|, (\s*[\w-]+)(?![^()]*\))/g;

    function Gt(e, t, n)
    {
        if ("var" === t) return "var";
        if ("all" === t) return "all";
        if ("all" === n) return ", all";
        var r = t ? Dt(t) : ", " + Dt(n);
        return r || (t || n)
    }

    function qt(e, t)
    {
        var n = t;
        if (!zt || "content" === e) return t;
        if ("string" != typeof n || !isNaN(parseInt(n, 10))) return n;
        var r = e + n;
        if (null != Ht[r]) return Ht[r];
        try
        {
            zt.style[e] = n
        }
        catch (e)
        {
            return Ht[r] = !1, !1
        }
        if (Vt[e]) n = n.replace(Wt, Gt);
        else if ("" === zt.style[e] && ("-ms-flex" === (n = st + n) && (zt.style[e] = "-ms-flexbox"), zt.style[e] = n, "" === zt.style[e])) return Ht[r] = !1, !1;
        return zt.style[e] = "", Ht[r] = n, Ht[r]
    }
    c && (zt = document.createElement("p"));
    var $t = function()
    {
        function e(t)
        {
            for (var n in t)
            {
                var r = t[n];
                if ("fallbacks" === n && Array.isArray(r)) t[n] = r.map(e);
                else
                {
                    var i = !1,
                        o = Dt(n);
                    o && o !== n && (i = !0);
                    var a = !1,
                        s = qt(o, g(r));
                    s && s !== r && (a = !0), (i || a) && (i && delete t[n], t[o || n] = s || r)
                }
            }
            return t
        }
        return {
            onProcessRule: function(e)
            {
                if ("keyframes" === e.type)
                {
                    var t = e;
                    t.at = "-" === (n = t.at)[1] || "ms" === at ? n : "@" + st + "keyframes" + n.substr(10)
                }
                var n
            },
            onProcessStyle: function(t, n)
            {
                return "style" !== n.type ? t : e(t)
            },
            onChangeValue: function(e, t)
            {
                return qt(t, g(e)) || e
            }
        }
    };
    var Kt = function()
    {
        var e = function(e, t)
        {
            return e.length === t.length ? e > t ? 1 : -1 : e.length - t.length
        };
        return {
            onProcessStyle: function(t, n)
            {
                if ("style" !== n.type) return t;
                for (var r = {}, i = Object.keys(t).sort(e), o = 0; o < i.length; o++) r[i[o]] = t[i[o]];
                return r
            }
        }
    };

    function Yt()
    {
        return {
            plugins: [ke(), Ie(), je(), We(), Je(), "undefined" == typeof window ? null : $t(), Kt()]
        }
    }
    var Xt = ye(Yt()),
        Jt = {
            disableGeneration: !1,
            generateClassName: function()
            {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
                    {},
                    t = e.disableGlobal,
                    n = void 0 !== t && t,
                    r = e.productionPrefix,
                    i = void 0 === r ? "jss" : r,
                    o = e.seed,
                    a = void 0 === o ? "" : o,
                    s = "" === a ? "" : "".concat(a, "-"),
                    c = 0;
                return function(e, t)
                {
                    c += 1;
                    var r = t.options.name;
                    if (r && 0 === r.indexOf("Mui") && !t.options.link && !n)
                    {
                        if (-1 !== Ee.indexOf(e.key)) return "Mui-".concat(e.key);
                        var o = "".concat(s).concat(r, "-").concat(e.key);
                        return t.options.theme[xe.a] && "" === a ? "".concat(o, "-").concat(c) : o
                    }
                    return "".concat(s).concat(i).concat(c)
                }
            }(),
            jss: Xt,
            sheetsCache: null,
            sheetsManager: new Map,
            sheetsRegistry: null
        },
        Zt = a.a.createContext(Jt);
    var Qt = -1e9;

    function en()
    {
        return Qt += 1
    }
    n(91);
    var tn = n(649);

    function nn(e)
    {
        var t = "function" == typeof e;
        return {
            create: function(n, r)
            {
                var o;
                try
                {
                    o = t ? e(n) : e
                }
                catch (e)
                {
                    throw e
                }
                if (!r || !n.overrides || !n.overrides[r]) return o;
                var a = n.overrides[r],
                    s = Object(i.a)(
                    {}, o);
                return Object.keys(a).forEach((function(e)
                {
                    s[e] = Object(tn.a)(s[e], a[e])
                })), s
            },
            options:
            {}
        }
    }
    var rn = {};

    function on(e, t, n)
    {
        var r = e.state;
        if (e.stylesOptions.disableGeneration) return t ||
        {};
        r.cacheClasses || (r.cacheClasses = {
            value: null,
            lastProp: null,
            lastJSS:
            {}
        });
        var i = !1;
        return r.classes !== r.cacheClasses.lastJSS && (r.cacheClasses.lastJSS = r.classes, i = !0), t !== r.cacheClasses.lastProp && (r.cacheClasses.lastProp = t, i = !0), i && (r.cacheClasses.value = be(
        {
            baseClasses: r.cacheClasses.lastJSS,
            newClasses: t,
            Component: n
        })), r.cacheClasses.value
    }

    function an(e, t)
    {
        var n = e.state,
            r = e.theme,
            o = e.stylesOptions,
            a = e.stylesCreator,
            s = e.name;
        if (!o.disableGeneration)
        {
            var c = we.get(o.sheetsManager, a, r);
            c || (c = {
                refs: 0,
                staticSheet: null,
                dynamicStyles: null
            }, we.set(o.sheetsManager, a, r, c));
            var u = Object(i.a)(
            {}, a.options,
            {}, o,
            {
                theme: r,
                flip: "boolean" == typeof o.flip ? o.flip : "rtl" === r.direction
            });
            u.generateId = u.serverGenerateClassName || u.generateClassName;
            var l = o.sheetsRegistry;
            if (0 === c.refs)
            {
                var f;
                o.sheetsCache && (f = we.get(o.sheetsCache, a, r));
                var h = a.create(r, s);
                f || ((f = o.jss.createStyleSheet(h, Object(i.a)(
                {
                    link: !1
                }, u))).attach(), o.sheetsCache && we.set(o.sheetsCache, a, r, f)), l && l.add(f), c.staticSheet = f, c.dynamicStyles = function e(t)
                {
                    var n = null;
                    for (var r in t)
                    {
                        var i = t[r],
                            o = typeof i;
                        if ("function" === o) n || (n = {}), n[r] = i;
                        else if ("object" === o && null !== i && !Array.isArray(i))
                        {
                            var a = e(i);
                            a && (n || (n = {}), n[r] = a)
                        }
                    }
                    return n
                }(h)
            }
            if (c.dynamicStyles)
            {
                var d = o.jss.createStyleSheet(c.dynamicStyles, Object(i.a)(
                {
                    link: !0
                }, u));
                d.update(t), d.attach(), n.dynamicSheet = d, n.classes = be(
                {
                    baseClasses: c.staticSheet.classes,
                    newClasses: d.classes
                }), l && l.add(d)
            }
            else n.classes = c.staticSheet.classes;
            c.refs += 1
        }
    }

    function sn(e, t)
    {
        var n = e.state;
        n.dynamicSheet && n.dynamicSheet.update(t)
    }

    function cn(e)
    {
        var t = e.state,
            n = e.theme,
            r = e.stylesOptions,
            i = e.stylesCreator;
        if (!r.disableGeneration)
        {
            var o = we.get(r.sheetsManager, i, n);
            o.refs -= 1;
            var a = r.sheetsRegistry;
            0 === o.refs && (we.delete(r.sheetsManager, i, n), r.jss.removeStyleSheet(o.staticSheet), a && a.remove(o.staticSheet)), t.dynamicSheet && (r.jss.removeStyleSheet(t.dynamicSheet), a && a.remove(t.dynamicSheet))
        }
    }

    function un(e, t)
    {
        var n, r = a.a.useRef([]),
            i = a.a.useMemo((function()
            {
                return {}
            }), t);
        r.current !== i && (r.current = i, n = e()), a.a.useEffect((function()
        {
            return function()
            {
                n && n()
            }
        }), [i])
    }

    function ln(e)
    {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] :
            {},
            n = t.name,
            o = t.classNamePrefix,
            s = t.Component,
            c = t.defaultTheme,
            u = void 0 === c ? rn : c,
            l = Object(r.a)(t, ["name", "classNamePrefix", "Component", "defaultTheme"]),
            f = nn(e),
            h = n || o || "makeStyles";
        return f.options = {
                index: en(),
                name: n,
                meta: h,
                classNamePrefix: h
            },
            function()
            {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] :
                    {},
                    t = Object(_e.a)() || u,
                    r = Object(i.a)(
                    {}, a.a.useContext(Zt),
                    {}, l),
                    o = a.a.useRef(),
                    c = a.a.useRef();
                return un((function()
                {
                    var i = {
                        name: n,
                        state:
                        {},
                        stylesCreator: f,
                        stylesOptions: r,
                        theme: t
                    };
                    return an(i, e), c.current = !1, o.current = i,
                        function()
                        {
                            cn(i)
                        }
                }), [t, f]), a.a.useEffect((function()
                {
                    c.current && sn(o.current, e), c.current = !0
                })), on(o.current, e.classes, s)
            }
    }
},
function(e, t, n)
{
    "use strict";
    n.d(t, "a", (function()
    {
        return d
    }));
    var r = n(111),
        i = n(109),
        o = n(49);
    var a, s, c = {
            m: "margin",
            p: "padding"
        },
        u = {
            t: "Top",
            r: "Right",
            b: "Bottom",
            l: "Left",
            x: ["Left", "Right"],
            y: ["Top", "Bottom"]
        },
        l = {
            marginX: "mx",
            marginY: "my",
            paddingX: "px",
            paddingY: "py"
        },
        f = (a = function(e)
        {
            if (e.length > 2)
            {
                if (!l[e]) return [e];
                e = l[e]
            }
            var t = e.split(""),
                n = Object(r.a)(t, 2),
                i = n[0],
                o = n[1],
                a = c[i],
                s = u[o] || "";
            return Array.isArray(s) ? s.map((function(e)
            {
                return a + e
            })) : [a + s]
        }, s = {}, function(e)
        {
            return void 0 === s[e] && (s[e] = a(e)), s[e]
        }),
        h = ["m", "mt", "mr", "mb", "ml", "mx", "my", "p", "pt", "pr", "pb", "pl", "px", "py", "margin", "marginTop", "marginRight", "marginBottom", "marginLeft", "marginX", "marginY", "padding", "paddingTop", "paddingRight", "paddingBottom", "paddingLeft", "paddingX", "paddingY"];

    function d(e)
    {
        var t = e.spacing || 8;
        return "number" == typeof t ? function(e)
        {
            return t * e
        } : Array.isArray(t) ? function(e)
        {
            return t[e]
        } : "function" == typeof t ? t : function() {}
    }

    function p(e, t)
    {
        return function(n)
        {
            return e.reduce((function(e, r)
            {
                return e[r] = function(e, t)
                {
                    if ("string" == typeof t) return t;
                    var n = e(Math.abs(t));
                    return t >= 0 ? n : "number" == typeof n ? -n : "-".concat(n)
                }(t, n), e
            }),
            {})
        }
    }

    function m(e)
    {
        var t = d(e.theme);
        return Object.keys(e).map((function(n)
        {
            if (-1 === h.indexOf(n)) return null;
            var r = p(f(n), t),
                o = e[n];
            return Object(i.a)(e, o, r)
        })).reduce(o.a,
        {})
    }
    m.propTypes = {}, m.filterProps = h;
    t.b = m
}]);